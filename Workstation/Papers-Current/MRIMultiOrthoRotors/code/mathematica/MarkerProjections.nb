(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    304727,       6031]
NotebookOptionsPosition[    301773,       5929]
NotebookOutlinePosition[    302128,       5945]
CellTagsIndexPosition[    302085,       5942]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Projection of a circle onto a line", "Section",
 CellChangeTimes->{{3.600275951927066*^9, 3.600275966588489*^9}}],

Cell[BoxData[
 RowBox[{"equation", " ", "of", " ", "a", " ", "circle"}]], "Input",
 CellChangeTimes->{{3.600275972516452*^9, 3.600275975457755*^9}}],

Cell[BoxData[
 RowBox[{"P", "=", 
  RowBox[{
   RowBox[{"R", " ", 
    RowBox[{"Cos", "[", "t", "]"}], "u"}], " ", "+", " ", 
   RowBox[{"R", " ", 
    RowBox[{"sin", "[", "t", "]"}], 
    RowBox[{"n", "\[Cross]", "u"}]}], "+", "C"}]}]], "Input",
 CellChangeTimes->{{3.600276639722104*^9, 3.600276715648048*^9}}],

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "u", "]"}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "u", "]"}], "+", 
      RowBox[{"Cos", "[", "v", "]"}]}], ",", 
     RowBox[{"Sin", "[", "v", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600276580196885*^9, 3.600276583874858*^9}}],

Cell[BoxData[
 RowBox[{"projection", " ", "of", " ", "circle", " ", "onto", " ", "a", " ", 
  "line"}]], "Input",
 CellChangeTimes->{{3.600275978344934*^9, 3.600275983089727*^9}}],

Cell[TextData[{
 "To uniquely identify the angle of a marker, we need\n 1.) to know the \
center of its circle  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["C", "xyz"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", \n 2.) at least two non-parallel, nonsingular (not parallel with normal \
to circle ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["n", "c"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "), scans that do not overlap other marker paths. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "1"], 
    SubscriptBox["p", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n \n Parallel if cross product is zero.\n",
 "|uxv|\t=\t|u||v|sintheta"
}], "Text",
 CellChangeTimes->{{3.600275987726309*^9, 3.6002761061120777`*^9}, {
  3.6003860858159733`*^9, 3.600386127500338*^9}, {3.600386250297124*^9, 
  3.600386279601571*^9}, {3.600386353246314*^9, 3.6003864013308277`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"|", 
   RowBox[{"u", "\[Cross]", "v"}], "|"}], " ", "=", " ", 
  RowBox[{"|", "u", "|", "  ", "|", "v", "|", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600386406759479*^9, 3.6003864295753603`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", "B"}], " ", "=", " ", 
  RowBox[{"||", "A", "||", " ", "||", "B", "||", " ", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "  ", 
    RowBox[{"(", 
     RowBox[{"zero", " ", "if", " ", "perpendicular"}], ")"}]}]}]}]], "Input",\

 CellChangeTimes->{{3.6003860140261297`*^9, 3.6003860443039427`*^9}, {
  3.6003861340246077`*^9, 3.6003861898610497`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "The", " ", "size", " ", "of", " ", "the", " ", "projection", " ", "is", 
   " ", "2", "r", " ", 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
  RowBox[{
  "where", " ", "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", 
   "between", " ", "n", " ", "and", " ", 
   RowBox[{
    SubscriptBox["p", "i"], ".", "  ", "The"}], " ", "center", " ", "of", " ",
    "the", " ", "projection", " ", "is", " ", "at", "  ", 
   RowBox[{
    SubscriptBox["C", "xyz"], ".", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.6003862110903788`*^9, 3.60038624738686*^9}, {
  3.600386459461914*^9, 3.600386478269846*^9}, {3.600386511972867*^9, 
  3.600386533519099*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{"d", ",", "e", ",", "f"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.600386023025839*^9, 3.600386040552647*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "d"}], "+", 
  RowBox[{"b", " ", "e"}], "+", 
  RowBox[{"c", " ", "f"}]}]], "Output",
 CellChangeTimes->{{3.600386034583995*^9, 3.600386040994145*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"C3", ",", "n", ",", "u", ",", "v", ",", "lat", ",", "long"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"C3", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         "Cz"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"long", " ", "=", " ", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lat", " ", "=", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"v", " ", "=", "  ", 
        RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"C3", "+", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"Blue", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "C3"}], "}"}], 
             "]"}], ",", "\[IndentingNewLine]", "Red", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"C3", ",", 
               RowBox[{"C3", "+", "n"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", "Purple", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"C3", ",", 
               RowBox[{"C3", "+", "u"}]}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", "Green", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"C3", ",", 
               RowBox[{"C3", "+", "v"}]}], "}"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", 
        "}"}], "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Cxy", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<\!\(\*
StyleBox[SubscriptBox[\"C\", \"xy\"],
Background->RGBColor[0.87, 0.94, 1]]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n12", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<n\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Cz", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(C\), \(z\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "VerticalSlider"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.60028397031595*^9, 3.600284184508217*^9}, {
   3.600292294233811*^9, 3.6002922987335033`*^9}, 3.600293039465336*^9, {
   3.600293070838415*^9, 3.600293101587483*^9}, {3.6002935164547567`*^9, 
   3.600293550166191*^9}, {3.600293610608541*^9, 3.600293731400072*^9}, {
   3.60029389732096*^9, 3.600293940198566*^9}, {3.600293976191718*^9, 
   3.600293985983939*^9}, {3.600294052584127*^9, 3.6002941986667557`*^9}, {
   3.60029462536876*^9, 3.600294694030149*^9}, {3.600294727247658*^9, 
   3.6002949306585712`*^9}, {3.600294980532967*^9, 3.6002950219136972`*^9}, {
   3.600295063075889*^9, 3.6002950917194347`*^9}, {3.600295131444007*^9, 
   3.600295219387466*^9}, 3.6002952566696453`*^9, {3.600295312180291*^9, 
   3.6002954172479486`*^9}, {3.600295492547522*^9, 3.600295512075149*^9}, {
   3.60029555695121*^9, 3.6002955795238523`*^9}, {3.600295801362145*^9, 
   3.600295860305666*^9}, {3.600295947273077*^9, 3.6002959479131613`*^9}, {
   3.600296089183877*^9, 3.6002961565174026`*^9}, {3.600296205222391*^9, 
   3.600296230491247*^9}, {3.600296277339213*^9, 3.600296302996613*^9}, {
   3.6002963403375273`*^9, 3.6002963594216013`*^9}, {3.600296398195991*^9, 
   3.600296402631254*^9}, {3.600297633585506*^9, 3.6002976511766*^9}, {
   3.6002978686061296`*^9, 3.600297875875389*^9}, {3.6003645110139713`*^9, 
   3.600364758121974*^9}, {3.600364791120772*^9, 3.6003647924323874`*^9}, {
   3.600430291703041*^9, 3.600430297906057*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
    0, $CellContext`n12$$ = {0, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Row[{}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`Cxy$$], {0, 0}, 
       "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)"}, {-1, -1}, {1, 1}}, {{
       Hold[$CellContext`n12$$], {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}}, {{
       Hold[$CellContext`Cz$$], 0, "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 
      1}}, Typeset`size$$ = {360., {203., 208.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Cxy$719$$ = {0, 0}, $CellContext`n12$720$$ = {0, 
    0}, $CellContext`Cz$721$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
        0, $CellContext`n12$$ = {0, 0}}, "ControllerVariables" :> {
        Hold[$CellContext`Cxy$$, $CellContext`Cxy$719$$, {0, 0}], 
        Hold[$CellContext`n12$$, $CellContext`n12$720$$, {0, 0}], 
        Hold[$CellContext`Cz$$, $CellContext`Cz$721$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`C3$, $CellContext`n$, $CellContext`u$, \
$CellContext`v$, $CellContext`lat$, $CellContext`long$}, $CellContext`C3$ = {
           Part[$CellContext`Cxy$$, 1], 
           
           Part[$CellContext`Cxy$$, 
            2], $CellContext`Cz$$}; $CellContext`long$ = 
         Part[$CellContext`n12$$, 1]; $CellContext`lat$ = 
         Part[$CellContext`n12$$, 2]; $CellContext`n$ = {
          Cos[$CellContext`long$] Sin[$CellContext`lat$], 
           Sin[$CellContext`long$] Sin[$CellContext`lat$], 
           Cos[$CellContext`lat$]}; $CellContext`u$ = {-
           Sin[$CellContext`long$], 
           Cos[$CellContext`long$], 0}; $CellContext`v$ = {
          Cos[$CellContext`long$] Cos[$CellContext`lat$], 
           Cos[$CellContext`lat$] Sin[$CellContext`long$], -
           Sin[$CellContext`lat$]}; Show[{
           
           ParametricPlot3D[$CellContext`C3$ + 
            Cos[$CellContext`\[Theta]] $CellContext`u$ + 
            Sin[$CellContext`\[Theta]] $CellContext`v$, \
{$CellContext`\[Theta], 0, 2 Pi}, PlotStyle -> Thick, 
            PlotRange -> {{-2, 2}, {-2, 2}, {-2, 2}}], 
           Graphics3D[{Blue, 
             Arrow[{{0, 0, 0}, $CellContext`C3$}], Red, 
             Arrow[{$CellContext`C3$, $CellContext`C3$ + $CellContext`n$}], 
             Purple, 
             Arrow[{$CellContext`C3$, $CellContext`C3$ + $CellContext`u$}], 
             Green, 
             
             Arrow[{$CellContext`C3$, $CellContext`C3$ + \
$CellContext`v$}]}]}]], "Specifications" :> {
        Row[{}], {{$CellContext`Cxy$$, {0, 0}, 
          "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)"}, {-1, -1}, {1, 1}, ControlType -> 
         Slider2D}, {{$CellContext`n12$$, {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}, 
         ControlType -> 
         Slider2D}, {{$CellContext`Cz$$, 0, 
          "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 1, ControlType -> 
         VerticalSlider, ControlPlacement -> Left}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{447., {319., 325.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.600284019469563*^9, {3.6002840560213223`*^9, 3.600284090523671*^9}, {
   3.6002841244676943`*^9, 3.6002841849571466`*^9}, {3.6002922992800617`*^9, 
   3.6002923024220457`*^9}, {3.6002930401169786`*^9, 3.600293102187187*^9}, {
   3.6002935396268053`*^9, 3.6002935506328497`*^9}, {3.600293611605102*^9, 
   3.600293633603846*^9}, 3.6002936897747993`*^9, {3.600293919602428*^9, 
   3.600293940541724*^9}, 3.600294002690563*^9, {3.600294181253577*^9, 
   3.600294187135363*^9}, 3.600294934284522*^9, 3.600295022632848*^9, {
   3.6002950749042664`*^9, 3.60029509241029*^9}, {3.6002951334517193`*^9, 
   3.600295162700845*^9}, 3.600295221937462*^9, 3.600295257426837*^9, {
   3.600295304368359*^9, 3.600295323725163*^9}, 3.600295371899317*^9, 
   3.600295417858568*^9, {3.600295493241884*^9, 3.600295512689775*^9}, 
   3.600295580732774*^9, {3.6002961019865522`*^9, 3.6002961570499897`*^9}, {
   3.600296230959025*^9, 3.600296303804483*^9}, {3.600296351934724*^9, 
   3.6002963605864964`*^9}, 3.600296403376444*^9, 3.6002976519814177`*^9, 
   3.600297876594037*^9, 3.600364716957912*^9, {3.600364758426443*^9, 
   3.6003647928142023`*^9}, 3.609170203409712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tr", ",", "C3", ",", "n", ",", "u", ",", "v", ",", "lat", ",", 
       "long"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tr", " ", "=", " ", 
       RowBox[{"1", "/", "12"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"radius", " ", "of", " ", "torus"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"C3", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         "Cz"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"lat", " ", "=", " ", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"long", " ", "=", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"Cos", "[", "long", "]"}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"Cos", "[", "lat", "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Cos", "[", "long", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "long", "]"}]}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"v", " ", "=", "  ", 
        RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"C3", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"tr", " ", 
                RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"tr", " ", 
                RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"n", "\[Cross]", "u"}]}], " ", "+", 
            RowBox[{"tr", " ", 
             RowBox[{"Sin", "[", "v", "]"}], "n"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "0.05", "]"}], ",", 
            "\[IndentingNewLine]", "Blue", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "C3"}], 
                "}"}], ",", "0.04"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", "Red", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "n"}]}], "}"}], ",", "0.04"}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", "Purple", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "u"}]}], "}"}], ",", "0.03"}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", "Green", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "v"}]}], "}"}], ",", "0.03"}], "]"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"project", " ", "onto", " ", "a", " ", "line"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Cxy", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<\!\(\*
StyleBox[SubscriptBox[\"C\", \"xy\"],
Background->RGBColor[0.87, 0.94, 1]]\)\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n12", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<n\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Cz", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(C\), \(z\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "VerticalSlider"}], ",", 
     RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.60028397031595*^9, 3.600284184508217*^9}, {
   3.600292294233811*^9, 3.6002922987335033`*^9}, 3.600293039465336*^9, {
   3.600293070838415*^9, 3.600293101587483*^9}, {3.6002935164547567`*^9, 
   3.600293550166191*^9}, {3.600293610608541*^9, 3.600293731400072*^9}, {
   3.60029389732096*^9, 3.600293940198566*^9}, {3.600293976191718*^9, 
   3.600293985983939*^9}, {3.600294052584127*^9, 3.6002941986667557`*^9}, {
   3.60029462536876*^9, 3.600294694030149*^9}, {3.600294727247658*^9, 
   3.6002949306585712`*^9}, {3.600294980532967*^9, 3.6002950219136972`*^9}, {
   3.600295063075889*^9, 3.6002950917194347`*^9}, {3.600295131444007*^9, 
   3.600295219387466*^9}, 3.6002952566696453`*^9, {3.600295312180291*^9, 
   3.6002954172479486`*^9}, {3.600295492547522*^9, 3.600295512075149*^9}, {
   3.60029555695121*^9, 3.6002955795238523`*^9}, {3.600295801362145*^9, 
   3.600295860305666*^9}, {3.600295947273077*^9, 3.6002959479131613`*^9}, {
   3.600296089183877*^9, 3.6002961565174026`*^9}, {3.600296205222391*^9, 
   3.600296230491247*^9}, {3.600296277339213*^9, 3.600296302996613*^9}, {
   3.6002963403375273`*^9, 3.6002963594216013`*^9}, {3.600296398195991*^9, 
   3.600296402631254*^9}, {3.600296663826765*^9, 3.600296735869361*^9}, {
   3.600296773048375*^9, 3.6002969559795713`*^9}, {3.6002976556354094`*^9, 
   3.600297728801958*^9}, {3.600297763244152*^9, 3.600297772873021*^9}, {
   3.600364855572456*^9, 3.600364932061878*^9}, {3.600364989451779*^9, 
   3.600365046590735*^9}, {3.600365108775076*^9, 3.6003651101184673`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
    0, $CellContext`n12$$ = {0, 0}, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Cxy$$], {0, 0}, 
       "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)"}, {-1, -1}, {1, 1}}, {{
       Hold[$CellContext`n12$$], {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}}, {{
       Hold[$CellContext`Cz$$], 0, "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 
      1}}, Typeset`size$$ = {360., {202., 206.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Cxy$275329$$ = {0, 0}, $CellContext`n12$275330$$ = {0, 
    0}, $CellContext`Cz$275331$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
        0, $CellContext`n12$$ = {0, 0}}, "ControllerVariables" :> {
        Hold[$CellContext`Cxy$$, $CellContext`Cxy$275329$$, {0, 0}], 
        Hold[$CellContext`n12$$, $CellContext`n12$275330$$, {0, 0}], 
        Hold[$CellContext`Cz$$, $CellContext`Cz$275331$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`tr$, $CellContext`C3$, $CellContext`n$, \
$CellContext`u$, $CellContext`v$, $CellContext`lat$, $CellContext`long$}, \
$CellContext`tr$ = 1/12; $CellContext`C3$ = {
           Part[$CellContext`Cxy$$, 1], 
           Part[$CellContext`Cxy$$, 2], $CellContext`Cz$$}; $CellContext`lat$ = 
         Part[$CellContext`n12$$, 1]; $CellContext`long$ = 
         Part[$CellContext`n12$$, 2]; $CellContext`n$ = {
          Cos[$CellContext`lat$] Sin[$CellContext`long$], 
           Sin[$CellContext`lat$] Sin[$CellContext`long$], 
           Cos[$CellContext`long$]}; $CellContext`u$ = {-
           Sin[$CellContext`lat$], 
           Cos[$CellContext`lat$], 0}; $CellContext`v$ = {
          Cos[$CellContext`lat$] Cos[$CellContext`long$], 
           Cos[$CellContext`long$] Sin[$CellContext`lat$], -
           Sin[$CellContext`long$]}; Show[{
           
           ParametricPlot3D[$CellContext`C3$ + ((
               1 + $CellContext`tr$ Cos[$CellContext`v$]) 
              Cos[$CellContext`\[Theta]]) $CellContext`u$ + ((
               1 + $CellContext`tr$ Cos[$CellContext`v$]) 
              Sin[$CellContext`\[Theta]]) 
             Cross[$CellContext`n$, $CellContext`u$] + ($CellContext`tr$ 
              Sin[$CellContext`v$]) $CellContext`n$, {$CellContext`\[Theta], 
             0, 2 Pi}, {$CellContext`v$, 0, 2 Pi}, Mesh -> None, 
            PlotRange -> {{-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}, {-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}, {-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}}], 
           Graphics3D[{
             Arrowheads[0.05], Blue, 
             Arrow[
              Tube[{{0, 0, 0}, $CellContext`C3$}, 0.04]], Red, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`n$}, 
               0.04]], Purple, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`u$}, 
               0.03]], Green, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`v$}, 
               0.03]]}]}]], 
      "Specifications" :> {{{$CellContext`Cxy$$, {0, 0}, 
          "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)"}, {-1, -1}, {1, 1}, ControlType -> 
         Slider2D}, {{$CellContext`n12$$, {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}, 
         ControlType -> 
         Slider2D}, {{$CellContext`Cz$$, 0, 
          "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 1, ControlType -> 
         VerticalSlider, ControlPlacement -> Left}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{447., {314., 320.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.600296709297296*^9, 3.6002967367232847`*^9}, {
   3.600296778925007*^9, 3.6002967857898483`*^9}, {3.600296820323906*^9, 
   3.600296871740715*^9}, 3.600296956966835*^9, {3.60029766854321*^9, 
   3.600297729397278*^9}, 3.600297773649047*^9, {3.6003648799453907`*^9, 
   3.60036493241531*^9}, {3.600365004027731*^9, 3.600365046904702*^9}}]
}, {2}]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"lat", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"long", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6003643475943623`*^9, 3.6003644624184103`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"Cos", "[", "lat", "]"}], " ", 
       RowBox[{"Cos", "[", "long", "]"}]}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "lat", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "lat", "]"}], " ", 
       RowBox[{"Sin", "[", "long", "]"}]}]},
     {
      RowBox[{
       RowBox[{"Cos", "[", "long", "]"}], " ", 
       RowBox[{"Sin", "[", "lat", "]"}]}], 
      RowBox[{"Cos", "[", "lat", "]"}], 
      RowBox[{
       RowBox[{"Sin", "[", "lat", "]"}], " ", 
       RowBox[{"Sin", "[", "long", "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "long", "]"}]}], "0", 
      RowBox[{"Cos", "[", "long", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6003643973785887`*^9, 3.6003644024388*^9}, {
  3.6003644352504597`*^9, 3.600364462879678*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tr", ",", "C3", ",", "n", ",", "u", ",", "v", ",", "lat", ",", "long", 
       ",", "projV"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tr", " ", "=", " ", 
       RowBox[{"1", "/", "16"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"radius", " ", "of", " ", "torus"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"C3", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "Cxy", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
         "Cz"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"long", " ", "=", " ", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"lat", " ", "=", 
       RowBox[{
       "n12", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"v", " ", "=", "  ", 
        RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"projV", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", " ", 
           RowBox[{
           "proj", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
           "proj", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
           "proj", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{
           "proj", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "]"}]}], ",", 
         RowBox[{"Cos", "[", 
          RowBox[{
          "proj", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Column", "[", "{"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Show", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ParametricPlot3D", "[", 
          RowBox[{
           RowBox[{"C3", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"tr", " ", 
                RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"tr", " ", 
                RowBox[{"Cos", "[", "v", "]"}]}]}], ")"}], 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
             RowBox[{"n", "\[Cross]", "u"}]}], " ", "+", 
            RowBox[{"tr", " ", 
             RowBox[{"Sin", "[", "v", "]"}], "n"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", "0", ",", 
             RowBox[{"2", "Pi"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", " ", "None"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "-", "tr"}], ",", 
                RowBox[{"2", "+", "tr"}]}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], 
             "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", "0.05", "]"}], ",", 
            "\[IndentingNewLine]", "Blue", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "C3"}], 
                "}"}], ",", "0.04"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", "Red", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "n"}]}], "}"}], ",", "0.04"}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", "Purple", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "u"}]}], "}"}], ",", "0.03"}], "]"}], 
             "]"}], ",", "\[IndentingNewLine]", "Green", ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"C3", ",", 
                 RowBox[{"C3", "+", "v"}]}], "}"}], ",", "0.03"}], "]"}], 
             "]"}], ","}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Black", ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"Tube", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"2", "projV"}]}], "}"}], ",", "0.04"}], "]"}], 
              "]"}]}], "*)"}], "\[IndentingNewLine]", "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{",", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"C3", "+", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ")"}], ".",
            "projV"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", ",", "0", ",", 
            RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
        "}"}], "]"}], "*)"}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"project", " ", "onto", " ", "a", " ", "line"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Panel", "[", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Cxy", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"C\", \"xy\"],
Background->RGBColor[0.87, 0.94, 1]]\)\>\"", ",", "\"\<a\>\""}], "}"}]}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], "]"}], 
       "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "Cz", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(C\), \(z\)]\)\>\""}],
           "}"}], ",", 
         RowBox[{"-", "1"}], ",", "1", ",", 
         RowBox[{"ControlType", "\[Rule]", "VerticalSlider"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", " ", "Tiny"}]}], "}"}], "]"}], ",", 
      RowBox[{"Spacer", "[", "20", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"n12", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<n\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], "]"}], ",", 
      
      RowBox[{"Spacer", "[", "20", "]"}]}], 
     RowBox[{"(*", 
      RowBox[{",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"proj", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<proj\>\""}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
          RowBox[{"ControlType", "\[Rule]", "Slider2D"}]}], "}"}], "]"}]}], 
      "*)"}], "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Cxy", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\!\(\*
StyleBox[SubscriptBox[\"C\", \"xy\"],
Background->RGBColor[0.87, 0.94, 1]]\)\>\"", ",", "\"\<a\>\""}], "}"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n12", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<normal vector\>\""}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"proj", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "\"\<proj\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Pi]", ",", "0"}], "}"}], ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Cz", ",", "0", ",", "\"\<\!\(\*SubscriptBox[\(C\), \(z\)]\)\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "1"}], ",", "1", ",", 
     RowBox[{"ControlType", "\[Rule]", "None"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.60028397031595*^9, 3.600284184508217*^9}, {
   3.600292294233811*^9, 3.6002922987335033`*^9}, 3.600293039465336*^9, {
   3.600293070838415*^9, 3.600293101587483*^9}, {3.6002935164547567`*^9, 
   3.600293550166191*^9}, {3.600293610608541*^9, 3.600293731400072*^9}, {
   3.60029389732096*^9, 3.600293940198566*^9}, {3.600293976191718*^9, 
   3.600293985983939*^9}, {3.600294052584127*^9, 3.6002941986667557`*^9}, {
   3.60029462536876*^9, 3.600294694030149*^9}, {3.600294727247658*^9, 
   3.6002949306585712`*^9}, {3.600294980532967*^9, 3.6002950219136972`*^9}, {
   3.600295063075889*^9, 3.6002950917194347`*^9}, {3.600295131444007*^9, 
   3.600295219387466*^9}, 3.6002952566696453`*^9, {3.600295312180291*^9, 
   3.6002954172479486`*^9}, {3.600295492547522*^9, 3.600295512075149*^9}, {
   3.60029555695121*^9, 3.6002955795238523`*^9}, {3.600295801362145*^9, 
   3.600295860305666*^9}, {3.600295947273077*^9, 3.6002959479131613`*^9}, {
   3.600296089183877*^9, 3.6002961565174026`*^9}, {3.600296205222391*^9, 
   3.600296230491247*^9}, {3.600296277339213*^9, 3.600296302996613*^9}, {
   3.6002963403375273`*^9, 3.6002963594216013`*^9}, {3.600296398195991*^9, 
   3.600296402631254*^9}, {3.600296663826765*^9, 3.600296735869361*^9}, {
   3.600296773048375*^9, 3.6002969559795713`*^9}, {3.6002976556354094`*^9, 
   3.600297728801958*^9}, {3.600297763244152*^9, 3.600297772873021*^9}, {
   3.600364855572456*^9, 3.600364932061878*^9}, {3.600364989451779*^9, 
   3.600365046590735*^9}, {3.600365108775076*^9, 3.6003651101184673`*^9}, {
   3.600365146485076*^9, 3.600365381147154*^9}, {3.6003654120622*^9, 
   3.6003654454948807`*^9}, {3.600365502077784*^9, 3.600365668440053*^9}, {
   3.600366094666473*^9, 3.600366190706155*^9}, {3.6003662236387997`*^9, 
   3.600366245710033*^9}, 3.600366319130804*^9, {3.6003765052620363`*^9, 
   3.600376557344512*^9}, {3.600376655926147*^9, 3.600376658535721*^9}, {
   3.600385816470166*^9, 3.60038585483671*^9}, {3.600430237509404*^9, 
   3.600430266933237*^9}, {3.601031909417061*^9, 3.60103197684102*^9}, {
   3.601032026786153*^9, 3.601032032312005*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
    0, $CellContext`n12$$ = {0, 0}, $CellContext`proj$$ = {0, 0}, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`Cxy$$], {0, 0}, {
       "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)", "a"}}, {-1, -1}, {1, 1}}, {{
       Hold[$CellContext`Cz$$], 0, "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 
      1}, {{
       Hold[$CellContext`n12$$], {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}}, {
      Hold[
       Row[{
         Panel[
          Manipulate`Place[1]], 
         Spacer[20], 
         Manipulate`Place[2], 
         Spacer[20], 
         Manipulate`Place[3], 
         Spacer[20]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`Cxy$$], {0, 0}, {
       "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)", "a"}}, {-1, -1}, {1, 1}}, {{
       Hold[$CellContext`n12$$], {0, 0}, "normal vector"}, {-Pi, Pi}, {
      Pi, 0}}, {{
       Hold[$CellContext`proj$$], {0, 0}, "proj"}, {-Pi, Pi}, {Pi, 0}}, {{
       Hold[$CellContext`Cz$$], 0, "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 
      1}}, Typeset`size$$ = {360., {202., 207.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`Cxy$11366$$ = {0, 0}, $CellContext`Cz$11367$$ = 
    0, $CellContext`n12$11368$$ = {0, 0}, $CellContext`proj$11369$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`Cxy$$ = {0, 0}, $CellContext`Cz$$ = 
        0, $CellContext`n12$$ = {0, 0}, $CellContext`proj$$ = {0, 0}}, 
      "ControllerVariables" :> {
        Hold[$CellContext`Cxy$$, $CellContext`Cxy$11366$$, {0, 0}], 
        Hold[$CellContext`Cz$$, $CellContext`Cz$11367$$, 0], 
        Hold[$CellContext`n12$$, $CellContext`n12$11368$$, {0, 0}], 
        Hold[$CellContext`proj$$, $CellContext`proj$11369$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`tr$, $CellContext`C3$, $CellContext`n$, \
$CellContext`u$, $CellContext`v$, $CellContext`lat$, $CellContext`long$, \
$CellContext`projV$}, $CellContext`tr$ = 1/16; $CellContext`C3$ = {
           Part[$CellContext`Cxy$$, 1], 
           
           Part[$CellContext`Cxy$$, 
            2], $CellContext`Cz$$}; $CellContext`long$ = 
         Part[$CellContext`n12$$, 1]; $CellContext`lat$ = 
         Part[$CellContext`n12$$, 2]; $CellContext`n$ = {
          Cos[$CellContext`long$] Sin[$CellContext`lat$], 
           Sin[$CellContext`long$] Sin[$CellContext`lat$], 
           Cos[$CellContext`lat$]}; $CellContext`u$ = {-
           Sin[$CellContext`long$], 
           Cos[$CellContext`long$], 0}; $CellContext`v$ = {
          Cos[$CellContext`long$] Cos[$CellContext`lat$], 
           Cos[$CellContext`lat$] Sin[$CellContext`long$], -
           Sin[$CellContext`lat$]}; $CellContext`projV$ = {Cos[
             Part[$CellContext`proj$$, 1]] Sin[
             Part[$CellContext`proj$$, 2]], Sin[
             Part[$CellContext`proj$$, 1]] Sin[
             Part[$CellContext`proj$$, 2]], 
           Cos[
            Part[$CellContext`proj$$, 2]]}; Show[{
           
           ParametricPlot3D[$CellContext`C3$ + ((
               1 + $CellContext`tr$ Cos[$CellContext`v$]) 
              Cos[$CellContext`\[Theta]]) $CellContext`u$ + ((
               1 + $CellContext`tr$ Cos[$CellContext`v$]) 
              Sin[$CellContext`\[Theta]]) 
             Cross[$CellContext`n$, $CellContext`u$] + ($CellContext`tr$ 
              Sin[$CellContext`v$]) $CellContext`n$, {$CellContext`\[Theta], 
             0, 2 Pi}, {$CellContext`v$, 0, 2 Pi}, Mesh -> None, 
            PlotRange -> {{-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}, {-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}, {-2 - $CellContext`tr$, 
               2 + $CellContext`tr$}}, AxesLabel -> {"x", "y", "z"}], 
           Graphics3D[{
             Arrowheads[0.05], Blue, 
             Arrow[
              Tube[{{0, 0, 0}, $CellContext`C3$}, 0.04]], Red, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`n$}, 
               0.04]], Purple, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`u$}, 
               0.03]], Green, 
             Arrow[
              
              Tube[{$CellContext`C3$, $CellContext`C3$ + $CellContext`v$}, 
               0.03]], Null}]}]], 
      "Specifications" :> {{{$CellContext`Cxy$$, {0, 0}, {
          "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)", "a"}}, {-1, -1}, {1, 1}, ControlType -> 
         Slider2D, ControlPlacement -> 
         1}, {{$CellContext`Cz$$, 0, 
          "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 1, ControlType -> 
         VerticalSlider, ImageSize -> Tiny, ControlPlacement -> 
         2}, {{$CellContext`n12$$, {0, 0}, "n"}, {-Pi, Pi}, {Pi, 0}, 
         ControlType -> Slider2D, ControlPlacement -> 3}, 
        Row[{
          Panel[
           Manipulate`Place[1]], 
          Spacer[20], 
          Manipulate`Place[2], 
          Spacer[20], 
          Manipulate`Place[3], 
          Spacer[20]}], {{$CellContext`Cxy$$, {0, 0}, {
          "\!\(\*\nStyleBox[SubscriptBox[\"C\", \"xy\"],\n\
Background->RGBColor[0.87, 0.94, 1]]\)", "a"}}, {-1, -1}, {1, 1}, ControlType -> 
         None}, {{$CellContext`n12$$, {0, 0}, "normal vector"}, {-Pi, Pi}, {
         Pi, 0}, ControlType -> 
         None}, {{$CellContext`proj$$, {0, 0}, "proj"}, {-Pi, Pi}, {Pi, 0}, 
         ControlType -> 
         None}, {{$CellContext`Cz$$, 0, 
          "\!\(\*SubscriptBox[\(C\), \(z\)]\)"}, -1, 1, ControlType -> None}},
       "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {282., 288.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.60036518648447*^9, 3.600365233919222*^9}, {
   3.600365264339911*^9, 3.600365294775422*^9}, {3.600365327141755*^9, 
   3.600365381622037*^9}, {3.600365413149041*^9, 3.600365445847186*^9}, {
   3.600365529637844*^9, 3.60036555005602*^9}, {3.600365602109067*^9, 
   3.6003656689855967`*^9}, {3.600366152447013*^9, 3.600366177831689*^9}, {
   3.6003662241922817`*^9, 3.600366246329729*^9}, 3.6003663197429047`*^9, {
   3.600376512465716*^9, 3.6003765590222483`*^9}, {3.60037663839305*^9, 
   3.600376659778268*^9}, 3.600385837326468*^9, 3.600430269379282*^9, {
   3.6010319150529833`*^9, 3.6010319400026827`*^9}, 3.601031977549252*^9, {
   3.601032028205448*^9, 3.6010320327622147`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "lat", "]"}], " ", 
      RowBox[{"Sin", "[", "long", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "lat", "]"}], " ", 
      RowBox[{"Sin", "[", "long", "]"}]}], ",", 
     RowBox[{"Cos", "[", "long", "]"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"u", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
     RowBox[{"Cos", "[", "lat", "]"}], ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "lat", "]"}], " ", 
       RowBox[{"Cos", "[", "long", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "long", "]"}], " ", 
       RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "long", "]"}]}]}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"v", " ", "=", "  ", 
    RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"C3", "+", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.600365732544258*^9, 3.600365759098472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p1", " ", 
   RowBox[{"(", 
    RowBox[{"0.75`", "\[VeryThinSpace]", "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "lat", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "lat", "]"}], " ", 
      RowBox[{"Cos", "[", "long", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"p2", " ", 
   RowBox[{"(", 
    RowBox[{"0.95`", "\[VeryThinSpace]", "+", 
     RowBox[{
      RowBox[{"Cos", "[", "lat", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", "long", "]"}], " ", 
      RowBox[{"Sin", "[", "lat", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"p3", " ", 
   RowBox[{"(", 
    RowBox[{"0.8900000000000001`", "\[VeryThinSpace]", "-", 
     RowBox[{"1.`", " ", 
      RowBox[{"Sin", "[", "long", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.6003657492449493`*^9, 3.600365760326521*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Minimize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ")"}], ".", 
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}]}], ",", 
      RowBox[{"\[Theta]", ">", 
       RowBox[{"-", "\[Pi]"}]}], " ", ",", 
      RowBox[{"\[Theta]", "<", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"{", "\[Theta]", "}"}], ",", "Reals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6003657662671223`*^9, 3.600365768233202*^9}, {
  3.6003658015610323`*^9, 3.600365845752882*^9}, {3.600365915914051*^9, 
  3.6003659169343348`*^9}, {3.600366007350885*^9, 3.600366034139982*^9}}],

Cell[BoxData[
 RowBox[{"Minimize", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"p1", " ", 
       RowBox[{"(", 
        RowBox[{"c1", "-", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"p2", " ", 
       RowBox[{"(", 
        RowBox[{"c2", "+", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}], "+", 
      RowBox[{"p3", " ", 
       RowBox[{"(", 
        RowBox[{"c3", "-", 
         RowBox[{
          RowBox[{"Sin", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], ")"}]}]}], ",", 
     RowBox[{"\[Theta]", ">", 
      RowBox[{"-", "\[Pi]"}]}], ",", 
     RowBox[{"\[Theta]", "<", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"{", "\[Theta]", "}"}], ",", "Reals"}], "]"}]], "Output",
 CellChangeTimes->{
  3.600365768788664*^9, {3.600365822504109*^9, 3.600365846281369*^9}, 
   3.600365917472797*^9, {3.60036602821319*^9, 3.6003660344303503`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"c1", ",", "c2", ",", "c3"}], "}"}], "+", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
    RowBox[{
     RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.6003658880795183`*^9, 3.600365892125904*^9}, {
  3.600366003005512*^9, 3.60036600507502*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       RowBox[{"c1", "-", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
         RowBox[{"Sin", "[", "lat", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "lat", "]"}], " ", 
         RowBox[{"Cos", "[", "long", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
      {
       RowBox[{"c2", "+", 
        RowBox[{
         RowBox[{"Cos", "[", "lat", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "long", "]"}], " ", 
         RowBox[{"Sin", "[", "lat", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]},
      {
       RowBox[{"c3", "-", 
        RowBox[{
         RowBox[{"Sin", "[", "long", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6003658926262836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sqrt]", "2"}]], "Input",
 CellChangeTimes->{{3.6003858622645807`*^9, 3.600385864194745*^9}, 
   3.600430962330217*^9}],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.60043096287845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Project Circles onto Plane for Needle Steering\
\>", "Subsection",
 CellChangeTimes->{{3.600429062077978*^9, 3.600429074135796*^9}, {
  3.600430380518886*^9, 3.600430384641191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CircleEq", "[", 
    RowBox[{"C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "u", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"v", " ", "=", "  ", 
        RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"C3", "+", 
       RowBox[{"rad", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
       RowBox[{"rad", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CircleEq3", "[", 
    RowBox[{
    "C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_", ",", 
     "\[Theta]x_", ",", "\[Theta]y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "u", ",", "v", ",", "RotM", ",", "C3rot", ",", "xyzNorm", ",",
        "x", ",", "y", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xyzNorm", " ", "=", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RotM", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{"z", ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
            FractionBox[
             RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", 
       RowBox[{"RotM", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "long", "]"}], " ", 
           RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "long", "]"}], " ", 
           RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
          RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"u", " ", "=", 
       RowBox[{"RotM", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "long", "]"}]}], ",", 
          RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"v", " ", "=", " ", 
       RowBox[{"RotM", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "long", "]"}], " ", 
           RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", "lat", "]"}], " ", 
           RowBox[{"Sin", "[", "long", "]"}]}], ",", 
          RowBox[{"-", 
           RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}]}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"v", " ", "=", "  ", 
        RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"C3rot", " ", "=", " ", 
       RowBox[{"RotM", ".", "C3"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C3rot", "+", 
       RowBox[{"rad", " ", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
       RowBox[{"rad", " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CenterCircleEq3", "[", 
    RowBox[{
    "C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_", ",", 
     "\[Theta]x_", ",", "\[Theta]y_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"RotM", ",", "xyzNorm", ",", "x", ",", "y", ",", "z"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xyzNorm", " ", "=", " ", 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RotM", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{"z", ",", "x"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
        RowBox[{"RotationMatrix", "[", 
         RowBox[{
          RowBox[{"ArcTan", "[", 
           RowBox[{
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox[
                RowBox[{"(", 
                 FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
            FractionBox[
             RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", " ", 
      RowBox[{"RotM", ".", "C3"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hoopRad", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gearboxLength", " ", "=", "75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"baseHingeHeight", " ", "=", " ", "8"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotorLength", " ", "=", " ", "20"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gearbox3Length", " ", "=", " ", "60"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markerOffset", " ", "=", "25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markerOffset3", " ", "=", 
   RowBox[{"-", "25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hoopRad", " ", "=", " ", "50"}], ",", "\[IndentingNewLine]", 
       RowBox[{"gearboxLength", " ", "=", "75"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"baseHingeHeight", " ", "=", " ", "8"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"rotorLength", " ", "=", " ", "20"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"gearbox3Length", " ", "=", " ", "75"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"markerOffset", " ", "=", "25"}], ",", "\[IndentingNewLine]", 
       RowBox[{"markerOffset3", " ", "=", 
        RowBox[{"-", "25"}]}], ",", "\[IndentingNewLine]", "scanRot", ",", 
       "\[IndentingNewLine]", "pV1", ",", "\[IndentingNewLine]", "pV2", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Cm1", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"hoopRad", "+", "gearboxLength", "+", "markerOffset"}], ",",
           "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"long1", " ", "=", 
        RowBox[{"\[Pi]", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"lat1", " ", "=", 
        RowBox[{"\[Pi]", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Cm2", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"hoopRad", "+", "gearboxLength", "+", "markerOffset"}], ",",
           "0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"long2", " ", "=", 
        RowBox[{"-", "\[Pi]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"lat2", " ", "=", 
        RowBox[{"\[Pi]", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"long3", " ", "=", 
        RowBox[{
         RowBox[{"-", "3"}], 
         RowBox[{"\[Pi]", "/", "4"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"lat3", " ", "=", 
        RowBox[{"\[Pi]", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Cm3", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", 
            RowBox[{"\[Sqrt]", "2"}]}], 
           RowBox[{"(", 
            RowBox[{"gearbox3Length", "+", "markerOffset3"}], ")"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "1"}], "/", 
            RowBox[{"\[Sqrt]", "2"}]}], 
           RowBox[{"(", 
            RowBox[{"gearbox3Length", "+", "markerOffset3"}], ")"}]}], ",", 
          RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", "Ceq1", ",", "\[IndentingNewLine]", "Ceq2", ",",
        "\[IndentingNewLine]", "Ceq3"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"scanRot", " ", "=", " ", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{"tipAng", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pV1", " ", "=", 
       RowBox[{"scanRot", ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pV2", " ", "=", 
       RowBox[{"scanRot", ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Ceq1", " ", "=", " ", 
           RowBox[{"CircleEq", "[", 
            RowBox[{
            "Cm1", ",", "lat1", ",", "long1", ",", "rotorLength", ",", 
             "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Ceq2", " ", "=", " ", 
           RowBox[{"CircleEq", "[", 
            RowBox[{
            "Cm2", ",", "lat2", ",", "long2", ",", "rotorLength", ",", 
             "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ceq1", ".", "pV1"}], ",", 
              RowBox[{"Ceq1", ".", "pV2"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Ceq2", ".", "pV1"}], ",", 
              RowBox[{"Ceq2", ".", "pV2"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Ceq3", " ", "=", " ", 
                RowBox[{"CircleEq3", "[", 
                 RowBox[{
                 "Cm3", ",", "lat3", ",", "long3", ",", "rotorLength", ",", 
                  "\[Theta]", ",", "\[Theta]xV", ",", "\[Theta]yV"}], "]"}]}],
                ";", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Ceq3", ".", "pV1"}], ",", 
                 RowBox[{"Ceq3", ".", "pV2"}]}], "}"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]xV", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
                  RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]yV", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
                  RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}]}], "]"}]}], 
           "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Red"}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Blue"}], "]"}], ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Thick", ",", "Green"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"TicksStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "28", "]"}]}], ",", 
        RowBox[{"AxesOrigin", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "50"}], ",", 
           RowBox[{"-", "50"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Epilog", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"Ceq3", " ", "=", " ", 
              RowBox[{"CenterCircleEq3", "[", 
               RowBox[{
               "Cm3", ",", "lat3", ",", "long3", ",", "rotorLength", ",", 
                "\[Theta]", ",", "\[Theta]xV", ",", "\[Theta]yV"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{
                  "\"\<[``,``]\>\"", ",", "\[Theta]xV", ",", "\[Theta]yV"}], 
                  "]"}], ",", "14"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Ceq3", ".", "pV1"}], ",", 
                 RowBox[{"Ceq3", ".", "pV2"}]}], "}"}]}], 
              RowBox[{"(*", 
               RowBox[{",", 
                RowBox[{"Background", "\[Rule]", "White"}]}], "*)"}], "]"}]}],
             ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]xV", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
                RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Theta]yV", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
                RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}]}], "]"}], 
          "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tipAng", " ", ",", "\[Pi]"}], "}"}], ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.600429033782542*^9, 3.600429076324144*^9}, {
   3.600429108149291*^9, 3.600429248023603*^9}, {3.60042931726195*^9, 
   3.600429351758708*^9}, {3.600429393006126*^9, 3.6004294475733757`*^9}, {
   3.600429478346616*^9, 3.600429548722989*^9}, {3.600429582458461*^9, 
   3.600429747849485*^9}, {3.6004298008383007`*^9, 3.600429809226335*^9}, {
   3.600429866549399*^9, 3.600430170361867*^9}, {3.600430308027652*^9, 
   3.6004303296827374`*^9}, {3.600430410079809*^9, 3.600430530724023*^9}, {
   3.600430587843623*^9, 3.600430593508651*^9}, {3.600430641049747*^9, 
   3.6004306542716513`*^9}, {3.600430693842339*^9, 3.600430847434518*^9}, 
   3.600430907089522*^9, {3.6004309708783627`*^9, 3.600430985727438*^9}, {
   3.600431071028945*^9, 3.600431087343184*^9}, {3.6004313694546824`*^9, 
   3.6004314092282257`*^9}, {3.600432117055952*^9, 3.600432135836075*^9}, {
   3.600432440361042*^9, 3.6004324879395723`*^9}, {3.600432549567829*^9, 
   3.600432555222971*^9}, {3.600432766543318*^9, 3.600432784913801*^9}, {
   3.6004333842484417`*^9, 3.60043360784761*^9}, {3.600433661570362*^9, 
   3.600433699403351*^9}, 3.6004338473343077`*^9, {3.600433911443714*^9, 
   3.600434011224807*^9}, {3.600434058714025*^9, 3.6004341354960613`*^9}, {
   3.60043417385785*^9, 3.600434270247114*^9}, {3.6004343015952272`*^9, 
   3.600434306646597*^9}, {3.600434354741343*^9, 3.600434374299932*^9}, {
   3.6004351900454073`*^9, 3.600435195229342*^9}, {3.60043529968256*^9, 
   3.600435375680417*^9}, 3.600435437856529*^9, {3.600435476679077*^9, 
   3.600435558804822*^9}, {3.600435761197551*^9, 3.600435958657071*^9}, {
   3.6004359981258698`*^9, 3.6004360057323723`*^9}, {3.600436036255583*^9, 
   3.60043604678137*^9}, {3.600436106686105*^9, 3.600436112862957*^9}, {
   3.600436347941555*^9, 3.600436660378755*^9}, {3.600436696781073*^9, 
   3.600436754865447*^9}, {3.600436792303604*^9, 3.6004368709129753`*^9}, {
   3.600436919054468*^9, 3.60043708437134*^9}, {3.6004371482173853`*^9, 
   3.60043721474535*^9}, {3.600437316601417*^9, 3.600437363502694*^9}, 
   3.600437417772134*^9, {3.600437469153163*^9, 3.60043751184217*^9}, {
   3.6004375451358137`*^9, 3.6004375458392344`*^9}, {3.600437586050165*^9, 
   3.600437606345508*^9}, 3.60043784190704*^9, {3.6004379065093327`*^9, 
   3.600438142326125*^9}, {3.600438205328187*^9, 3.6004382588478527`*^9}, {
   3.600438429850746*^9, 3.600438430136302*^9}, {3.600470197872508*^9, 
   3.600470207350357*^9}, {3.6004702946357937`*^9, 3.600470346774749*^9}, {
   3.600470379706437*^9, 3.600470395093389*^9}, {3.6004704277946243`*^9, 
   3.600470503412567*^9}, {3.6004734810796957`*^9, 3.6004734842443113`*^9}, {
   3.6005404138620787`*^9, 3.600540418020749*^9}, {3.600541198470586*^9, 
   3.6005411987397223`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`tipAng$$ = Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`tipAng$$], Pi}, 0, 2 Pi}}, Typeset`size$$ = {
    360., {174., 178.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`tipAng$30829$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`tipAng$$ = Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`tipAng$$, $CellContext`tipAng$30829$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`hoopRad$ = 50, $CellContext`gearboxLength$ = 
         75, $CellContext`baseHingeHeight$ = 8, $CellContext`rotorLength$ = 
         20, $CellContext`gearbox3Length$ = 75, $CellContext`markerOffset$ = 
         25, $CellContext`markerOffset3$ = -25, $CellContext`scanRot$, \
$CellContext`pV1$, $CellContext`pV2$, $CellContext`Cm1$ = {
          0, $CellContext`hoopRad + $CellContext`gearboxLength + \
$CellContext`markerOffset, 0}, $CellContext`long1$ = Pi/2, $CellContext`lat1$ = 
         Pi/2, $CellContext`Cm2$ = {$CellContext`hoopRad + \
$CellContext`gearboxLength + $CellContext`markerOffset, 0, 
           0}, $CellContext`long2$ = -Pi, $CellContext`lat2$ = 
         Pi/2, $CellContext`long3$ = (-3) (Pi/4), $CellContext`lat3$ = 
         Pi/2, $CellContext`Cm3$ = {((-1)/Sqrt[
            2]) ($CellContext`gearbox3Length + $CellContext`markerOffset3), \
((-1)/Sqrt[
            2]) ($CellContext`gearbox3Length + $CellContext`markerOffset3), \
$CellContext`baseHingeHeight + $CellContext`hoopRad}, $CellContext`Ceq1$, \
$CellContext`Ceq2$, $CellContext`Ceq3$}, $CellContext`scanRot$ = 
         RotationMatrix[$CellContext`tipAng$$, {1, 1, 1}]; $CellContext`pV1$ = 
         Dot[$CellContext`scanRot$, {1, 0, 0}]; $CellContext`pV2$ = 
         Dot[$CellContext`scanRot$, {0, 1, 0}]; ParametricPlot[
          
          Evaluate[$CellContext`Ceq1$ = \
$CellContext`CircleEq[$CellContext`Cm1$, $CellContext`lat1$, \
$CellContext`long1$, $CellContext`rotorLength$, $CellContext`\[Theta]]; \
$CellContext`Ceq2$ = $CellContext`CircleEq[$CellContext`Cm2$, \
$CellContext`lat2$, $CellContext`long2$, $CellContext`rotorLength$, \
$CellContext`\[Theta]]; {{
              Dot[$CellContext`Ceq1$, $CellContext`pV1$], 
              Dot[$CellContext`Ceq1$, $CellContext`pV2$]}, {
              Dot[$CellContext`Ceq2$, $CellContext`pV1$], 
              Dot[$CellContext`Ceq2$, $CellContext`pV2$]}, 
             
             Table[$CellContext`Ceq3$ = \
$CellContext`CircleEq3[$CellContext`Cm3$, $CellContext`lat3$, \
$CellContext`long3$, $CellContext`rotorLength$, $CellContext`\[Theta], \
$CellContext`\[Theta]xV, $CellContext`\[Theta]yV]; {
                Dot[$CellContext`Ceq3$, $CellContext`pV1$], 
                
                Dot[$CellContext`Ceq3$, $CellContext`pV2$]}, {$CellContext`\
\[Theta]xV, {(-Pi)/6, 0, Pi/6}}, {$CellContext`\[Theta]yV, {(-Pi)/6, 0, Pi/
                6}}]}], {$CellContext`\[Theta], 0, 2 Pi}, AspectRatio -> 
          Automatic, PlotStyle -> {
            Directive[Thick, Red], 
            Directive[Thick, Blue], 
            Directive[Thick, Green]}, TicksStyle -> Directive[28], 
          AxesOrigin -> {-50, -50}, Epilog -> {
            
            Table[$CellContext`Ceq3$ = \
$CellContext`CenterCircleEq3[$CellContext`Cm3$, $CellContext`lat3$, \
$CellContext`long3$, $CellContext`rotorLength$, $CellContext`\[Theta], \
$CellContext`\[Theta]xV, $CellContext`\[Theta]yV]; Text[
               Style[
                StringForm[
                "[``,``]", $CellContext`\[Theta]xV, $CellContext`\[Theta]yV], 
                14], {
                Dot[$CellContext`Ceq3$, $CellContext`pV1$], 
                
                Dot[$CellContext`Ceq3$, $CellContext`pV2$]}], {$CellContext`\
\[Theta]xV, {(-Pi)/6, 0, Pi/6}}, {$CellContext`\[Theta]yV, {(-Pi)/6, 0, Pi/
               6}}]}]], 
      "Specifications" :> {{{$CellContext`tipAng$$, Pi}, 0, 2 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {216., 222.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.600437215747797*^9, 3.600437277192748*^9, 3.600437364774939*^9, 
   3.6004374192599897`*^9, 3.600437513126383*^9, 3.6004375476148987`*^9, {
   3.600437587167893*^9, 3.6004376074623947`*^9}, {3.600437834575564*^9, 
   3.600437844150714*^9}, 3.600437911355338*^9, {3.6004379419392843`*^9, 
   3.600437949501192*^9}, {3.600438077379425*^9, 3.600438108709934*^9}, {
   3.600438143548017*^9, 3.600438159007972*^9}, {3.600438210317052*^9, 
   3.600438260017795*^9}, {3.60043842704596*^9, 3.6004384307761087`*^9}, 
   3.600438473868441*^9, {3.600470121497533*^9, 3.600470160585149*^9}, 
   3.6004702098195066`*^9, {3.600470297830934*^9, 3.600470347289795*^9}, {
   3.600470384583403*^9, 3.600470396142626*^9}, {3.600470432165131*^9, 
   3.600470503855579*^9}, 3.600540420201211*^9, 3.6005411999426813`*^9}]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[1, 0, 0], Thickness[Large], LineBox[CompressedData["
1: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
nsqDORpWF4+4kfe5tBWE5/FARHxeyh4WBVW933dwbvDgwO3J+QtdKVg7e+ej
xTd58Mv1kdZzZ/L+9idWNUU8aLmbVObEpGB3roXulwry/bL5okF0Cr7VZf+o
quLBCpp2GsuOgn8kWfFht3mwLOnEHQNbCr76xbWej8RmjMhxGgW9rvGO2zTy
wCX+plexBQX3+F/tkG/mQXrPk5X55hRcuGTX5KsHPPARcT92AyjIbI4r8nnE
A25GeW7FRjL/cu5NCc94QLtaK5huSkHRaIja3MkDrcZGwZL1FIzdpqGxtIsH
I5+kBm3XUdBto25O+SsyngsVotJNKGgX6L7y+QAPbux5ah+4moJbOeOldW95
cGZsa3eREQXpcna/C9/x4PNWyp0PqyjImi6H4R95kBz7IGyPIQWN3HdtDPjE
g+CuQe9SAwpef8k57PGFB7Jyy25MI+avQ03TMfL+/G/6hfoU9H2mFbPkOw8i
/V/4yRIbinwql5vggeuPa3N89ShYYXty9btfPFi6qtzZdgUFdWYcfxIlxgcp
EP9jspz051PbtEPifNgqcVfing4F1/wz+OgmyYen61J3OhIrnvzQZTiTDx/8
zEyOLSP9i9d/oyrNh7B9ZlfUiEWUXFNEZfmwrKFzT81SCoYmqi5rk+ODXrXF
DCXiNQPZv8oU+FC8zPJ18xIKHjAdDkyby4e90WYyp4h9j/NKTinzIX4mLdGc
uDZtb4qXKh/4BvsOSxCfuJpm4KjOh3G5B2WPtMn3bwv9V8/nQ6zpDoc0You5
mrtVF/KBXeIE+4lDRbfJ/tXgA+dvUqQdsfhw0pZ+TT7EKFkb6RA/oJlsblhM
fu/A9tUyxIJbpTPylvDBWXoq+sdiCrZ3h289t4yMh50c7S3xjJN6232W8+Gu
ch67i7gxVFHRZQUZj87me0+Ie7rLvI31+WDh5Xu6ndg1KmK/sgEfpmlnX31G
fP7+jIWThnxw6N2k2Ut8rObawW4jPix5lzrxiTjnce+BamM+7JHctFTsv/55
LpmXasKHoeCkInVic7nxXcfW8WG9qk3i+v/6txvdhKZ8+C3p8WwzsciqaX9M
zfiQLdK79wxxz9rVFHUKGZ81he7lxC+8Hy75BXxY5Npc+JHY8wXcemFBngep
87TJ+A4mSw+WWZH54ycKthFf/ZRTEU/jg7LIsoprxGY6Zwx8bfiQIXVn7yhx
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
v9T/AClkFEg=
     "]]}, 
   {RGBColor[0, 0, 1], Thickness[Large], LineBox[CompressedData["
1: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
6DU+/P//L/U/rPoUSA==
     "]]}, 
   {RGBColor[0, 1, 0], Thickness[Large], LineBox[CompressedData["
1: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
/Q8GszUe
     "]], LineBox[CompressedData["
1:eJxd23lYjU8bB/BIp0XaV2mTVqV9375nq07nVOecVqkQEUJIsqUSKiFaJEvZ
21RaSEISFZElUopkKz9plUR5x7/vX67P9Zxn5pm575m557qiGbqRHzZTQEBg
r6CAwL9/N72iu9za4Irhrq3OZjEMFI2WFjqvdQX9y5JdBtEMbPdLlbgX5gqu
qFiCRhQDz1tHX7cEuWLU6Wa/UCQDrZIzjn9zd0WjY4zNtdUMXLFaVhSs64qT
z32ZV/wYCH++qH7OexfcLNvQNGHGQJdWsFF5lwvSzF6pFZkwkF+5ocb/tQuq
Tg16LlnEQJ1RjNOlVhf4PIpxqtJnQEL71mzebReE2TxY66XBgHZc36W3J13g
cVJyu+ocBgb3xBq/93eBycJjhxZ8okOOkufF83ZBRXf96yW9dLwpvvtfvacL
coTTK9Le0fF6nf3pQqYLigsYKqMddJxZuE401dwFudExzTlP6Gg8vlIvW9IF
bfX1/tHX6TAsehv9tomJUwK/5VYeoMMtczQjroGJxUcfDXgm0vFSstd/QR0T
izzmb7KOp2M6wO1Z5HUmdsd+2zFjJ3luKlKleomJL8d7KrZvoCPugrlv014m
7I50Jv72oeN6bNG+NWDiVYuaDFuDjkq3yhnJDkyMvIk31VGlI/J+mkShDROx
MlXL/yrT8eJb3tshEybWOF79WSRLx49j4luOajJxK0JD6juFjlgdO7q6IBOJ
CusuKgzQEOytqxrVyEBut5zk3+s01NysSWm8x8DEiaT205U0GHx1ujyvjgHO
++6HdldpkL9xd+hRNQMu4YctNxbSsDTU7J1TIZlnu4dm9adoKNgdNhZ9iIFO
T6RKx9OQUF7iZOXLwFFr59YlbjSsmPDNfc5jYH/XzZoXDBr2N8TdiPRkoPiZ
2jSLSoNr5RnVclfy/uY/R0ztaPimkHmTZcfAtfnff35bSMOMpFczHquTPGi/
mi0vScO4X6eD/jc6dnh5mFm0UTFzYtB/uo+MM/3eg5inVJzYVsB8SeIufFuw
9WYLFdm+kqeSSJx3XNjm5Hifil3tdSyhF3Sc27qk3OgaFWVmKlz/GjoS51RV
3z9OxW0pH8MVKXTo2l6//HoxFe89z2yzIHF+UiiyPNuXitqwTEEREufuTc1r
/XhUeEmqva/aTdrXXB312I2Ka47xjww30TFr7dP4y9ZUNGysnJ8UQEcIrzVD
XJ6K8+OivZN6dFiVehiffwLk8CNH5HXoUHuh4238EIhs/BJirkXHBtm732/c
B/wPuXttJXEXEKIee1gL/NGJvSAvQ0fF9jtXOgqBc4eXvmj6TUOb0Dl+2X6g
5vP5qumnJA55Ziw3R+BIQLho+hMa9NWV5H/YAKWDj+P0W2ho7qGU5lkA/c87
u4IaaVDKpvLGFgJzX2wK7L5FQ6ISZf2hucAOkdQBZhENRnrqHyQHneH0wHn1
jQM0zHLX3sZe7oyt/Cfu6ftoqCtdeTMowBnc699WbNxLg8rFnp51Xs54827E
ZtEeEvdn/q/3OjrDWPzmrgfRNOzS+nAtR9kZLfe03i5fRUN1vLLmqmdOMPva
luDqSsMGiW22e52dkCt3Uo3KpCFX9KJ8mqUT+hr1wxzpNHxOZzblLHTCHqPR
MUdnGi58D6otUHTCYDLbeKk1DdTY3SYlg47o/Gt5aL4eDV//Y7V65zrC9IDL
tbLZNAwoT9nrTDlgs9eKWgExGtIgu3d0xAG/XiyL9RahwXxD6dTtPgc8Of/N
eoYQDVt51BPcNgcIa549vHuaCuM5QbUhRQ5YX1duNjlMxciaE276ix3w7Wv4
esobKrCzjZ5aYQ/xX2ISVR1UpFQfYPsV2MMopCxk1WsqyukSo2q59rCtipF+
9pKKvroRw+IUe0isnn7wgORxbHvtyWvL7TH5OeSOeSMVNfyLHw5J2kOMbZ4y
5wEV+04wnehC9lA2TRD72kDFnojFq35O2qH/73PDonoqVo15GQR9tsP+198F
PG9TcXx/9TPFW3aIuEkxUCB5H3sxXjNwrR2etb2JVKmi4p34+aKppXZobny/
SauSisM7jUzzfO3gyk8/b19OhYqjkF0v7MBQ72tJLaFCbev+9EBFO5yOqdhY
fpkKu6Geb2oNtojyRcyHS1RUnp2dVHHDFpcw4qRIPO3ezXEttcW+/MvCBy5Q
4Vk6Z2lEji3+PA5JPXCWCsnjr8eLI23h5XglTfwUFW5bd8aKqdqixur05qiT
VAy1hxu4ytpi7jRq3uZQYXRVmbFX1BZZLIudNSeoeBJm+/AXSfDk7JONh8k6
zi08u6LniQ0aX/7tFCUey+68o3TfBsyN+r4Hssi6Pn/3FPemDWy2uscmZ1Kx
/J507+3LNli4RfZyYTrZN9Io3ZlxNihjjY/aED8a/B33MNoGIm9S8puPUWFx
/2j1dIQN5LgWrJGjJB9E534LW2yD++2+65alUZE0KHDZ2MwGuf8dn5hBfNEp
2GC5ng3aOvnfLx4h+8x/fJ9jajaIeHhQ9sdhki/7ky6OitlA/L6Pa9khKnYy
MvaUf7DG8jPFc8OI2zea7XjfYY0EfXX/ecQerPBFUk+tYW6YM/tYKhXdySqP
I2qt8Z9yw14uscmSxbU55da4dZEdJk08cKV0Q1O+NSaVylbmHKTCga+ro5Vp
jSOPChJCiYf3ippwD1pjf7mdmBHx/PF9lN3x1nBz8/VrTiHx7m+d/2q9NR4q
/Jx7kjjhSsj6mSutIbt4GWsjcbSN2OFFgdZgild8UCN+cspuyX4Xa8gPl3pN
JlPRKxYvXu5gjRjTk9qvietXrz7dbWaNk9K7w6qJ9xzzlBLVt4YhgiVPEkdt
Or7aQt0arFc0rTjiM8PnLi6Vt0aav8XZ1cQLKM9bUmZbY3a5dTKPuPjyvndV
M6xBdeK/cSR+8UKtp+enFXTuJB03JM5OnX46+7sVtELf3VIlbmzfV2n10Qpz
7iz2lCZeeVv+0PJOKxi+nnQTJlbjSAanPrWCzdz7V/4mkX3/8Aud6w+s4B1U
s2uSeFfmvW/va60g0/Om6ifx4UhcFa+wwhaeweJ/3mFSFG1dYIU0PZT+Iq4Z
l/186IwVnAotuqaJbUzWBH1Mt0JSMKWHQvpbE1HRZZdshdLJ8pp/3zNu/XvN
0Vgr6K2zjlAnfq7CEu7bYoWzzUfGjIlXnbp43WmNFX4vv+5NJ75goxybGWIF
/tX85MXETmuKg795W+FPWHDWZuLbuasX01lWSFn6ZPvhf/PF9I7KcbLC45JR
8yvEZTe3XR02t0JbZkPDE+JrAd2yLH0rDB2wNhwlnr0m9UyemhVq9Glr55L4
HjI65DMha4UFQsNrNhFLZV/wzJ+2xNrYXQvPElfGPsoWGLNEuc6Gey+IFU+s
nLu43xLG51jRVJJf72hznoq1WeK2s9zRXcTVGYZiK5stMecsJaGGeMfp7gO3
bltiKlTlsxPJX8uDsoGbCixhp6y0eB/xy+zLlY/OWGK30/DZJ8Qjxf+F6GRY
4tjZj5VryPq44nK2pCvWEutNfLvvkvVVvjPliIePJdTX1f1RI+uv/Ojq2kKW
JQ5Xug/HEgu+MuSJOFuierPnYleyXm0Gk2836FtifswHzUmyvlvKHadofy2g
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
IR8Wf5L3txibY2h4x++jxSTeHPt8cz9zdLGvL64rJfEai/6ke94cpxMjejTK
+GjePNbaXGyO6g0i9nHES2ds3hJxzRwKgyfW2V/lo92N3lXRbI62VTXXz5fz
kTQk8cN9yBwfu4/221fxkajsSs12tIDT5ysXkok9GhPyGa4WSA1dbfaKGAOC
F4a5Fjhusvb+umskfo/PeXqstMD8Bfcak67zUZLdYzr7oAV8XnfJPyaWqn01
eTPDAlIOYlZS1SR+rpeZ689YwG7vsm/HiAOu5Po/u2qBDd0exik3+Kh7ttQw
97UFLnz0Fb9PLLvo1D3vXguoN/+qmSbeYICHIt8sYJ/1NnVDDR/xR/fOi/pr
gb8jV2bgJh8zNvIzvHQsoZG7YO0m4pa3OquETSyR4PXs/FnirQf6M+7YWuKT
bm7KNPEO+d9/TTwsUbuie0FhLR8mBzMfKUZZIkv+9/qXxO8VYm0uxVrC+r4J
/y/xlZetfyySLfElu+o/z1t8iHh27fE+Ywm/qO95UcQysVdsPuRbglcrM5xN
fLdVznFLhSUsOD+WdxMnv3o2L6PJEibr8hKmiJ8GOI4seGGJvgtSTvNu81Gf
vVb4WrclSkLV9vkSj2lafno9Yomu7iKpSOKTBV8ur52yhGjoW6tk4uD1+8/8
EbbC7zsK3teJl8aVq2iqWsH8qiSrhbjmhM+pCl0reHWmd7wjltsnznQxs4LJ
3dOzRojvJH+U6XCwQouX3sOZd/i49fHzzAhXKxi0LTKQIV7ZrCrzl2eFdQJX
FmgQLwtNdzwWZIX7X8/cMCSOeM5L0F5thcQ5M/qtiRdaruiu3mQFGden5VRi
qbxnbM4uKwx1iCq6E8/Vuvzw3X4r3IgokucRlzYP+G05agUdsYoSv3/tnSwd
oJyygpimem8g8ZzT4wdzLlnBP/F7aTCx+rOWRYuuWkFpnYbSUuJpG4cXd29a
ISaycu4/p7z0jPZ9YIW69MLr/34/O19Cvv+pFfg2goP/2vtSvq941xsrlGrf
qfvX3+XJW7ZSn60QfeCd4b/vKdt/98b5ISusGAgz//e9iqE5+ta/reDO9mn7
N561p/j7HwpZQ+NXsaQN8Rn3sZZgKWsMlW/+9G8+Xh9Inhyaa43e7Hzff/Nl
Hz1PPFHbGlbG/GX/5vOh8/VpBRNrMEK2CAkSGyqubC2ws8bOzVLMf/FIsjHa
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
     "]], LineBox[CompressedData["
1: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
lovgUoSEJVaWSvhZR7Bx81upVt4yS0RYaro+s2TDKM8wTJ7kmT6TJpXVZmx0
DB1w9yF5x698MPCTERvfCk/FmdAskXbg5nJFPTZOznDJHhOSvOPs5eYynQ0D
SWnrtVstsSHOOFnxCwvsRnZQxBVLCF9uYky+zsL31wl+97It4XLh5EunLBbO
/SyOG79hCXPqM/czl1joPf3G5GixJcYu3+KZpLFwVDxNa/iJJcJLyht8DrLw
yPWoS9aAJWRTPhfJrWNhexCX0kmxwlj09sVTZrIwW0mY/NDWCnk7dJsCp7Gg
NXZtKINuhdXbbU51KrFQsOb1yWCBFQ6GVkaUSpPnV9w/uNbLCjqZ136HfGEi
ddO9Ao1YKzQqGuSY1DOxIDhizPa9FSLvu3w5eJCJ+fdmNbl3WiFtT6nr+kgm
vne0vd7Xa4UHkjvfUsOY8Ip/ufvZiBWUFnTZ/A5gwsoyruCCrDUGr505fGAT
Ey6ByZQpJtYwn1zCeMwi9zvlNOlPrDXGbxXNN5Zm4kgZxf1cojWCnycsNpnA
xLq4E3mMZJL3q8e3m/5hwOrAVN+0dGsstzxdaPONAaeeoo69t62xlOIt8vjI
wBu11+eHP1pDYYFHassjBn49vbO0mWWD3enUlU8PMmDoVHyo2d4GZp9rqJOj
GLh62SLpjaMNpoatDeSFM8Ad/HVzYLUNHjcy3tQGMjB9B75RA2zw34QXQR98
GBjukF1+/IoN1HKeDfIEDLDF1+X6FWyhu/DmC52pDEjdHEr1nGYLle3yK44o
MdA0vCDnpbotQqV34sdkBuyKeQ7PFtjic0+le9NEBjokJrn8B1v0yqwtPfWN
Drm/vxc92mMLXtCrjs2v6Xg8ZHFfroNctx04q3ORjnJP9WVh/9nCs8Frjv85
OqROvYr/+dkWtVeubi5Po6PHLPrDz7+22H7inZf3cTqUVTPe6s21w775lyRr
ougoHvWwtXO3w6SW871dm+mw2WiVZtFih6/m8+3Dl9KxftfujQs+2IHZC43J
BnTMlV9VP7PXDts7+S3JenTMmmgTIPfDDmt9ZNTy59FBvXmjcepMKnYsn10q
pUqH9cmbjxtdqciaO3xS+icNe7/PuNnbSkXySxXVqEoaBiZ833u7iwpqW+ys
qIc0xKX8WRD7iQrmO//u6Ps0qOp+NDH7TYXs88jGhGIazphRul8pAk2a43JF
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
mzjriUfIJTsudlcKN6cRHwid25DF4KLy1YKoe8ThNUOrcrlczJbY2PSO+GHh
+lkFDlx4qkg4/SL2NlZUvOvERXj2kOT0KhGmaocZl7lwEWZl8NGQ2M5TEPPY
g4uN33N/0ImzcmUn160lubNzp+0K4rJnjJLnJDeub9yev4FYZtvxlDckN3Z7
ZKzaSRy8ODa9neTGBYPyy0KIf52/3di7h4ukO5dsDhDfc7616DPJkece+OyN
IT5XLXdtNIyLj089Og8Sp20XC/9GcaEcHBr+77pZ/qzpsnFcvF/8RPjv91+P
/PyrlMiF4TSm8N/9mVHhk2ecIM83GNr/7/kD+TDVTOVChV734d/4/B89DVl4
jouanvZd/8Y/9qWobeklLizDjCkM4hT/Y56ULC4umT00XEJc7jv4Hde5cJU6
5fzv+2TJeF3h5XFRevNOzr/vl7M60M/pNhe2T43M3xPfPfSE717KxYoCqeF/
3/9uykerDQ+5OJRk9+7f/HxP8bTd9piLDR69Y//mLyrxsTiglgtu9O2af/NN
8crOOPSSi221X0NHSD3MNhJ0HHvDxZbaRq+HxCc7dBafbiM5Oe7SvZXEwwUP
Wq7/x4XMsSLzOcQqt65Y3R7kIv395fYPpP40eUoXy76Q75vuWbeG+OjwuZDn
f7gYuStQmk18p/FTX6skDwe9vSKek3o3GZRY1S3LQ0A8f9yaeH9QhfFPFR7Y
H0+s6Cfr66jrlfNzF/CQ9Ut10VHizDMaHxcu5iHIf5exCXFrcM9cYyMeLkhb
vN5G1ufrjkc+DCseznV/S6y4L8Ja57Omm4U8bDkePu5I7M29/XX7ch62O79M
f0fWv6vc7bOBrjyoyKyL+ET6xcsdNzNi1/FgznhV2HtXhIU6hzyvBfDQaejc
40N8pDMm2SOEhxkzcq/23hHB3DMyVymch/yNQe3vST861Fsf4R/Lg2jJtHm5
RSJ8bjU+QjnDw65jAX9fkf43/nHysnsPeWC4qYhM/vVDbuK472MewnsajONu
knrVCEvVqOXhnmjjLRPSP6dPGKeEvOCh60by2U05Ioxekh436+Hh7oTzjqsy
ST8wbjiTrsDH+KBz75HLIvhVTXohUOFDX1JF7UGGCE2H9ap/qPFh2O5tPOuS
CD8XBXSINPlgt60IyT9P6nPqz/tj5Jzw/IRClH8Kuf5imhrdhY9FDRtl5x8S
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
TISRL3bi6Ya2CJYuiltfKkLY//v/e/8H/9JRFg==
     "]], LineBox[CompressedData["
1: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
wPz//x6J+v+/R/ofAPJE4A==
     "]], LineBox[CompressedData["
1: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
hDuauvj+TkzUddxIGSVsKNWZOH0lEzn10YVM8rxxQsnJKTbkeNbcqXTC8V9m
rqdYkPf3mhY5Rbjd0rq3TI+J9oYxax/yPinORubLljDRFyKt30vYr/7z2k55
Jvwq9jpuJ/X5uXQndkgwUaD8/foPwmmzy39NzWDigdDOZamknv8tbkpI+MHA
YESBDI3Ue5fujTGlrww4hkbIDBHu++prUtTLgDNv0bUAsn48x1xWPW1iQOHK
fgc+WW/q3zIMNt1nIKUynkL5uxQCo5vfBm8x4BLWsEOErFcz0ySm+AUGSvr3
dImQ9Sw6tfbxmTMM9AVURkrNIOv523SuzglyvPmnuy3ZD4/LKCq2oQyci1qZ
FUz2y0RmTtTL3QzYS/2cVzKLAvq4TI/3NnL+6d9ibMj+emjVc+WwAwPRD57c
+jKPAoWxI5fvazIQd2FjZKAUBTSZWavXqTDw6JXC3pkyFLz+c0LigwwDDnqr
B5aT/S0u9fqF8F86qhSXTLgoU7CPd/o79zkd9oN1GvRFpP9KtOe2P6EjY2Z6
jOZiCiS9zMO31dKh35pdrbqUAt2Vex4fuUIHNe6bUroeBSt2zpN4FkVH18i0
U80GFASFlkVsDaZD3i3EUo5KwaGj6eYTvnR0zJL4ctuMAmnh2bFKznRM7sid
cQYUVIi9HfHVp2PzDpnl2xzJ+Q49urDoFQ1KH+4pctdTEGc/b19/Mw0xZkZZ
eqTfto6vqix9QMMwa6pWhfTjGQsUc7lXaYhLG7eN8qPA77wTP+AIDff0Kip5
RyhIMf28qd+cBt1tR12bEsj9f3DKrdCj4Zjn3QL3JAo8TBfFHV1Cg3vONp3L
6RTc2yJpbTSPBrE5w7U3LpB+veNGakyfNcoVH9g1PKBAbrph+spUa6iE6Df8
eUJBXfDJpdpHrVF3q/S1dRMFvjNjI2dFWaPgr1358xek/9luvnjPl3z/ibZ2
3CcKZl8sm7WMY42v177390lowGqfxpHQMSvklj4Ki3bTgI7GcmqOgxVeV3i+
zvfSwNqE/2Rtl1mh9fKV5S07NJDX+3VilGmFqzT9VbwgDVC3zr/H17PCr33B
jRlHNbAiQrv29ywrZIhbxo+XaSBmcr1FZrUlQkaVPd0WaMJjr/H7Ci1LiIpf
nZ6nrIm3YCrFqlpiDS5Ff12iiZKZ3zPXLLBEi1b2kmxDTQSO2keNClvCVuVU
jZ8tyR9Nn0Tw1gJSOrqTpRGaCN0d/l0x3QKuudEznw5r4tZOykifiAUilx1Y
8mhSE6snPZKVf5kj9MS2wKdCWqgWV5ntOGqODr/vlyYktfBpg2poQ7c5mr86
K9010kJHnU5bU5k5Ngc3KNvs1QI1p6GE6mOOctnBqIcztLGqJNI9tNkMpm+K
9wvP1YagM3xw9IEZpFY3Oy6fr42En4M5O6rN4FmVenNCUxtCfsPntxaYwcrx
zJ27dtpQWb+W4hdjBuXKCxdNzmrDandY7VcLM3i98KBuZuiA8fvAx7JcU7wy
W+muKtDBPe9Ct/lnTHGbNdEzsFoHSlu05gQnm+LD2paWU546sDufOs6IMoWX
uLmCc6IO+u+MuHzabIo2uvJS924dRC6u3FKgYIocw7YdybG6EPT+/Pr5pAmq
ChZOrj+hizlX1+xMOWoCD/XwGK2zupg3f/km5kETXGB8Sn5bqouCU86ZZ/eY
QH9TtdV/r3WRLJ/9InC1CeQbktbcN9ODulCQ0Ll5Jui1HNZtGtLD4vETm98l
GiNPv0nB8aceJgdmRgvHGmPzwG/3XhF9TJ8jwtAON4YLjft9vrI+XnPkD4f5
GZP8OPaudbk+fOkdJ9irjFH7+fnKggJ9VE47q7VKyhiBTzNSb+w0gPXxc8zd
6VQM2ig5qoUY4PYHmdmfj1NR071PLi3WAAlyZbnb4qiQ3tkTk3zeAJzc4o3b
91OhJCPU2v3MAAeFXYWOb6Ri+s5w7jtFQyimmRZ4qFKh9exKjH2MIZIilB9y
C43wsishPOaoIULum9RG5RlhkVO+S1WyIXieJXZ3zhph53T3avNsQ2juijVZ
nmiEWoZMh0uNITZyVrvG+xnhj4f0xc0/DDH2WUOh3MgI+ocDF1L3GIEz0DH0
5pYhGk4tOt293wg8GdOy5GuGSP+tfutYlBHGFyY4Lys0RMyKzBc/koxAf+qo
X5dpCHeJbPZUsREmAhy3vI80hOShpO+XhoxwP0/jTDffEH3275yy/Kgw+Hiz
7lKpAd46Od8wCqIibtLN+lueAWKpDn/uh1Gxok/9ueCUAVwUvZZ/T6BCxtJh
n0iEAaRF554LvUKFn3Rca9sKA8QF/IyW/ERFacvhI43EC28eEZe19yJ1bO7/
bqOljws6OgxrUrcVa/L995M6jshbLNAKMka52QKfMil9WClvahQndb8+nDqw
jKyDdPZuhfF8Y3Cmje9+XK+HlHXHA9FnDMuBxzKm/nqgq9V51nmbIK7tvkRL
jS5UeGXtJbtN8J/lSL7cNV34yjur54SYIGxl3173i7pQl3Fenphggi8zTz9d
kKSLv7U2kYdKTNBQH1ox4qaLoJJLNlOTJhjI3uzpOUsX9V+jPn46agr76p0n
3NeTfeOb/kE/1RTyA3bHW+2IB46U+gadM0XBPjNdO44OZofazZlbSo5f11rl
aqCDPHFvpnO7KXYEhCZOiuggp6hT22OxGfJzTkZNXSfel8nRZFaYQTw5032L
gjb6mgrZuXVm2LwxJcJUShs+NNMw0QYzBIxrWsnN1sZ0XaCr2wxJR1nJI9+0
0HV7VXWGsDniH5vIqrRoofyVkO1+e3OcuBgVK0jQQsuNcW7BJ3N827+rZWyW
FrZqyUmtHDOHYfTCNdNJX7O/LH1hhPS5Hc+GqxRI3xuw/6EGSQv4Wvas3d6v
Ccndl5VHzSxwT8GtJewx6bNncmsuxljg04NZbw4lauLsW/MXvMWWMNo1dFiV
9OX3vopvArQtcVGpUtAzXxO6j1y1c4wt0c1zevufpCY6VK2jp/MsYb1u/LSr
sCb6hLk/nvmQPj8p4qo/qAGvGl/ZguuW2GdUGBJYrYHrvLuCATIHJHzeO94n
c0E3Y3qmzkNL1J9+rLroKpkbx9ecLX1pCSFb+YNfLmjgOV6UPfljCfndtIvf
kjQQr2DvZ0DmkLTTreTrZC5Jng1KjSRz6ueKTf0pZG7Z5j0sb9loBacBX4S7
aKBEamRgv58VFFxv/NrhoIHA5/E1rSetIJNx6eE1hgZMXmzTudZthdH+d0Xf
5Ikneouuk9prjUuLQiNs2yhwklxxf1mENWKcxDd/J3P13H1Z0YNHrCHgiPz9
r57kmNT8v98zrdFtNCuRcZeC8pLrTp8fWOPqjpCf3VeJ95Sv1v4mT0NG4kkF
SgoFkW9XBluSOR8jvbsggsz9YSnf7eEkByRIF0n0klywJ8vPSMyGhuQ+B+en
hygQmrHkr+YOGtRbtcXV9lFQsHyPSFQ1DbXuWU/aNlNQcjeY3/iQBt4WqmzX
RgqyYsWFlFpoMNGazRpyJrlMyepxeR8N0o0NfOM1FAS0/tj+fR4dbx31VCGg
gPOuUUKgQIfwMq+Mc1wKNAO6pE+r02Grq/9nFpuCvswxXZolHfNvrDs0RSe5
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
IXyxfK/SoABWf2i6nsU02Mhl32UTNl06qXGzgob46/PfbSMs3nPx3Kx7NGys
8aMdIXwAmxPXN9Jgduv884uEaep6I1c6aFCczCq8S7hhDeXhn/c0HE7yudNF
WCdwo7jDFxoiPb7JjBHuFOuuzv9Ozq9snTfziwDJ4bc7fkyjo0TPbM8Cwgvl
pTbYidMR1/QubClhrRm9jNz5dOjPtHpoSJi2alnMpCodKzKt7SwJrx9erWGn
Q4ecVq80k/DUbYmleaZ08GdS5WwId4Qlhfxk0qG7QX3dPy5p/qi+2paOLOnK
ln+f5/CXLr60lg6RvolEK8JC69f7/t1Mh92al7FUwkNeKTOcttMxke1RrUE4
tKqv578AOma/P2OkQNg9yVVsVji5/mB0jyhhVxHpwC1xdNDcVFonyPNq68xR
KU+mQ+VKgNA7wrp/N4pIZdLxZSpuxyPC+3bKavhcpMPBzlO2iLDfak7k3VI6
Yjwlp44RbgyamqtcRYfZ0+RFfoTXZSx7GvSAjoyX36JsCdf4MCqbm+nIVjws
NEXqe/zohgWHPpD7661XaiK8/2dWxJuvdJwLUgnOIvxjbYOY1U86rlWp9VkR
bk2bF/5VggFv3sjPGYT9V/JcbRcycJU3y+4JWW+Nx8+vz1/CQMrY8mI7wiqz
vx/aaMGAY0VmtTjhhg6ZazdtGBjVCBN79EmAFb5Jn6VWMuDy1NjVjPDjjx/2
PHJjIGeLyfZPZP3n2b+uXOLLQOFqudLThGsidgtHBDFgf6H19wjZT+V6RXGm
Rxn4nf92egbhjfoBNUmpDIQz9fhMwl4/pfs/nyfXl/mSGEX2p6288pyc6wzc
eyi64APZ79SDsxlzu8n93G+OCCfcsDRvb9lHBia3MQ7K/esH3o7H3EYYmC8X
tIFG+kWCt9/6G8JMRJWuWbmT9JdezwMyG3WY6OQKjo29FeDQaKeksCkTe97e
9QkmbMc36ipkMNF4un4imPQriqFx6+/VTKSuP7fZhfS72bz8v2f3MbHaXBDR
1CVAxOw2LU40+f6WCLLpyX5q7ZL4fJSJY4NLEhVeCbBy5de/5ueJt2cuP3qV
9E9hf6Z1430m8iypyv6kH++tEBHaKwrEpZySr24RYNrDyi6uBLBQXezaLMLi
Co8PzpcB2qfq7qc2k3rdXqpbpgQ8MT+9LfUpWQ8ux+99MwDePKI+VCPzQmJm
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
zUhP
     "]], LineBox[CompressedData["
1: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
ezDKUpULn/XVDn8WAqX7NlVf0uOCu3HR2uZsB4y+adJ8YssFxXfjqfupDphe
9PrqZzsudDeNlnXvckCqiLfufAcumvs36D3b6ICsYK2LhlQukiIMTbqYDqg/
3s+IY3JRtuSMHeePPcxUnqLPnYvDiNR8vMke/17saahbzUW30b66e2vtMbev
zqg0kIuTY3FbbvjaQ3NLavrhNVxskDy/psDRHm6rJd9vXstFjoFJrquaPfg6
L7AkQ7ioKNo8j/vcDkq3PAu1tnDRPhW1X8nRDqH6v9/Ex3NRUHI74oWtHQL/
jSUyd3IhmkBrO2Fqh+3egz/Fd3GhKHauU0zVDgZhb9JPJ3DxanlyxMhvW5xO
9xa4tocLtX9Cwisu2sJ0tMu7eh8XM5cjbJUUbZHWdnpBfS4XafnOba8lbCHL
rtLeeoiLnbYOj84I2KIs/csHlcNciNyWWac5ZQP6Wi9O6hEuCp/vHpa5bwO7
4+bd1nlcjJ6fe38l1gand39ghZ7kYtnnzML1W2zwWCnvCH8BF5cSz82TWGeD
2Ii9CWeIX9i7PQ92twHbxM/4xSku5n25I/lP3QYrvzHUrIu52Heq0X622xpu
yZJzV0pJvN4q4ofvWaPALpzucJaLYyofr+vdssbMzc26bcTWDcFVvuXWePG2
prunjIvW3B0u5butkTVAS39eQcbfeF1aSs8a/YWiCaXnuOhpq/icr2wN24+c
AtnzXNwZVO9SW2yNyge8fhnEj97m1i/nscYXt6XlYRe4MGArp9r3WyGjZOiw
TC0XmzjV+0ySrZDQGpez/DIX8TVhf4LirDAYLUVNI/4v+mRbTrgVXo/73XpB
fHiZ6OqRVVYITipckFLHhdWl1kdHTK3wWfKO5O0rXBgxny9t0LWCvFauoMRV
sh+2Njx5r2yFRqNNd/2JtySdijNfYIW08T8nxonvN2VPdQ1b4q3z+VNC9Vxc
mP/m8tSAJfKWTTxmEfNlrB+TeWyJhLV1XdnEZbcqn61usISabJKi2HUy/j7d
e++PWeLRsigxnhtcfC8bPiqQZQnDD0K7rYileawmtJItIZlYcSmK+FF6sE9o
uCVuuLZHvyLWMXqk8drREoc1FJiVN7mQ3Otf8MfWEozMxNFnxK/lpi4rmFqi
rzjVR/AWF293z3Z6KVsiNM45OYjYqY75JGKxJcRYE9RM4vZ5vimZopYY/bqw
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
CkpBMSV6+O8p0qj+/98DOv7/3wP+H4IRfb8=
     "]], LineBox[CompressedData["
1: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
3C5yzj427nOUkjGewwPX//d7+f8DAVM41g==
     "]], LineBox[CompressedData["
1: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
FGD4vEXI0UtyUN/sWJXIoQhTEg3pxU/lgLwtafQeixLsjOEmVNTl4XZF426q
iBJE2YiMOFLlQfWJjvMjRSUwDl9vizKSB46s3r4HdCXIVpLZ9McW38fevjjk
EKsEwf75tR4+8nAtk2vJflUJZu/0x47nyYN/+txrPXxvbpQTIGrJCpC7tlX5
7m9lOLfwxe+DqgJ4Xn33hJtNBYyz6ZasVHz/jFW/2K6gAleT9neFWyqAw9GN
1kvuKuAn0SHedEABZmWHXiy/VoEOawnnpQIFWOIrOldbrAolhgezi/QVYWD3
iXrbx6owFx8XMERTBMuDkVVvXqjCT+cbV8Q2KwLHN8Wul2OqkN5g1lqwVxHe
95e7+oqqgcPfuSrVGEXwiXoQbBajBpFF7XqPOxVBwVJtdfNWdTANvvPne4AS
eJ6Qdubfqw7uEW67IkOVoNqh4M9bX3UYdJHM54xWgqN6ImI0/K7x7fUQoqUo
wZe0kZ1tJerg+vfmv5XHSiDBcNIjlU0DjIWZv9SwKcMlnlrX9ToNSJydMbAr
Vobdp1ZzZlo0QL0z83jJQ2VgOf6k/3WXBsQldO0SRsogFi0iFDupAfuyCpj+
9igDW0lOaAq/JuheGHkqvK4MmblZmR6+mvD3TdeRuJ0qUFt14/xlDi0QSTA4
bsmsCmeOqjw5KKwFbqVaUr58qmD8LMnGhKQFEaFROlelVGGvSOz2Nj0tKBaz
yFnTVQVZL7EvEZ5a8EszgV3bVxX2l/UeMqzWAlMFstDiS1UQO8bMzLNLGyaY
or8OpKnBg+pvym/2aUNFt3Xkpztq8KzgvlW8nzZk3zFg+1muBko7ju/+eEob
Wg5XMGq+wuUHtt8Rv60NlF3c4gvralCfdjBgeFYbjk0HnG7wVweBBxrKDWYU
qHn32dHPWgOOz6tUNVlQYODN7ol92zWgKmdWrdmaApvPZCjt9dAA/8I3g7Vb
KDAymJvlHaEBbne8xIPdKSDPOfq37oEGJFxgtZGKpIAMI0fJMVFNWPOIeepc
QwGFO8sVy/OaQLq6c7rvMQWeCU7Rs1Y1IXoHz9j2pxRgOXJDzBbP49n2Z4bm
zRTwEsoKKVHUgnstPIfG31JgevV+zkM3LRgve8jnOUuBFz8snz97pQV0j8ZO
NRkCSimyX1MeaEPHgrShEH6nq2ubCKU80YaQ1pCY3/IEmMdMDqe91IZrJKfS
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
     "]], 
    LineBox[CompressedData["
1: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
/LNrw+ZZqN8p8ZbBkbnL8VMrtsvnjn9fmhhWNvdlDmEzZan/bSyoYZQ8nWQN
foNd/JxLTLqCoVe3bovYmhXduas1cxkT677eftKCje73rD91itLXkRTrvOb5
W7wnf+RTzDeaj7OuWfPADvZ/jynnp/mfVTTj7yWKbBynIErFHrZZd2ymqdvM
1Q3NlB/M6PH3Jlye1U/dxPqOcs2gWDcfGzj+jL7Ib6ekfeRR98ZmEl8hn6B/
pDhNziVQ1lzGc4h3pJMyQTrrKrjmVoXysugvFI+qmLyJRuwm+7M2Kt8oL0V2
27etOSm192dbL+WTS6N3OTZMMt3R0fpOcZRbWLqNnXW4Jf/C2X6KZ/l4T+za
8zzrl4uLBygcGQz/UGyUNranb/AH5f6Jsx+uYEtlvz6yadsghfMK+2AAdlBj
1yft/b8oMgKB5cFrz3e6uh26OUTZpdulG7XmhkcNgW+HKfV9vIEp2H3tbAVp
HKOUyAbZgMK18vjimofGY5S4a/yaaK09K2MvagLGKeIp7wu/Yh9OFdj3umqC
UgPOXYtr77ufMm7685tiXnC/Vgr3PytWRrT/5iSlv6n8mDn2ZLT/8FfyH8rQ
pVP1vmuudf39/u0fivCxN9+KsOPJUSz1nlMUX976RwPYvJ3Jq484piku+K4i
hcfHu0DzRXr+NOXarGnkEWxUICwcbDxDmT77KOYe9uHxHwNH+mYovFq+5lPY
UvdsmQwCZimFLBF1hmvjr8JpKiQ2R5nzbJ25ueZhlZIK+7+UiId3r1mu5VP3
Stjlyb8U1z8bh0qw1eVGxwyuz1MUc6zXCa/lZ/KftrKGf5Q/XiyuU9jv9Nkr
7LSXKEkjUp8HcH4f1lrsGPm4RDkw7s7qiecDb+0vu8tnlyme6bkj89jxxyrf
RBWtUDSVj/dK4fnEKzZRXxDLBDmTAl6FeP4V9G0ld3UzgSBp/MBePD+93ccq
WJSYgRQRxsr5CcfXdcND69fMMN1k7B/QieNnPniwbHUdAHVoMQPPf/eXD48i
Kxbo+Vue543XB3rRxYGmdBawP1XLYobXD/f3DZve7loPlWKtA+w9eHxOrSzf
Oc0KJ+1TZGu+4/LMO5EWPezwkK/Un2tEF1IjLsvGkTeAckfnc2O8vnk3VXG9
Cd8ARWcag4Lw+sc0nupMUuOAHxwpKZy/8fNfsg/cC+SEsDtJE4dndMFx4UKj
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
PGORIwP9A/3Rv57bgGXBNXcKnwyUHsl/WPoef3/JQ4FtVBo8bG2dwxdx/w7P
ki90SUPpeuGOTSu4PLqFtfeVNJw1tvS1YLKFnR+VN+dmSUPNSiDn23W2MJ/6
NmL8P2moXuhafM1uCx1CRVLxjG2Q/PZNfRCfLezZcVeGFCcFwUayNzfK2EI8
j/spywAp+H74e5uwrC3EMLnVuJyUAteOl/NScrg+6biocJoUpEXMbyEr2ELX
xT/ROquSMGK++RZN2Ra0dmVQ5HokgL/1gyZeyiBebl/klWRx+Jr90u6QsS30
hQTsajwjjuNXJEo3sQWmR8u8G63EIZRV8rWaqS3e9wZOXGYRhw/Szd2LVFto
/LW/hMd7C/h84fsZbm4Lk29FD/+jiQHbk+Pa7rtx/dIVhXLTIvD7llagw0Fb
4H3ZxxfULAKQPn1J+ZAteAcbNrZni4Dc+kQZ5sP4+1Y61q62InCvNToi/whu
f+1DVu0HwhCU8SH0u6stiPpPHig/JgQLPJ5bRE/i7xFHtt/TE4Kz3BXzXdip
Z2lTSQJC4GVECUn1xPV3hXw9WCsIJ6gmtwS8bEG9/aLsA3FB2PhS6v0/b1vY
0P52RL+dH67oy+iE+9jCkOmjts4CfuC4WlNHumgL6M2Kr2cgP/SLOM98xVa3
s7MNV+YHibSe3cqXcLzp+x0CwvmA36t+strfFqSU8xSuavPC6b9nbt4Owu0z
p/8I0doI159eN9sfaYvvC5bhsiOcMDHcLvcBG3735dWmc4K33ZEOsyhbKG3i
yB9c4QDu6wN3iGgcr8dd3T/rN4BetN3sfIwtHFY5ZNpswwb6wv7B5vG4PXyt
fdzMbOBcJuTwEJvpbwXZsowV2haN/vHfwP2/k0l/KsgKvAem7n/CzuLucNn7
mQViLq48sUm0haDB24kVR5hhf2HKyQ3JuD7GgffF/Mxg6+sk4ZS8Nn4fmLJf
MoHoA9PM+9iwteNqgCwTRCibstJTsDdqh/O3L1OCwhtPnU/F9e3s8Woglimh
p4uvVWNn0ed8zt1covTYSnmx3MLxtLl79anjIqX24pms69hZqcf6//XMU8KD
u1MT07DDlzb7wzxFm3JEqB0biV9+MJf9l8L2dPLApnTsizHh31znKDZ/p+zC
sZmWMv/zGpmm6G4abT6WgeMvJlHbYDFNIa9XzE/DZqr/75XYgynK7TJmq7a1
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
sjnQgp/IdZaTkcfckcjceXOIX4x5ta6KjKrK8oXlZ8zhoWIpYfmCjOpGb1cp
jZqD4knv6ntNZMSXu4Gs9Nkc7OwFu4K+k1G5/Z1Vlsfm4MS1U8LtBxntGVRN
9y81h8asfzX0X2S08K363FSROWztv8u9MkZG0ltN+r7lmIO4/KY36vNkVMG7
paEo3hz8RE01KrkJFObgXCPjaQ5fOUo/7OYl0FkbfH1yM4dFNZa6IX4C8QjJ
/F48ag4JlV+iN4gSiN+/8tC7febwedfXuk3SBGKlSMmcoZnDPS5LTT0NAnnF
fNNIlDaHEabX6hyOBFKpG3M50mUG9xvMPcycCOR+JbRM9YMZKOc3P77qTCDf
k9d3L7aawbwpR9DgYQK92Gx+LeGlGRxy/tPmeoJAebzflp+UmMHl5a7Xxpew
Wa/6/wrF9dmlf5DxJ9C3j+/j7geaAY+2w6/VywRa7GDlOeVnBnUu52XygghU
MRVkPXnaDPpaJn7mXcP2C+eadDKDmPznvNeSCOSzfHbgo7oZdJbKOG9IJtCc
kphDvJIZTJzYc+9qCoHiTemW5nJmULlPV9c9jUDXle41VW8xA7O6WcvhOwSS
PXtJI4PNDNg4HKJ0sgkklnH4jx2zGXBfEqgPyyGQMrVEn2OJDof6BJQ47xIo
KPD39fN/6DDXlljdXEig6BCSDrWbDs9itdtH7xPoctW5/H+f6HAU6N/Ziglk
HLK+tPg9HZC+2YhiCYG+EBHZfK/pQO//lqlYRqB1PU5KnY/o4JJa57OlnEAR
dfYPrxXToTH+hilbBYESO6O+7bpHh+7e9w1NjwnkeUyFkpJBh9b0p745lQQa
Yvt0gZpChwpXX6kLVQSy3bHrwOwNOgiyt70wfEKgg5m/53JjcPv+//d2Qf//
e7v/A2h8qWk=
     "]]}},
  Axes->True,
  AxesOrigin->{-50, -50},
  Epilog->{{{
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\)]\"", 
          StringForm["[``,``]", Rational[-1, 6] Pi, Rational[-1, 6] Pi], 
          Editable -> False], 14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[1, 3] (Rational[35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[2, 3] (58 5^Rational[-1, 2] - 7 10^Rational[1, 2]), 
         Rational[2, 3] (Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 3] ((-58) 5^Rational[-1, 2] + 7 10^Rational[1, 2])}, {
        48.26168844414885, -8.446166167315075}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`0\\)]\"", 
          StringForm["[``,``]", Rational[-1, 6] Pi, 0], Editable -> False], 
         14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[2, 3] (29 + Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), Rational[-35, 3] 2^Rational[1, 2] + 
         Rational[1, 3] (-29 + Rational[35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {55.03011700778253, 22.71441491560617}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`\[Pi]\\/6\\)]\"", 
          StringForm["[``,``]", Rational[-1, 6] Pi, Rational[1, 6] Pi], 
          Editable -> False], 14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[1, 3] (Rational[35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[2, 3] (58 5^Rational[-1, 2] - 7 10^Rational[1, 2]), 
         Rational[2, 3] (Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 3] ((-58) 5^Rational[-1, 2] + 7 10^Rational[1, 2])}, {
        43.779263708973474`, 50.016157986093994`}]]}, {
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`\\(-\\(\\(\
\[Pi]\\/6\\)\\)\\)\\)]\"", 
          StringForm["[``,``]", 0, Rational[-1, 6] Pi], Editable -> False], 
         14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[-35, 3] 2^Rational[1, 2] + 
         Rational[1, 3] (29 + Rational[35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[2, 3] (-29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {
        25.548590021253393`, -0.1357078865702448}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`0\\)]\"", 
          StringForm["[``,``]", 0, 0], Editable -> False], 14, StripOnInput -> 
         False], TraditionalForm], 
       NCache[{
        Rational[116, 3] + Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[-35, 3] 2^Rational[1, 2], Rational[116, 3] + 
         Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[-35, 3] 2^Rational[1, 2]}, {30.41708755282361, 
        30.41708755282361}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`\[Pi]\\/6\\)\
]\"", 
          StringForm["[``,``]", 0, Rational[1, 6] Pi], Editable -> False], 14,
          StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[-35, 3] 2^Rational[1, 2] + 
         Rational[1, 3] (-29 + Rational[35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[2, 3] (29 + Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {22.71441491560617, 55.03011700778253}]]}, {
     
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`\\(-\
\\(\\(\[Pi]\\/6\\)\\)\\)\\)]\"", 
          StringForm["[``,``]", Rational[1, 6] Pi, Rational[-1, 6] Pi], 
          Editable -> False], 14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[1, 3] (Rational[35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[2, 3] ((-58) 5^Rational[-1, 2] - 7 10^Rational[1, 2]), 
         Rational[2, 3] (Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 3] (58 5^Rational[-1, 2] + 
           7 10^Rational[1, 2])}, {-2.792346553164876, 3.4445477239556386`}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`0\\)\
]\"", 
          StringForm["[``,``]", Rational[1, 6] Pi, 0], Editable -> False], 14,
          StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[35, 3] 2^Rational[-1, 2] + 
         Rational[2, 3] (-29 + Rational[-35, 2] Rational[3, 2]^Rational[1, 2])
            + 
         Rational[2, 3] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), Rational[-35, 3] 2^Rational[1, 2] + 
         Rational[1, 3] (29 + Rational[35, 2] Rational[3, 2]^Rational[1, 2]) + 
         Rational[2, 3] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {-0.1357078865702448, 
        25.548590021253393`}]], 
      InsetBox[
       FormBox[
        StyleBox[
         InterpretationBox[
         "\"[\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`\
\[Pi]\\/6\\)]\"", 
          StringForm["[``,``]", Rational[1, 6] Pi, Rational[1, 6] Pi], 
          Editable -> False], 14, StripOnInput -> False], TraditionalForm], 
       NCache[{
        Rational[1, 3] (Rational[35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[2, 3] ((-58) 5^Rational[-1, 2] - 7 10^Rational[1, 2]), 
         Rational[2, 3] (Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[2, 3] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 3] (58 5^Rational[-1, 2] + 7 10^Rational[1, 2])}, {
        0.10387658538596867`, 47.149576129912276`}]]}}},
  PlotRange->{{-68.85617579776732, 114.90711948166656`}, {-68.85617579776732, 
   114.90711948166656`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  TicksStyle->Directive[28]]], "Input"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.600470513024192*^9, 3.600470513516775*^9}, 
   3.600540431691745*^9, 3.600541214739091*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
  ImageSizeCache->{14., {3., 6.}}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
   ImageSizeCache->{14., {3., 6.}}]}]], "Input",
 CellChangeTimes->{{3.6005420633015833`*^9, 3.6005420635258913`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
  ImageSizeCache->{14., {3., 6.}}]], "Output",
 CellChangeTimes->{3.600542064115988*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.6005420661647243`*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
  ImageSizeCache->{14., {3., 6.}}]], "Output",
 CellChangeTimes->{3.6005420671706123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scanRot", " ", "=", " ", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{"\[Pi]", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"pV1", " ", "=", 
  RowBox[{"scanRot", ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"pV2", " ", "=", 
  RowBox[{"scanRot", ".", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.600470656877878*^9, 3.600470662266095*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "3"]}], ",", 
   FractionBox["2", "3"], ",", 
   FractionBox["2", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.600470662662343*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["2", "3"], ",", 
   RowBox[{"-", 
    FractionBox["1", "3"]}], ",", 
   FractionBox["2", "3"]}], "}"}]], "Output",
 CellChangeTimes->{3.60047066266462*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tipAng", " ", "=", 
   RowBox[{
    RowBox[{"1", "/", "3"}], " ", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Ceq1", " ", "=", " ", 
      RowBox[{"CircleEq", "[", 
       RowBox[{
       "Cm1", ",", "lat1", ",", "long1", ",", "rotorLength", ",", 
        "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ceq2", " ", "=", " ", 
      RowBox[{"CircleEq", "[", 
       RowBox[{
       "Cm2", ",", "lat2", ",", "long2", ",", "rotorLength", ",", 
        "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ceq1", ".", "pV1"}], ",", 
         RowBox[{"Ceq1", ".", "pV2"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ceq2", ".", "pV1"}], ",", 
         RowBox[{"Ceq2", ".", "pV2"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Ceq3", " ", "=", " ", 
           RowBox[{"CircleEq3", "[", 
            RowBox[{
            "Cm3", ",", "lat3", ",", "long3", ",", "rotorLength", ",", 
             "\[Theta]", ",", "\[Theta]xV", ",", "\[Theta]yV"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Ceq3", ".", "pV1"}], ",", 
            RowBox[{"Ceq3", ".", "pV2"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]xV", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "6"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]yV", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}]}], "]"}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.60043615827267*^9, 3.600436172845993*^9}, {
  3.60047010977664*^9, 3.600470111167618*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCYBsQgehSMglEwCkbBKBgFo2AUUBcAAFwLAkQ=
   "], {}],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0., 1.}, {0., 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.600436164939897*^9, 3.600436174284309*^9}, {
   3.60043632395704*^9, 3.600436331849128*^9}, {3.6004701123797913`*^9, 
   3.6004701148631773`*^9}, 3.600470148727682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotationMatrix", "[", 
   RowBox[{
    RowBox[{"\[Pi]", "/", "4"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.600432347522468*^9, 3.600432359616928*^9}, {
  3.600432397946272*^9, 3.600432429800335*^9}, {3.600432519758828*^9, 
  3.60043252370243*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SqrtBox["2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      SqrtBox["2"]}], ")"}]}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.600432423041853*^9, 3.600432430185504*^9}, 
   3.600432529129054*^9, 3.600434351108612*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      SqrtBox["2"]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", 
      SqrtBox["2"]}], ")"}]}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.600432423041853*^9, 3.600432430185504*^9}, 
   3.600432529129054*^9, 3.6004343511123123`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "4"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ".", "v"}], ",", 
   RowBox[{"{", 
    RowBox[{"v", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1", ",", "0"}], "}"}]}], "}"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.600432655491967*^9, 3.60043269818649*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SqrtBox["2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SqrtBox["2"]}], ")"}]}]}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", 
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "-", 
         SqrtBox["2"]}], ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       RowBox[{"(", 
        RowBox[{"2", "+", 
         SqrtBox["2"]}], ")"}]}]}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.600432698698166*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["-"], "Input",
 CellChangeTimes->{3.600432688314196*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SqrtBox["2"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SqrtBox["2"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", 
       SqrtBox["2"]}], ")"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       SqrtBox["2"]}], ")"}]}]}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.600432656573963*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RotationMatrix", "[", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"z", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
   RowBox[{"RotationMatrix", "[", 
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
       FractionBox[
        RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       SqrtBox["2"]], "gearbox3Length"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"-", "1"}], 
       SqrtBox["2"]], "gearbox3Length"}], ",", 
     RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.600432986021267*^9, 3.600433019541563*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "n", ",", "u", ",", "v", ",", "RotM", ",", "C3rot", ",", "xyzNorm", ",", 
   "x", ",", "y", ",", "z", ",", "\[Theta]y", ",", "\[Theta]x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.600433625481374*^9, 3.600433632913876*^9}, {
  3.600433776984515*^9, 3.600433779166333*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1015, 695},
WindowMargins->{{Automatic, 89}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 6, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 119, 1, 67, "Section"],
Cell[701, 25, 148, 2, 27, "Input"],
Cell[852, 29, 312, 8, 27, "Input"],
Cell[1167, 39, 461, 13, 27, "Input"],
Cell[1631, 54, 179, 3, 27, "Input"],
Cell[1813, 59, 926, 25, 104, "Text"],
Cell[2742, 86, 273, 6, 29, "Input"],
Cell[3018, 94, 435, 11, 27, "Input"],
Cell[3456, 107, 696, 16, 46, "Input"],
Cell[CellGroupData[{
Cell[4177, 127, 229, 6, 27, "Input"],
Cell[4409, 135, 195, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4641, 145, 7159, 173, 343, "Input"],
Cell[11803, 320, 5224, 97, 661, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17064, 422, 8774, 214, 373, "Input"],
Cell[25841, 638, 4988, 96, 651, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[30863, 739, 420, 12, 27, "Input"],
Cell[31286, 753, 1334, 38, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32657, 796, 14620, 367, 578, "Input"],
Cell[47280, 1165, 7323, 145, 587, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54640, 1315, 1600, 48, 73, "Input"],
Cell[56243, 1365, 1087, 28, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57367, 1398, 931, 23, 43, "Input"],
Cell[58301, 1423, 1441, 38, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59779, 1466, 424, 12, 27, "Input"],
Cell[60206, 1480, 1452, 41, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61695, 1526, 144, 3, 31, "Input"],
Cell[61842, 1531, 80, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61959, 1538, 191, 4, 34, "Subsection"],
Cell[CellGroupData[{
Cell[62175, 1546, 20025, 482, 1287, "Input"],
Cell[82203, 2030, 5661, 102, 455, "Output"]
}, Open  ]],
Cell[87879, 2135, 201242, 3351, 367, "Input"],
Cell[289124, 5488, 140, 2, 27, "Input"],
Cell[289267, 5492, 111, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[289403, 5498, 205, 4, 27, "Input"],
Cell[289611, 5504, 154, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[289802, 5512, 71, 1, 27, "Input"],
Cell[289876, 5515, 156, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[290069, 5523, 578, 16, 58, "Input"],
Cell[290650, 5541, 211, 7, 47, "Output"],
Cell[290864, 5550, 210, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291111, 5562, 2446, 63, 178, "Input"],
Cell[293560, 5627, 490, 13, 373, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294087, 5645, 732, 21, 43, "Input"],
Cell[294822, 5668, 469, 16, 46, "Output"],
Cell[295294, 5686, 471, 16, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295802, 5707, 852, 27, 27, "Input"],
Cell[296657, 5736, 2864, 108, 81, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299558, 5849, 69, 1, 27, "Input"],
Cell[299630, 5852, 695, 27, 46, "Output"]
}, Open  ]],
Cell[300340, 5882, 1077, 34, 94, "Input"],
Cell[301420, 5918, 325, 7, 27, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
