(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    674187,      13177]
NotebookOptionsPosition[    666213,      12914]
NotebookOutlinePosition[    666567,      12930]
CellTagsIndexPosition[    666524,      12927]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Simulate the MRI 3 axis device", "Subsection",
 CellChangeTimes->{{3.599908276819935*^9, 3.5999082922049103`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"maxAngle", " ", "=", " ", 
    RowBox[{
     RowBox[{"30", "/", "180"}], " ", "\[Pi]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"page", " ", "93"}], ",", " ", 
    RowBox[{"the", " ", "capture", " ", "volume", " ", "is", " ", 
     RowBox[{"\[Pi]", "/", "9"}]}], ",", " ", 
    RowBox[{"or", " ", 
     RowBox[{"1", "/", "12"}], " ", "the", " ", "volume", " ", "of", " ", "a",
      " ", 
     RowBox[{"sphere", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DrawRotor", "[", 
    RowBox[{"trans_", ",", "rotAng_", ",", "rotVec_", ",", "spinAngle_"}], 
    "]"}], ":=", 
   RowBox[{"Rotate", "[", 
    RowBox[{
     RowBox[{"Translate", "[", 
      RowBox[{
       RowBox[{"Rotate", "[", 
        RowBox[{
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rollerRad", " ", "=", " ", "5"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"rotorRad", " ", "=", " ", "20"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"sphereRad", " ", "=", " ", "6"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"rotorThick", " ", "=", " ", "1"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"bracketThick", " ", "=", " ", "2"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"White", ",", "\[IndentingNewLine]", 
               RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"sphereRad", "-", "rotorThick"}], ",", 
                    RowBox[{
                    RowBox[{"-", "rotorRad"}], "-", "sphereRad"}], ",", 
                    RowBox[{
                    RowBox[{"-", "rotorThick"}], "-", "sphereRad", "+", 
                    "rotorThick"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"+", "sphereRad"}], "+", "rotorThick"}], ",", 
                    RowBox[{"rotorRad", "+", "sphereRad"}], ",", 
                    RowBox[{
                    "rotorThick", "+", "sphereRad", "-", "rotorThick"}]}], 
                   "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "sphereRad"}], "-", "rotorThick"}], ",", 
                    RowBox[{
                    RowBox[{"-", "rotorRad"}], "-", "sphereRad"}], ",", 
                    RowBox[{
                    RowBox[{"-", "rotorThick"}], "-", "sphereRad", "+", 
                    "rotorThick"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "sphereRad"}], "+", "rotorThick"}], ",", 
                    RowBox[{"rotorRad", "+", "sphereRad"}], ",", 
                    RowBox[{
                    "rotorThick", "+", "sphereRad", "-", "rotorThick"}]}], 
                   "}"}]}], "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]",
              "Black", ",", "\[IndentingNewLine]", 
             RowBox[{"Cylinder", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "3"}], "bracketThick"}], "-", "sphereRad"}], 
                   ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"+", "sphereRad"}], "+", 
                    RowBox[{"3", "rotorThick"}]}], ",", "0", ",", "0"}], 
                  "}"}]}], "}"}], ",", "1"}], " ", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"ferrous", " ", "sphere"}], "*)"}], 
             "\[IndentingNewLine]", "Gray", ",", "\[IndentingNewLine]", 
             RowBox[{"Sphere", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "rotorRad"}], ",", "0"}], "}"}], ",", 
               "sphereRad"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], "]"}], 
         ",", "spinAngle", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", "trans"}], 
      "]"}], ",", 
     RowBox[{"-", "rotAng"}], ",", "rotVec"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vp", "=", 
   RowBox[{
    RowBox[{"Options", "[", 
     RowBox[{"Graphics3D", ",", "ViewPoint"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"drawNeedleActuator", "[", 
    RowBox[{
    "\[Theta]x_", ",", "\[Theta]y_", ",", "Horiz_", ",", "ShowScan_", ",", 
     "ShowLevel_", ",", "OpacityVal_", ",", "gearbox3Length_", ",", 
     "gearboxLength_", ",", "needleDepth_", ",", "viewPt_", ",", "imgSize_"}],
     "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"units", " ", "in", " ", "mm"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hoopRad", " ", "=", " ", "50"}], ",", "\[IndentingNewLine]", 
       RowBox[{"gearRatio", " ", "=", "10"}], ",", "\[IndentingNewLine]", 
       RowBox[{"hoopWid", " ", "=", " ", 
        RowBox[{"3", "/", "2"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"carriageWidthHalf", " ", "=", "3"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"baseHingeHeight", " ", "=", " ", "8"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CarriageThicknessHalf", " ", "=", " ", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"bracketThick", " ", "=", " ", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"MinSeparation", " ", "=", " ", 
        RowBox[{
         RowBox[{"1000", "*", 
          RowBox[{"0.11641453227603929`", "/", "2"}]}], " ", "+", " ", 
         "20"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "add", " ", "in", " ", "the", " ", "radius", " ", "of", " ", "the", 
         " ", "rotor"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"xyzNorm", " ", "=", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"z", "=", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ",", 
       "\[IndentingNewLine]", "scanRot", ",", "\[IndentingNewLine]", "tipAng",
        ",", "\[IndentingNewLine]", 
       RowBox[{"rollerRad", " ", "=", " ", "5"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"rotorRad", " ", "=", " ", "20"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"sphereRad", " ", "=", " ", "6"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"rotorThick", " ", "=", " ", "1"}]}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"(*", "base", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"White", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "0.6", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Cylinder", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"-", "baseHingeHeight"}], "-", "bracketThick"}]}],
                   "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", 
                   RowBox[{"-", "baseHingeHeight"}]}], "}"}]}], "}"}], ",", 
               "hoopRad"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{"(*", "brackets", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"bwid", " ", "=", 
                RowBox[{"carriageWidthHalf", "+", "bracketThick"}]}], ",", 
               " ", "\[IndentingNewLine]", 
               RowBox[{"bbottom", "=", 
                RowBox[{
                 RowBox[{"-", "baseHingeHeight"}], "-", "bracketThick"}]}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"btop", "=", "baseHingeHeight"}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"+", "hoopRad"}], "+", "bracketThick"}], ",", 
                    RowBox[{"-", "bwid"}], ",", "bbottom"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"+", "hoopRad"}], ",", "bwid", ",", "btop"}], 
                   "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "hoopRad"}], "-", "bracketThick"}], ",", 
                    RowBox[{"-", "bwid"}], ",", "bbottom"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "hoopRad"}], ",", "bwid", ",", "btop"}], 
                   "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "bwid"}], ",", 
                    RowBox[{
                    RowBox[{"+", "hoopRad"}], "+", "bracketThick"}], ",", 
                    "bbottom"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"bwid", ",", 
                    RowBox[{"+", "hoopRad"}], ",", "btop"}], "}"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Cuboid", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "bwid"}], ",", 
                    RowBox[{
                    RowBox[{"-", "hoopRad"}], "-", "bracketThick"}], ",", 
                    "bbottom"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"bwid", ",", 
                    RowBox[{"-", "hoopRad"}], ",", "btop"}], "}"}]}], "}"}], 
                "]"}]}], "\[IndentingNewLine]", "}"}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"ShowScan", ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Scan", " ", "plane"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"tipAng", " ", "=", " ", "\[Pi]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"scanRot", " ", "=", " ", 
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"tipAng", ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", " ", 
              RowBox[{"Arrow", "[", 
               RowBox[{"120", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"scanRot", ".", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], "}"}]}], 
               "]"}]}], ",", "\[IndentingNewLine]", " ", 
             RowBox[{"Arrow", "[", 
              RowBox[{"120", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"scanRot", ".", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Polygon", "[", 
              RowBox[{"120", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"scanRot", ".", "v"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"v", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "1", ",", "0"}], 
                    "}"}]}], "}"}]}], "}"}]}], "]"}]}], "]"}]}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Polygon", "[", 
              RowBox[{"100", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   SqrtBox["2"], ",", 
                   RowBox[{"-", 
                    SqrtBox["2"]}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   SqrtBox["2"], ",", 
                   SqrtBox["2"], ",", "2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", 
                    SqrtBox["2"]}], ",", 
                   SqrtBox["2"], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", 
                    SqrtBox["2"]}], ",", 
                   RowBox[{"-", 
                    SqrtBox["2"]}], ",", 
                   RowBox[{"-", "2"}]}], "}"}]}], "}"}]}], "]"}], "*)"}], 
            "\[IndentingNewLine]", "}"}]}], "]"}], ",", "\[IndentingNewLine]",
          "\[IndentingNewLine]", 
         RowBox[{"(*", "hoop1", "*)"}], "\[IndentingNewLine]", "Blue", ",", 
         " ", "Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OpacityVal", ">", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "OpacityVal", "]"}], ",", 
             RowBox[{"Sphere", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"hoopRad", "+", "gearboxLength"}], ",", 
                 "baseHingeHeight"}], "}"}], ",", "MinSeparation"}], "]"}]}], 
            "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "gearbox", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"hoopRad", "+", "bracketThick"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"hoopRad", "+", "gearboxLength", "-", "sphereRad", "-", 
                RowBox[{"2", "rotorThick"}]}], ",", "0"}], "}"}]}], "}"}], 
           ",", "baseHingeHeight"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "axels", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"hoopRad", "-", 
                RowBox[{"2", "bracketThick"}]}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "hoopRad", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"2", "carriageWidthHalf"}]}], " ", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{
                RowBox[{"-", "hoopRad"}], "+", 
                RowBox[{"2", "bracketThick"}]}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "hoopRad"}], ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"2", "carriageWidthHalf"}]}], " ", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Cylinder", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "carriageWidthHalf"}], ",", "0", ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"carriageWidthHalf", ",", "0", ",", "0"}], "}"}]}],
                  "}"}], ",", "hoopRad"}], "]"}], ","}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"BSplineCurve", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "carriageWidthHalf"}], ",", " ", 
                    RowBox[{"hoopRad", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", " ", 
                    RowBox[{"hoopRad", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", 
                    RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "]"}], "]"}], ",",
                "hoopWid"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"BSplineCurve", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"carriageWidthHalf", ",", " ", 
                    RowBox[{"hoopRad", " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", " ", 
                    RowBox[{"hoopRad", " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", 
                    RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "]"}], "]"}], ",",
                "hoopWid"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
           "\[Theta]y", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"DrawRotor", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"hoopRad", "+", "gearboxLength"}], ",", "0", ",", "0"}], 
            "}"}], ",", 
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"gearRatio", " ", "\[Theta]y"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         
         RowBox[{"(*", "hoop2", "*)"}], "\[IndentingNewLine]", "Red", ",", 
         " ", "Thick", ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OpacityVal", ">", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Opacity", "[", "OpacityVal", "]"}], ",", 
             RowBox[{"Sphere", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"hoopRad", "+", "gearboxLength"}], ",", "0", ",", 
                 "baseHingeHeight"}], "}"}], ",", "MinSeparation"}], "]"}]}], 
            "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", "gearbox", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"hoopRad", "+", "bracketThick"}], ",", "0", ",", "0"}],
               "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"hoopRad", "+", "gearboxLength", "-", "sphereRad", "-", 
                RowBox[{"2", "rotorThick"}]}], ",", "0", ",", "0"}], "}"}]}], 
            "}"}], ",", "baseHingeHeight"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "axels", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"hoopRad", "-", 
                RowBox[{"4", "bracketThick"}]}], ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"hoopRad", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           RowBox[{"2", "carriageWidthHalf"}]}], " ", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Cylinder", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "hoopRad"}], "+", 
                RowBox[{"4", "bracketThick"}]}], ",", "0", ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "hoopRad"}], ",", "0", ",", "0"}], "}"}]}], "}"}],
            ",", 
           RowBox[{"2", "carriageWidthHalf"}]}], " ", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"(*", "hoops", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Cylinder", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", "carriageWidthHalf"}], ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "carriageWidthHalf", ",", "0"}], "}"}]}],
                  "}"}], ",", "hoopRad"}], "]"}], ","}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"BSplineCurve", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"hoopRad", "-", 
                    RowBox[{"2", "hoopWid"}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
                    RowBox[{"-", "carriageWidthHalf"}], ",", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"hoopRad", "-", 
                    RowBox[{"2", "hoopWid"}]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", 
                    RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "]"}], "]"}], ",",
                "hoopWid"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Tube", "[", 
              RowBox[{
               RowBox[{"BSplineCurve", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", " ", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"hoopRad", "-", 
                    RowBox[{"2", "hoopWid"}]}], ")"}], " ", 
                    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
                    "carriageWidthHalf", ",", "  ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"hoopRad", "-", 
                    RowBox[{"2", "hoopWid"}]}], ")"}], " ", 
                    RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]", ",", 
                    RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "]"}], "]"}], ",",
                "hoopWid"}], "]"}]}], "}"}], ",", "\[Theta]x", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"DrawRotor", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"hoopRad", "+", "gearboxLength"}], ",", "0", ",", "0"}], 
            "}"}], ",", "0", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
           RowBox[{"gearRatio", " ", "\[Theta]x"}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"carriage", ":"}], "  ", "*)"}], "\[IndentingNewLine]", 
         "Green", ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{
             RowBox[{"StringForm", "[", 
              RowBox[{"\"\<``\>\"", ",", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"z", ",", "x"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ","}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"PointSize", "[", ".05", "]"}], ",", "Green", ",", 
                RowBox[{"Point", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "hoopRad"}], "}"}], "]"}], 
                ","}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Cuboid", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "carriageWidthHalf"}], ",", 
                   RowBox[{"-", "carriageWidthHalf"}], ",", 
                   RowBox[{"hoopRad", "-", "CarriageThicknessHalf"}]}], "}"}],
                  ",", 
                 RowBox[{"{", 
                  RowBox[{
                  "carriageWidthHalf", ",", "carriageWidthHalf", ",", 
                   RowBox[{"hoopRad", "+", "CarriageThicknessHalf"}]}], 
                  "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{"Horiz", ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"gearbox", ",", " ", "horizontal", ",", " ", 
                    RowBox[{"102", " ", "min", " ", "length"}]}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "carriageWidthHalf"}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "2"}], "carriageWidthHalf"}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "gearbox3Length"}], "+", "sphereRad", "+", 
                    RowBox[{"2", "rotorThick"}]}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "gearbox3Length"}], "+", "sphereRad", "+", 
                    RowBox[{"2", "rotorThick"}]}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], 
                    "}"}], ",", "baseHingeHeight"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", "Rollers", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"rollerRad", "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "rollerRad"}], "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "+", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "-", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], 
                    "}"}], ",", "rollerRad"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "rollerRad"}], "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{"rollerRad", "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "-", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "+", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], 
                    "}"}], ",", "rollerRad"}], "]"}], ",", 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "OpacityVal", "]"}], ",", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "gearbox3Length"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "gearbox3Length"}], ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}], ",",
                     "MinSeparation"}], "]"}]}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"DrawRotor", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"gearbox3Length", ",", "0", ",", 
                    RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"3", "/", "4"}], "\[Pi]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                    "needleDepth"}], "]"}]}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", ",", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"gearbox", ",", " ", "vertical", ",", " ", 
                    RowBox[{"147", " ", "min", " ", "length"}]}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    "hoopRad"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{
                    "gearbox3Length", "+", "hoopRad", "-", "sphereRad", "-", 
                    RowBox[{"2", "rotorThick"}]}]}], "}"}]}], "}"}], ",", 
                    "baseHingeHeight"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"(*", "Rollers", "*)"}], "\[IndentingNewLine]", 
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"rollerRad", "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "rollerRad"}], "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{
                    RowBox[{"-", "baseHingeHeight"}], "-", "rollerRad", "+", 
                    "hoopRad"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "+", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "-", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{
                    RowBox[{"-", "baseHingeHeight"}], "-", "rollerRad", "+", 
                    "hoopRad"}]}], "}"}]}], "}"}], ",", "rollerRad"}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"Cylinder", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"-", "rollerRad"}], "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{"rollerRad", "-", 
                    RowBox[{"2", "carriageWidthHalf"}]}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{
                    RowBox[{"-", "baseHingeHeight"}], "-", "rollerRad", "+", 
                    "hoopRad"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "-", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"2", "carriageWidthHalf"}], "+", "rollerRad"}], 
                    SqrtBox["2"]], ",", 
                    RowBox[{
                    RowBox[{"-", "baseHingeHeight"}], "-", "rollerRad", "+", 
                    "hoopRad"}]}], "}"}]}], "}"}], ",", "rollerRad"}], "]"}], 
                   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"DrawRotor", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{"gearbox3Length", "+", "hoopRad"}]}], "}"}], ",", 
                    
                    RowBox[{"0", "\[Pi]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                    "needleDepth"}], "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OpacityVal", ">", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "OpacityVal", "]"}], ",", 
                    RowBox[{"Sphere", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", 
                    RowBox[{"\[Sqrt]", "2"}]}], "baseHingeHeight"}], ",", 
                    RowBox[{"gearbox3Length", "+", "hoopRad"}]}], "}"}], ",", 
                    "MinSeparation"}], "]"}]}], "}"}]}], "]"}]}], 
                  "\[IndentingNewLine]", "}"}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
               
               FractionBox[
                RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ArcTan", "[", 
            RowBox[{"z", ",", "x"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", "needle", "*)"}], "Black", ",", "\[IndentingNewLine]", 
         
         RowBox[{"Tube", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "-", 
                RowBox[{"needleDepth", "/", "100"}]}], ")"}], "2", 
              RowBox[{"hoopRad", "/", "xyzNorm"}], 
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"ShowLevel", ",", 
                RowBox[{
                 RowBox[{"-", "needleDepth"}], "/", "100"}], " ", ",", 
                RowBox[{"-", "0.15"}]}], "]"}], "*", " ", "2", 
              RowBox[{"hoopRad", "/", "xyzNorm"}], 
              RowBox[{"{", 
               RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "}"}], ",", 
           "1"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "range", " ", "of", " ", "needle"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"ShowLevel", ",", "solidNeedleRange"}], "]"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"Opacity", "[", "0", "]"}], ",", 
          RowBox[{"Sphere", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "120"}], "]"}]}], 
         "*)"}], "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "imgSize"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"SphericalRegion", "\[Rule]", "True"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"ViewCenter", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}]}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ViewPoint", "\[Rule]", "viewPt"}]}], 
      RowBox[{"(*", 
       RowBox[{
        DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
         ImageSizeCache->{115., {2.25, 8.}}], " ", 
        RowBox[{"Dynamic", "[", "vp", "]"}]}], "*)"}], "\[IndentingNewLine]", 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"drawNeedleActuator", "[", 
    RowBox[{
    "\[Theta]x", ",", "\[Theta]y", ",", "Horiz", ",", "ShowScan", ",", 
     "ShowLevel", ",", "OpacityVal", ",", "gearbox3Length", ",", 
     "gearboxLength", ",", "needleDepth", ",", 
     RowBox[{"Dynamic", "[", "vp", "]"}], ",", "200"}], "]"}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]x", ",", 
       RowBox[{"-", "maxAngle"}]}], "}"}], ",", 
     RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]y", ",", "maxAngle"}], "}"}], ",", 
     RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Horiz", ",", "True"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ShowScan", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ShowLevel", ",", "False"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"OpacityVal", ",", "0"}], "}"}], ",", "0", ",", "1"}], "}"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gearbox3Length", ",", "75"}], "}"}], ",", "0", ",", "150", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gearboxLength", ",", "75"}], "}"}], ",", "0", ",", "150", ",", 
     
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"needleDepth", ",", "100"}], "}"}], ",", "0", ",", "100", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "vp", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.599908298657193*^9, 3.599908360241184*^9}, {
   3.599908424866503*^9, 3.599908477079921*^9}, {3.599908693125567*^9, 
   3.599908835900682*^9}, {3.5999088885788307`*^9, 3.599909334624823*^9}, 
   3.599909366312276*^9, {3.599909559715271*^9, 3.599909693534778*^9}, {
   3.5999097288338127`*^9, 3.599909737382333*^9}, {3.59990978501676*^9, 
   3.59990990404461*^9}, 3.599909972813846*^9, {3.5999100073732357`*^9, 
   3.5999101579618607`*^9}, {3.599910223791127*^9, 3.59991022830958*^9}, {
   3.5999102646339693`*^9, 3.599910268910434*^9}, {3.599911523899948*^9, 
   3.59991156420994*^9}, {3.5999116090551643`*^9, 3.5999116431112833`*^9}, {
   3.599911688746347*^9, 3.599911723443179*^9}, {3.59991176081627*^9, 
   3.599911804049687*^9}, {3.599911878385332*^9, 3.5999119111405897`*^9}, {
   3.599912066841332*^9, 3.599912067284837*^9}, {3.599912115093686*^9, 
   3.5999121324815702`*^9}, {3.599912556490831*^9, 3.599912601127811*^9}, {
   3.599912663106653*^9, 3.599912805708086*^9}, {3.599912980631572*^9, 
   3.599913031424201*^9}, {3.5999161920389147`*^9, 3.599916198126341*^9}, {
   3.599916234024145*^9, 3.599916237330575*^9}, {3.5999182169330072`*^9, 
   3.5999182769305*^9}, {3.599918336928829*^9, 3.59991834808609*^9}, {
   3.599928218691489*^9, 3.599928323901949*^9}, {3.5999283542576923`*^9, 
   3.599928387020937*^9}, {3.599929341295535*^9, 3.599929404988249*^9}, {
   3.599929981901291*^9, 3.599930055282568*^9}, {3.599930094601334*^9, 
   3.5999302718538027`*^9}, {3.5999303124544163`*^9, 3.599930429970286*^9}, 
   3.599930471066518*^9, {3.599930553935549*^9, 3.5999305913573303`*^9}, {
   3.599931399727498*^9, 3.5999314168569517`*^9}, {3.5999314951556873`*^9, 
   3.5999314990263767`*^9}, 3.599931542539178*^9, {3.599931575270422*^9, 
   3.599931617512575*^9}, {3.599931717267138*^9, 3.5999317373284492`*^9}, {
   3.5999319898316097`*^9, 3.5999320635629187`*^9}, {3.599932339938876*^9, 
   3.599932412361785*^9}, {3.59993244382697*^9, 3.599932459915267*^9}, {
   3.5999328038920813`*^9, 3.5999328658398113`*^9}, {3.599932900100247*^9, 
   3.599932936654208*^9}, {3.5999329688594522`*^9, 3.5999329958931913`*^9}, {
   3.599933123474966*^9, 3.599933183468521*^9}, {3.599933226224287*^9, 
   3.5999332325433207`*^9}, {3.599933306002339*^9, 3.599933361478531*^9}, {
   3.599933404509645*^9, 3.599933456481688*^9}, {3.599933493394087*^9, 
   3.59993351858676*^9}, {3.599933884918097*^9, 3.599933885057932*^9}, {
   3.599934580126782*^9, 3.599934610056353*^9}, {3.599960896936413*^9, 
   3.599960977280027*^9}, {3.599961028648875*^9, 3.599961041013658*^9}, 
   3.599961104944746*^9, {3.599961143342828*^9, 3.599961233387638*^9}, {
   3.599961271219676*^9, 3.5999613816246357`*^9}, {3.599962742126878*^9, 
   3.599962744167803*^9}, {3.599962777755001*^9, 3.599962779863756*^9}, {
   3.599963796424403*^9, 3.599963813687664*^9}, {3.599965221277569*^9, 
   3.599965222334269*^9}, {3.600100073044013*^9, 3.6001001061191483`*^9}, {
   3.600100165163581*^9, 3.600100165337274*^9}, {3.600100210323217*^9, 
   3.600100222958493*^9}, {3.600100392117235*^9, 3.600100437263411*^9}, {
   3.600124235611761*^9, 3.6001243020941153`*^9}, {3.600126913371334*^9, 
   3.600126931855299*^9}, {3.600126965321904*^9, 3.6001269882585497`*^9}, {
   3.60012705906258*^9, 3.600127059371578*^9}, {3.600127176104889*^9, 
   3.600127176209993*^9}, {3.600127435786831*^9, 3.600127435950471*^9}, {
   3.600127476526572*^9, 3.600127476636753*^9}, {3.6001275185355597`*^9, 
   3.600127519012994*^9}, {3.600128380719623*^9, 3.6001284121569843`*^9}, {
   3.600128515975066*^9, 3.6001285166414833`*^9}, {3.6001287146004477`*^9, 
   3.6001287164708347`*^9}, {3.60012876491757*^9, 3.600128765091003*^9}, {
   3.600129143959174*^9, 3.6001292155762157`*^9}, {3.600129349362997*^9, 
   3.6001293500599127`*^9}, {3.600129428924082*^9, 3.600129431806525*^9}, {
   3.600174970153798*^9, 3.600174972601736*^9}, {3.600423392010254*^9, 
   3.6004234653313103`*^9}, {3.600423582435298*^9, 3.600423618250659*^9}, {
   3.600423650577138*^9, 3.6004236557057047`*^9}, {3.600431308227083*^9, 
   3.600431317094524*^9}, {3.60043145207076*^9, 3.6004314777534103`*^9}, {
   3.600431512068346*^9, 3.6004315465368443`*^9}, {3.6004315877067013`*^9, 
   3.600431642217819*^9}, {3.60043171387287*^9, 3.6004317368023443`*^9}, {
   3.600431767753285*^9, 3.600431795325712*^9}, {3.600431826378766*^9, 
   3.600431843143894*^9}, {3.600432024469449*^9, 3.6004320265566998`*^9}, {
   3.600432057270047*^9, 3.600432071983097*^9}, {3.600432183110805*^9, 
   3.600432192337543*^9}, {3.6004322266217527`*^9, 3.600432247777989*^9}, {
   3.600432621248886*^9, 3.600432629122377*^9}, {3.600432710364593*^9, 
   3.600432736183229*^9}, {3.600434434687434*^9, 3.600434529779793*^9}, {
   3.6004377344966927`*^9, 3.60043775378481*^9}, {3.600437799471058*^9, 
   3.6004378134482*^9}, {3.600444640547962*^9, 3.600444658661107*^9}, {
   3.6004458985761003`*^9, 3.6004459802627277`*^9}, {3.600446025058354*^9, 
   3.60044607431879*^9}, {3.6004462539716578`*^9, 3.600446272008133*^9}, {
   3.6004463102059927`*^9, 3.600446333162265*^9}, {3.60044656142397*^9, 
   3.600446561796941*^9}, {3.600447617987791*^9, 3.600447634371109*^9}, {
   3.600447678337006*^9, 3.6004476824233227`*^9}, {3.600447725531567*^9, 
   3.600447763142284*^9}, {3.600447794972499*^9, 3.600448061429893*^9}, {
   3.600448104456443*^9, 3.6004481124349747`*^9}, {3.600448144598789*^9, 
   3.600448313698694*^9}, {3.600448365353704*^9, 3.6004483795792103`*^9}, {
   3.6004485074164543`*^9, 3.600448512332535*^9}, {3.600448548867689*^9, 
   3.6004485811363087`*^9}, {3.6004486127510242`*^9, 3.600448687576858*^9}, {
   3.600448754834878*^9, 3.600448796325091*^9}, {3.600448837509404*^9, 
   3.60044887952507*^9}, {3.6004489324184713`*^9, 3.600448959297408*^9}, {
   3.600448993050921*^9, 3.600449117072701*^9}, {3.60044915394645*^9, 
   3.600449173973186*^9}, {3.60044924220072*^9, 3.6004492762858467`*^9}, {
   3.600449306718762*^9, 3.600449486509087*^9}, {3.600449572510921*^9, 
   3.600449573710203*^9}, {3.6004496182918*^9, 3.600449761646489*^9}, {
   3.600450373516101*^9, 3.600450414569509*^9}, {3.6004504495148993`*^9, 
   3.60045058510983*^9}, {3.600450629594162*^9, 3.6004506563635607`*^9}, {
   3.6004507235586033`*^9, 3.6004507294300013`*^9}, {3.60045081098774*^9, 
   3.600450920904695*^9}, {3.600450969477974*^9, 3.600451032717497*^9}, {
   3.600451078899941*^9, 3.60045114796138*^9}, {3.6004511820093327`*^9, 
   3.600451318006611*^9}, {3.600451356577417*^9, 3.600451463372485*^9}, {
   3.60045150688517*^9, 3.6004515363071833`*^9}, {3.600451566687769*^9, 
   3.600451808453947*^9}, 3.600451843153729*^9, 3.6004519188836727`*^9, {
   3.600451954960065*^9, 3.600451965236931*^9}, {3.600451998736083*^9, 
   3.600452120535651*^9}, {3.600452172701186*^9, 3.600452272770193*^9}, {
   3.600452337383827*^9, 3.600452342140086*^9}, {3.600452434858549*^9, 
   3.600452805034206*^9}, {3.600452839140258*^9, 3.600452848466445*^9}, {
   3.6004528855285873`*^9, 3.6004529545401287`*^9}, {3.6004530114860573`*^9, 
   3.600453267320355*^9}, {3.60045334298837*^9, 3.6004533530804663`*^9}, 
   3.6004533891400213`*^9, {3.6004534261629066`*^9, 3.600453483736224*^9}, {
   3.600453526885394*^9, 3.600453587955059*^9}, {3.600469759966502*^9, 
   3.6004697959246187`*^9}, {3.600475661010578*^9, 3.600475661555526*^9}, {
   3.600475739773766*^9, 3.600475739992687*^9}, {3.600536538613885*^9, 
   3.6005365390349293`*^9}, {3.60053657201725*^9, 3.600536594616077*^9}, {
   3.600536680013977*^9, 3.6005367172503557`*^9}, {3.60053681355611*^9, 
   3.600536835347842*^9}, {3.6005369374106283`*^9, 3.6005369806032124`*^9}, {
   3.600537112299686*^9, 3.600537129656171*^9}, {3.600537160328272*^9, 
   3.600537288018455*^9}, {3.600537320200406*^9, 3.600537322279295*^9}, {
   3.6005379800400953`*^9, 3.6005379805709753`*^9}, {3.600540881427178*^9, 
   3.600540896620426*^9}, {3.600540966314002*^9, 3.600540969583604*^9}, {
   3.6005410390730867`*^9, 3.600541039749893*^9}, 3.600541172298552*^9, {
   3.6005412568690977`*^9, 3.600541257103943*^9}, {3.600541313117127*^9, 
   3.60054132040447*^9}, {3.6005413634573*^9, 3.6005413942199306`*^9}, 
   3.600541682432428*^9, 3.60054176196253*^9, {3.600541801654401*^9, 
   3.6005418452747927`*^9}, {3.600541951821035*^9, 3.6005419536231327`*^9}, 
   3.600541988117961*^9, 3.6005420955731707`*^9, {3.600542131752157*^9, 
   3.600542132220252*^9}, {3.6005525308175592`*^9, 3.600552531425351*^9}, {
   3.600565619375617*^9, 3.6005656277638893`*^9}, {3.600565731665161*^9, 
   3.6005657571314383`*^9}, {3.600565800617049*^9, 3.6005658019024487`*^9}, {
   3.6005667171239033`*^9, 3.600566719699431*^9}, {3.600701710091112*^9, 
   3.600701792181633*^9}, {3.600701838246636*^9, 3.600701846857807*^9}, {
   3.60070188269314*^9, 3.600701898057122*^9}, {3.600701978130179*^9, 
   3.600702001891466*^9}, {3.600702052044506*^9, 3.600702055920063*^9}, {
   3.600702099681757*^9, 3.6007021491877527`*^9}, {3.600702188040236*^9, 
   3.6007022193442907`*^9}, {3.600726822709936*^9, 3.6007270003001127`*^9}, {
   3.600727081359991*^9, 3.600727084015788*^9}, {3.6007271194224577`*^9, 
   3.600727157176032*^9}, 3.600727202153318*^9, {3.600727241626253*^9, 
   3.600727242335993*^9}, {3.600727451022118*^9, 3.600727577057798*^9}, {
   3.600727681384616*^9, 3.6007277137447147`*^9}, {3.600727764840914*^9, 
   3.600727783463524*^9}, {3.600728583598835*^9, 3.6007285893377867`*^9}, {
   3.600728676775669*^9, 3.600728759206394*^9}, {3.600728792766983*^9, 
   3.60072881308534*^9}, 3.600729103077333*^9, {3.600730088045863*^9, 
   3.600730145984879*^9}, 3.600730213792571*^9, 3.600730261239612*^9, {
   3.600730384599743*^9, 3.6007304188598347`*^9}, {3.6007304858102913`*^9, 
   3.600730532734623*^9}, {3.614098486512918*^9, 3.614098487132022*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
  ImageSizeCache->{102., {2.25, 8.}}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6007270845722446`*^9, {3.600727149674408*^9, 3.600727157719985*^9}, 
   3.600727211639022*^9, 3.6007275844567213`*^9, 3.6007277163849173`*^9, 
   3.600728136316337*^9, 3.600728590289795*^9, {3.600728693441744*^9, 
   3.60072876024907*^9}, {3.600728795502664*^9, 3.600728813934383*^9}, 
   3.600729048542788*^9, {3.6007300975767717`*^9, 3.600730106363523*^9}, {
   3.600730137806753*^9, 3.6007301466372757`*^9}, 3.600730218175538*^9, 
   3.600730267590823*^9, {3.600730395636842*^9, 3.600730419653583*^9}, {
   3.600730493486393*^9, 3.600730533580882*^9}, 3.6079462616965218`*^9, 
   3.607984638677495*^9, 3.614098465989266*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`gearbox3Length$$ = 
    75, $CellContext`gearboxLength$$ = 75, $CellContext`Horiz$$ = 
    True, $CellContext`needleDepth$$ = 100, $CellContext`OpacityVal$$ = 
    0, $CellContext`ShowLevel$$ = False, $CellContext`ShowScan$$ = 
    False, $CellContext`\[Theta]x$$ = Rational[-1, 6] 
    Pi, $CellContext`\[Theta]y$$ = Rational[1, 6] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]x$$], Rational[-1, 6] Pi}, Rational[-1, 6] 
      Pi, Rational[1, 6] Pi}, {{
       Hold[$CellContext`\[Theta]y$$], Rational[1, 6] Pi}, Rational[-1, 6] Pi,
       Rational[1, 6] Pi}, {{
       Hold[$CellContext`Horiz$$], True}, {True, False}}, {{
       Hold[$CellContext`ShowScan$$], False}, {True, False}}, {{
       Hold[$CellContext`ShowLevel$$], False}, {True, False}}, {{
       Hold[$CellContext`OpacityVal$$], 0}, 0, 1}, {{
       Hold[$CellContext`gearbox3Length$$], 75}, 0, 150}, {{
       Hold[$CellContext`gearboxLength$$], 75}, 0, 150}, {{
       Hold[$CellContext`needleDepth$$], 100}, 0, 100}}, Typeset`size$$ = {
    200., {102., 106.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]x$745$$ = 
    0, $CellContext`\[Theta]y$746$$ = 0, $CellContext`Horiz$747$$ = 
    False, $CellContext`ShowScan$748$$ = False, $CellContext`ShowLevel$749$$ =
     False, $CellContext`OpacityVal$750$$ = 
    0, $CellContext`gearbox3Length$751$$ = 
    0, $CellContext`gearboxLength$752$$ = 0, $CellContext`needleDepth$753$$ = 
    0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`gearbox3Length$$ = 
        75, $CellContext`gearboxLength$$ = 75, $CellContext`Horiz$$ = 
        True, $CellContext`needleDepth$$ = 100, $CellContext`OpacityVal$$ = 
        0, $CellContext`ShowLevel$$ = False, $CellContext`ShowScan$$ = 
        False, $CellContext`\[Theta]x$$ = 
        Rational[-1, 6] Pi, $CellContext`\[Theta]y$$ = Rational[1, 6] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]x$$, $CellContext`\[Theta]x$745$$, 0], 
        Hold[$CellContext`\[Theta]y$$, $CellContext`\[Theta]y$746$$, 0], 
        Hold[$CellContext`Horiz$$, $CellContext`Horiz$747$$, False], 
        Hold[$CellContext`ShowScan$$, $CellContext`ShowScan$748$$, False], 
        Hold[$CellContext`ShowLevel$$, $CellContext`ShowLevel$749$$, False], 
        Hold[$CellContext`OpacityVal$$, $CellContext`OpacityVal$750$$, 0], 
        Hold[$CellContext`gearbox3Length$$, $CellContext`gearbox3Length$751$$,
          0], 
        Hold[$CellContext`gearboxLength$$, $CellContext`gearboxLength$752$$, 
         0], 
        Hold[$CellContext`needleDepth$$, $CellContext`needleDepth$753$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`drawNeedleActuator[$CellContext`\[Theta]x$$, \
$CellContext`\[Theta]y$$, $CellContext`Horiz$$, $CellContext`ShowScan$$, \
$CellContext`ShowLevel$$, $CellContext`OpacityVal$$, \
$CellContext`gearbox3Length$$, $CellContext`gearboxLength$$, \
$CellContext`needleDepth$$, 
        Dynamic[$CellContext`vp], 200], 
      "Specifications" :> {{{$CellContext`\[Theta]x$$, Rational[-1, 6] Pi}, 
         Rational[-1, 6] Pi, Rational[1, 6] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`\[Theta]y$$, Rational[1, 6] Pi}, 
         Rational[-1, 6] Pi, Rational[1, 6] Pi, Appearance -> 
         "Labeled"}, {{$CellContext`Horiz$$, True}, {
         True, False}}, {{$CellContext`ShowScan$$, False}, {
         True, False}}, {{$CellContext`ShowLevel$$, False}, {
         True, False}}, {{$CellContext`OpacityVal$$, 0}, 0, 
         1}, {{$CellContext`gearbox3Length$$, 75}, 0, 150, Appearance -> 
         "Labeled"}, {{$CellContext`gearboxLength$$, 75}, 0, 150, Appearance -> 
         "Labeled"}, {{$CellContext`needleDepth$$, 100}, 0, 100, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{573., {134., 139.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.6007270845722446`*^9, {3.600727149674408*^9, 3.600727157719985*^9}, 
   3.600727211639022*^9, 3.6007275844567213`*^9, 3.6007277163849173`*^9, 
   3.600728136316337*^9, 3.600728590289795*^9, {3.600728693441744*^9, 
   3.60072876024907*^9}, {3.600728795502664*^9, 3.600728813934383*^9}, 
   3.600729048542788*^9, {3.6007300975767717`*^9, 3.600730106363523*^9}, {
   3.600730137806753*^9, 3.6007301466372757`*^9}, 3.600730218175538*^9, 
   3.600730267590823*^9, {3.600730395636842*^9, 3.600730419653583*^9}, {
   3.600730493486393*^9, 3.600730533580882*^9}, 3.6079462616965218`*^9, 
   3.607984638677495*^9, 3.614098465985526*^9}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
  ImageSizeCache->{102., {2.25, 8.}}]], "Output",
 CellChangeTimes->{
  3.6007270845722446`*^9, {3.600727149674408*^9, 3.600727157719985*^9}, 
   3.600727211639022*^9, 3.6007275844567213`*^9, 3.6007277163849173`*^9, 
   3.600728136316337*^9, 3.600728590289795*^9, {3.600728693441744*^9, 
   3.60072876024907*^9}, {3.600728795502664*^9, 3.600728813934383*^9}, 
   3.600729048542788*^9, {3.6007300975767717`*^9, 3.600730106363523*^9}, {
   3.600730137806753*^9, 3.6007301466372757`*^9}, 3.600730218175538*^9, 
   3.600730267590823*^9, {3.600730395636842*^9, 3.600730419653583*^9}, {
   3.600730493486393*^9, 3.600730533580882*^9}, 3.607946261847001*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Settings", " ", "for", " ", "lead", " ", 
                RowBox[{"photo", ":", 
                 DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
                  ImageSizeCache->{124., {2.25, 8.}}]}]}], 
               "\[IndentingNewLine]", 
               RowBox[{"ViewPoint", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"1.1596889537706192`", ",", 
                  RowBox[{"-", "3.027633036377363`"}], ",", 
                  "0.9687929229400873`"}], "}"}]}], 
               RowBox[{"(*", 
                RowBox[{"Dynamic", "[", "vp", "]"}], "*)"}], 
               "\[IndentingNewLine]"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Theta]x", ",", 
                RowBox[{"-", "maxAngle"}]}], "}"}], ",", 
              RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Theta]y", ",", 
                RowBox[{"-", "maxAngle"}]}], "}"}], ",", 
              RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Horiz", ",", "True"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ShowScan", ",", "False"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"ShowLevel", ",", "True"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"OpacityVal", ",", "0.0"}], "}"}], ",", "0", ",", 
              "1"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"gearbox3Length", ",", "75"}], "}"}], ",", "0", ",", 
              "150", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"gearboxLength", ",", "75"}], "}"}], ",", "0", ",", 
              "150", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"needleDepth", ",", "100"}], "}"}], ",", "0", ",", 
              "100", ",", 
              RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Settings", " ", "for", " ", "scan", " ", "plane", " ", 
             RowBox[{"photo", ":", "\[IndentingNewLine]", "ViewPoint"}]}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "2.28163"}], ",", 
              RowBox[{"-", "2.17383"}], ",", "1.23233"}], "}"}]}], 
           RowBox[{"(*", 
            RowBox[{
             DynamicBox[ToBoxes[$CellContext`vp, StandardForm],
              ImageSizeCache->{115., {2.25, 8.}}], " ", 
             RowBox[{"Dynamic", "[", "vp", "]"}]}], "*)"}], 
           "\[IndentingNewLine]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Theta]x", ",", 
            RowBox[{"maxAngle", "/", "2"}]}], "}"}], ",", 
          RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Theta]y", ",", 
            RowBox[{"maxAngle", "/", "2"}]}], "}"}], ",", 
          RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Horiz", ",", "True"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ShowScan", ",", "True"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ShowLevel", ",", "False"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"OpacityVal", ",", "0.0"}], "}"}], ",", "0", ",", "1"}], 
         "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gearbox3Length", ",", "75"}], "}"}], ",", "0", ",", "150",
           ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"gearboxLength", ",", "75"}], "}"}], ",", "0", ",", "150", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"needleDepth", ",", "100"}], "}"}], ",", "0", ",", "100", 
          ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"for", " ", "candidate", " ", "designs", " ", 
        RowBox[{"photo", ":"}]}], "\[IndentingNewLine]"}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]x", ",", 
        RowBox[{"-", "maxAngle"}]}], "}"}], ",", 
      RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Theta]y", ",", "maxAngle"}], "}"}], ",", 
      RowBox[{"-", "maxAngle"}], ",", "maxAngle", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Horiz", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ShowScan", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ShowLevel", ",", "False"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"OpacityVal", ",", "0.28"}], "}"}], ",", "0", ",", "1"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gearbox3Length", ",", "75"}], "}"}], ",", "0", ",", "150", 
      ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gearboxLength", ",", "75"}], "}"}], ",", "0", ",", "150", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"needleDepth", ",", "100"}], "}"}], ",", "0", ",", "100", ",", 
      
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
   "\[IndentingNewLine]"}], "]"}]], "Input",
 CellChangeTimes->{{3.600540573935688*^9, 3.600540584014135*^9}, 
   3.600541939123517*^9, {3.600565602206046*^9, 3.600565611831563*^9}, {
   3.600701695789497*^9, 3.6007017047375193`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"drawNeedleActuator", "[", 
  RowBox[{
  "\[Theta]", ",", "0", ",", "True", ",", "False", ",", "True", ",", "0", ",",
    "75", ",", "75", ",", "0", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2.4"}], ",", "2"}], "}"}], ",", "200"}], "]"}]], "Input",
 CellChangeTimes->{{3.614098447342578*^9, 3.6140984480132113`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   {GrayLevel[1], 
    {Opacity[0.6], CylinderBox[{{0, 0, -10}, {0, 0, -8}}, 50]}, {
     CuboidBox[{{52, -5, -10}, {50, 5, 8}}], 
     CuboidBox[{{-52, -5, -10}, {-50, 5, 8}}], 
     CuboidBox[{{-5, 52, -10}, {5, 50, 8}}], 
     CuboidBox[{{-5, -52, -10}, {5, -50, 8}}]}}, 
   {RGBColor[0, 0, 1], Thickness[Large], 
    CylinderBox[{{0, 52, 0}, {0, 117, 0}}, 8], 
    CylinderBox[{{0, 46, 0}, {0, 50, 0}}, 6], 
    CylinderBox[{{0, -46, 0}, {0, -50, 0}}, 6], 
    GeometricTransformation3DBox[{
      TubeBSplineCurveBox[
       NCache[{{-3, 50, 
         0}, {-3, 25 3^Rational[1, 2], 25}, {-3, 25, 25 
          3^Rational[1, 2]}, {-3, 0, 
         50}, {-3, -25, 25 3^Rational[1, 2]}, {-3, (-25) 3^Rational[1, 2], 
          25}, {-3, -50, 0}}, {{-3, 50, 
         0}, {-3, 43.30127018922193, 25}, {-3, 25, 43.30127018922193}, {-3, 0,
          50}, {-3, -25, 43.30127018922193}, {-3, -43.30127018922193, 
          25}, {-3, -50, 0}}], NCache[Rational[3, 2], 1.5]], 
      TubeBSplineCurveBox[
       NCache[{{3, 50, 0}, {3, 25 3^Rational[1, 2], 25}, {
         3, 25, 25 3^Rational[1, 2]}, {3, 0, 50}, {
         3, -25, 25 3^Rational[1, 2]}, {3, (-25) 3^Rational[1, 2], 25}, {
         3, -50, 0}}, {{3, 50, 0}, {3, 43.30127018922193, 25}, {
         3, 25, 43.30127018922193}, {3, 0, 50}, {3, -25, 43.30127018922193}, {
         3, -43.30127018922193, 25}, {3, -50, 0}}], NCache[
       Rational[3, 2], 1.5]]}, {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], 
    GeometricTransformation3DBox[
     GeometricTransformation3DBox[GeometricTransformation3DBox[{
        {GrayLevel[1], Opacity[0.5], CuboidBox[{{5, -26, -6}, {7, 26, 6}}], 
         CuboidBox[{{-7, -26, -6}, {-5, 26, 6}}]}, 
        {GrayLevel[0], CylinderBox[{{-12, 0, 0}, {9, 0, 0}}, 1]}, 
        {GrayLevel[0.5], SphereBox[{0, -20, 0}, 6]}}, {{1, 0, 0}, {0, 1, 0}, {
       0, 0, 1}}], {125, 0, 0}], {{0, -1, 0}, {1, 0, 0}, {0, 0, 1}}]}, 
   {RGBColor[1, 0, 0], Thickness[Large], 
    CylinderBox[{{52, 0, 0}, {117, 0, 0}}, 8], 
    CylinderBox[{{42, 0, 0}, {50, 0, 0}}, 6], 
    CylinderBox[{{-42, 0, 0}, {-50, 0, 0}}, 6], Rotate[{
      Tube[
       BSplineCurve[{{47, -3, 0}, {Rational[47, 2] 3^Rational[1, 2], -3, 
          Rational[47, 2]}, {
          Rational[47, 2], -3, Rational[47, 2] 3^Rational[1, 2]}, {0, -3, 
         47}, {
          Rational[-47, 2], -3, Rational[47, 2] 3^Rational[1, 2]}, {
         Rational[-47, 2] 3^Rational[1, 2], -3, 
          Rational[47, 2]}, {-47, -3, 0}}], 
       Rational[3, 2]], 
      Tube[
       BSplineCurve[{{47, 3, 0}, {Rational[47, 2] 3^Rational[1, 2], 3, 
          Rational[47, 2]}, {
          Rational[47, 2], 3, Rational[47, 2] 3^Rational[1, 2]}, {0, 3, 47}, {
         
          Rational[-47, 2], 3, Rational[47, 2] 3^Rational[1, 2]}, {
         Rational[-47, 2] 3^Rational[1, 2], 3, 
          Rational[47, 2]}, {-47, 3, 0}}], 
       Rational[3, 2]]}, $CellContext`\[Theta], {1, 0, 0}], 
    GeometricTransformation3DBox[GeometricTransformation3DBox[Rotate[{{
         GrayLevel[1], 
         Opacity[0.5], 
         Cuboid[{{5, -26, -6}, {7, 26, 6}}], 
         Cuboid[{{-7, -26, -6}, {-5, 26, 6}}]}, 
        GrayLevel[0], 
        Cylinder[{{-12, 0, 0}, {9, 0, 0}}, 1], 
        GrayLevel[0.5], 
        Sphere[{0, -20, 0}, 6]}, 10 $CellContext`\[Theta], {1, 0, 0}], {125, 
      0, 0}], {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], Text3DBox[
     FormBox[
      GraphicsBox[
       {RGBColor[0, 1, 0], Rotate[
         Rotate[{
           Cuboid[{-3, -3, 48}, {3, 3, 52}], {
            
            Cylinder[{{(-3) 2^Rational[1, 2], (-3) 2^Rational[1, 2], 
               58}, {(-67) 2^Rational[-1, 2], (-67) 2^Rational[-1, 2], 58}}, 
             8], 
            
            Cylinder[{{-2^Rational[-1, 2], (-11) 2^Rational[-1, 2], 58}, {
              11 2^Rational[-1, 2], 2^Rational[-1, 2], 58}}, 5], 
            
            Cylinder[{{(-11) 2^Rational[-1, 2], -2^Rational[-1, 2], 58}, {
              2^Rational[-1, 2], 11 2^Rational[-1, 2], 58}}, 5], {
             Opacity[0], 
             
             Sphere[{(-75) 2^Rational[-1, 2], (-75) 2^Rational[-1, 2], 58}, 
              78.20726613801965]}, 
            Rotate[
             Translate[
              Rotate[{{
                 GrayLevel[1], 
                 Opacity[0.5], 
                 Cuboid[{{5, -26, -6}, {7, 26, 6}}], 
                 Cuboid[{{-7, -26, -6}, {-5, 26, 6}}]}, 
                GrayLevel[0], 
                Cylinder[{{-12, 0, 0}, {9, 0, 0}}, 1], 
                GrayLevel[0.5], 
                Sphere[{0, -20, 0}, 6]}, 0, {1, 0, 0}], {75, 0, 58}], 
             Rational[-3, 4] Pi, {0, 0, 1}]}}, 
          
          ArcTan[(1 - Sin[$CellContext`\[Theta]]^2/(
            Cos[$CellContext`\[Theta]]^2 + Sin[$CellContext`\[Theta]]^2))^
           Rational[1, 2], 
           Sin[$CellContext`\[Theta]] (Cos[$CellContext`\[Theta]]^2 + 
             Sin[$CellContext`\[Theta]]^2)^Rational[-1, 2]], {1, 0, 0}], 
         ArcTan[
          Cos[$CellContext`\[Theta]], 0], {0, 1, 0}]}], StandardForm], {{0., 
     0., 0.}}], 
    {GrayLevel[0], 
     TubeBox[{{
       0, (-200) 
        Sin[$CellContext`\[Theta]] (Cos[$CellContext`\[Theta]]^2 + 
          Sin[$CellContext`\[Theta]]^2)^Rational[-1, 2], 200 
        Cos[$CellContext`\[Theta]] (Cos[$CellContext`\[Theta]]^2 + 
          Sin[$CellContext`\[Theta]]^2)^Rational[-1, 2]}, {0, 0, 0}, {0, 0, 
       0}}, 1], GraphicsComplex3DBox[CompressedData["
1:eJztnHdUldez9y0IFlDEhoVYQcEGSNUDzwAeii2ACHaNBbvGmNgVNdaoqCTY
a+w99s4zdmPBXpHYu6ixYNfrOXvmYbnvu6/rt9a77l/Xf/biZJzzne/Zz95z
5iOp2KFPbOc8uXLlSs6XK1feL+t486IZN48dDf474U2UZV35S/Lm8z4X0ybe
vNl68bJjwbUSduxu53g4eOqblGMRzy+mVdp669bMNseD8cmMTlGR+4N7fF4c
uXPqpTTfC9NN+/49HjzcucGS37PSgvPabClSsOjltF+exi/P3elE8Kril9s/
Mm0LvjXRXPR9v8tpibb+nYtuORG8e/GKEivyrQ/uX77V7Fo7L6ddSB6zc8id
E8HNbfNsjiu0IPjd8CLdyt2+nJYr14gFqa9OBH/S2xcr/LxbPbHmxMeI+DSO
5/y7RP40zs96Vgg9aayH9Q8V+tNYv1RvGtc76Wt/0qaRP5Kfaeyn3Z8/FiuT
XABGr2//d+kv6+AD+VovrFgSu7UMm7+9bUEwt6z/95VP+eB6oypHGl4oicXN
IV18HAqBXfembvM65gH/EY/9u/QqhfeyJ6wdMbsQjO32+cix4R+135qkNT14
rxS2s4nx+8XOHqZd3VY13j1byz2tx5sK4c6Iqy8u2h9nD8W/91+5LzVLu5G3
xLtiE5yx2+YNx5+Osoe2Sds/VJ+TqQXHH/nNcYMzTqjWV2+QYg/xuy9dbJ22
wiTWnPgEEa9zPOd3Evl1zs96pgg9Outh/aOFfp31c722ol7keruTP/WFP3iD
/JH8RPaz0eSiQaWTS4P/vNwvnL+sl0q2+3NBRTccrRXeu61tGfih9V7HK59K
wNjCKfkbXnDDN8PiRtdxKAu3vys6aW5HJ3i1NrFfYq+qmO/O+4NJs8tCl+Mp
p48Od4Ain3wnHrhXFau99mz4s105mDTyVK9m7rYwaPuxGhXCq+HsCrU374sr
B90LF9ywN/WjVnRKWI1iE6rhzAtjMp+MKgd4uY1N9TlZ2puflu8qsqEaTh1y
4GRUSjlIaxiZv3XadpNYc+J3iXid4zl/V5Ff5/ysZ6LQg6yH9XcW+pH1c723
RL3I9Y792h8cR/5IfiL7eaST7/YUj8oQ13flCMu6bWmbif6zPPF+12GzChyu
DOnmH9tWTqoAjd6PL7m9ghf+VWN097tRVWDv+Deju6eWhTuTeyy1T/HCyC6z
Zl/bVAXyPI+9Vqp8SejePdzvbJYXOmyd+3F6PldI/O3mrc/zHcH/3F9PZvh4
4wrfHcemaa6wuO5u2xhPWyjZJK1meqI3Du3W4qF3B1e4u6N2vvY+2Vpim1cz
j432xh5e98tv6+UKy8rFnjmQvM8k1pz4myJe53jOv1DkR87PejoLPch6WH8u
oR9ZP9eLol7keh+QPyeEP8j+SH4i+/k4z83TzsnuULj4mXGW1QYnmhdU9MMi
G/vFbmvrAb0ykzZf/uQK8U+PrGhwwQ+7lPnHqY5DdYh5+zR4bsdKcOpA5aKJ
vfyx6FWf2KTZ1eHssKvNjg53gfTz/7oduOeP458tPN/PrgbYnbvq2My9JHgf
f3+ofHgA5s1oGbQvrgYU7f3CZ2+qAyw91/Kg04QAXHPvaecno2rAk7Ge4z3m
fNRic5eKK7IhAB1dnyREpdSAPsVGLGyVdsQk1pz4ByJe53jOX0TkR87PevIJ
Pch6WP9poR9ZP9cbLepFrteR/Okp/EH2R/IT2c/Ci5Ifzf+3Nhze+i7ZskZf
2fHZdlU9nPNx8xjvIZ5Q6JcpBacOrw7tbuWvlznRhIVt5mZq9z0B1nWs9+sH
N9j1PmOoHhmEPardHz0FvOC0TZ3E4D6VoE7IvFJbbgThyNQz8StGe8Fyl4tB
qzaVhZoHwhcsTwhGTxie8HazF2B06oaZw5zAp9Xr1gmrv1w33vufnTvtBe9X
zhzzbkQeCF4aUKRpZjC2tH93uFeGF/gVXNf7eVa6Saw58a9FPHI859dFfuT8
rGeZ0IOsh/WfEvqR9XO9mqgXud655E9B4Q/+wP587Seyn7MXzBuV4lEH9q4p
2tCyfv/uRWv/WYC1K3l2KHC4DjQb+71n5SRP2NJjyd1tFULw4bsjXnejfMCz
40X/7qnVIa50g5/tU0Lw1M0t7a9t8oFdRwcsKlXeDRrFV7E5mxWCuPHcvun5
fGHppq5bPs+vACX+ObJrhk8o/uP0/dRpmi8MfPjXkWjPknDzWdS7E4mhaPdT
8jrvDr6Q5Fj6cDsfW0itUrPzsdGhWNP2462tvXxhRK7e8w8knzGJNSd+iIhH
juf8/UV+5PysZ4nQg6yH9e8U+pH1c721Rb3I9Ur+4FbyR/IT2c81T/pNadba
D777tLSJZe1vV6hujzZhuD98dfB1J39wjU1o9Sm4DuzsfKD2yPdhePDfV2Mm
rfYHx0mus6uV8oRjPm4eO5Lqo++8X021qwbA4qm7rz5Ld4fPhQYPPfawPn48
eaHWmLEB0P/SnYYenSpDsZZPlrcKMuOkO+X/dj8aAF6jj1/Lf6s0ePg4hz8b
YMYKG1r0nPo8AGwGzMp/8F4BmJS9JzRrthlzWf8Ewp33o/NNXXbeJNac+M/9
rfHI8Zy/lsiPnJ/1/CL0IOth/X8K/cj6ud4iol7keg987Q/uIn8kP5H91IMa
zHVODoQh39eNtazzilcqtaBiODbv4VZ2W9u68NKl3djLn3xhb7vbAxtcCMdF
9ytd8XaoB+MT2znP7egNEJ3neudeETgrIcY5aXY9mByf2/no8JqwYe/Jl/vv
RWC9rEuz+9mZIOJjh5tx7m5Q9EKxP8qHR2K97c9y74szwX2X+9mY6gL9Btyd
5jQhEgOfVfF4MsoE4zNLN/CY4wCjjjSpUGRDJJ59m6dcVIoJGrye07NV2iWT
WHPifxXxyPGc/47Ij5yf9ZiFHmQ9rH+i0I+sX6oXud4WX/uD+8gfyU9kP09O
qrAyQzfBxYXpzSzrvoqBL8/cicQHUxa9nrwqCPY/SNywOS0ADrSw2VdsQxQO
ufZ9rcu9gyFXyKzpRf7y+XKe/JPq1KoBfiha/mW6gwZ1Cy9eGTPDEzoMcO21
+3YDHFgww7bDeA1KVbo+MOlJNSgcGzjiVpOGeO+3vXVbXtPgZEbucaYlFWDH
zs2ZPrMb4opSb14sLQBgW+nEwYjljjBg9rWPnocb4hmLz04Aa59vPOt2IcMk
1pz4PCIeOZ7znxD5kfOznhJCD7Ie1h8o9CPr53o/g7Ve5Hofkj/7hD94kPyR
/ET282ZG9pb5/2rg+7xDC8v6sFb0adtVDVFrWbi79xCAP7b0vjpleD041rRK
ocyJjbBGj+C92n2AgWXPFv/1gx/UHLezoR7ZGD0Ts7tMgRCo3dccEdzHG0rW
HHJn843GmPF778AVo0PgfnibIqs2VQeH9LY9lyc0wWO1/g58uzkE1qyYkjJz
WCXI/WmUe8LqJui7LfPMudMhENVscuK7EU7Qu+ePGbGZTXB3f5tVvTJCwOnJ
33WfZ/1jEmtOfH0RjxzP+VeJ/Mj5Wc9doQdZD+uvJfQj6+d6B4h6ketlf1KE
P8j+SH4i+zkoNfHGX9NC4MiiIessa2FTl3V1ezfB8Y8bXnKpGArtR/a36xEc
DCca149blvg9zrwb98hpVig8fWX/e3ZkIETHHMvlVzYaO4RlNvN/FwqVzt27
7RHhAx363l8X3ycaB/3Zp095cxhs7XFl6bmBtSCfa+ga37+iseJMr3jz4DAY
94vL/JfxVWDJwhU7Tf9EI8bv35B3dhhMGN/Ybm3L4uC1YETrnW+jccmLfAEp
S8Jg58/PTv2T54ZJrDFG/BgRjxzP+UeL/Mj5Wc9moQdZD+uvKPQj6+d6n4h6
keuV/MGT5I/kJ7Kfefec7pLiEQYDjpo9LeucKrrZf1Y0nh0+IbzA4TCY6aaV
rpwE8LDyxvRtFWLQtkOPEnej6kOXU+FFu6fWA/t2O1rZp8TgHxUOhF3bVB9K
+f82qlR5PzA1KvboTFYMOm/4cen0fGYwH6k+//N8T7C5FffnDJ9YHJR79k/T
NDN0Cl29MtrTDSL3Tbl+IjEWG2evmOrdwQzHdzmsaOdTEmrmj2p4bHQsJv9o
d2hrLzP0ej5k9IHkmyax5sQfFvHI8Zz/B5EfOT/rCRN6kPWw/pJCP7J+rjdR
1Itcr+QPsj+Sn8h+TrptetJvf31wffHlm8mXtdbqBj4x72OwXNHDm1/2NMMI
+/3rHK+FwOMKof3Kfanr58yR2o53Zri2asSUzBtBcLjn8q038zfFgx9XeY3r
FQ6FZteoYPPaH0pUDa76fc+muE3vm+FwKBzWtuz+4I/c3pB3UZeZb7c3xVPd
80zJtIkArUjgljUFqsHjW/1t2z1tildSk/v84BEBhZ+eiHQq7AxV+xate7VI
HA7Iyh+X4RcB5X+0C1hV5rZJrHFGfH4RjxzP+U0iP3J+1rNa6EHWw/oLCP3I
+qV6ket1+dofzCJ/JD+R/Sxuv+LnZq3D4VzZK3Us616vC5V6tGmKiYttKl93
ioCuz8PrfwoOg6cuZ0qNfN8UbzSf2W3S6ghYHZo5tlopgJGDU4vuSIrDN1em
la9dNRI+fUjf8yw9EJ7m7tbx2MM4jE//qeiYsZFQPGuFj0enOpC73eDkVkHN
sOq57qvdj0ZCmauHMP8td5iSr22NZwOaYWffn5tMfR4J0ZWSHxy4VxoqXblc
LWt2M2zfveDNz58j4XRWyqMpy+6YxJoT30DEI8dzfmeRHzm/pAdZj6QfWb9U
L3K9XcifLsIffEb+SH4i++kXvbqJ/u6t1vPGz829j7zWdjwr2HRbki0OPlYL
yya/1VzOfdffsqaVb3pyUUVb9KX4biJe3/7/jtc5/sG20suSH5nBcVr95/cc
64PfmHWR+D4Wowf+tOH2FDMMs3v1k2Ud2Htq9bZrYo34wiIefSm+hTlmTKdd
4RDV0Lmn+8n6+Ee79Y/2rG+KUX8vLXoi6FjwkBvxpx4/PRL8qfEit2EzLqZF
0uuDxOtpH+l1ztNQ5IFUyiPpQdbTZ2vDT+MOPtA6Qy2fBavvay+u1/NcFJOt
S6/r/HrkSXP1Xa7h8CrP01YD6phha+iG1Iq1mqL0OvLrnb5bXbp88gMt1mXO
ye++rOEXsrYsqZitD6noOehDvmPBxau8adzhn7/TVnSsm+nW5WLaityBnqcn
hcOKFjfSXKeboVWhQnm7jmuKdUIdirlkm2HltC5ny2Wb0SW6zvLbNk1RyhPM
eaT31fl9pTzAeaT3RX7fXP/353/lz+OASqnOyQXwoVih38injgsqlsSNKxo5
b2tbEP37jcbLn/JBkQ49+ze4UBLXJGR8+T5SCGedi4ua2zEPrCvw55fvI6Xw
YtH7ZZNmF8LSDZ4mHh3+Ubve+dHr/fdK4f49ixb2s7PHDwfuujRzz9bahpac
VT7cGdPfmwvsi7PHt7/+Fr43NUubFggznSY447+fO3s/GWWPr2LuzPKYk6n9
qv9ctcgGZ6wYlVIlKsUeq27M97NlPibWnPhMEa9zPOfPEvl1zs96soUenfVc
Iv3FhH79BulfTfWminpxLdW7ifypI/xB9kfyE9nPJ9afS2OWWKG/9XU33GLN
UwYDrXlKQFFrHjdcb33fsjjH+r5O8Jf1faviZavOsljOqtMBbll1VsVD1rrK
4SdrXbbQ3lpXNTxt9aEcfrT68FH7w+pDNXxp9a0cvrX6lqWNsfpWDatYfS6H
HlZ/L5nEmhN/Q8TrHM/5n4n8OudnPa+FHmQ9V0h/CaEfb5P+tVTvDFEvrqd6
t5I/fsIfdCJ/JD+R/dyw6nIfy/x3vVih1KJNjSxz4LHDA2MLHK6M3eI7Rlvm
6hOjTl/aVsEL942sUuVuVBW8G/y5l2WuHjpuUFfLnPkHhydx1zZVwd8H1Dlh
mat3m/Ts7ZksL4xtMmj79HyuuKdYrwuWufrhDac2WubYGUNfjp2mueL7m/de
RnvaQs3qns9PJHrjq6TjS707uOKgjz1etPPJ1v6cMqONZU5+eWuvjK29XHGe
2WaGpV8Va058oojXOZ7zPxf5kfOznh1CD7KeDqQ/WehH1o9U7w1RL3K97E8X
4Q9OIn8kP5H9FP670353h1+s/vvhZuvn5YEB1s/LFRytn5cfrrN+vtVxtvXz
rQTi8/Wn/Vwdy1j3gwvctO4Hfzxo3T81aD+XhHbW/ROAp6z7rQa+t+43B/jd
ut8C8IV1f9bA19b9+VEbbd2fAVjZup9roLt1H983iTUn/pqI1zme8z8V+ZHz
sx6xn0si62H9Yj+74C3Sv5bqFfu5Eq6jereQP77CHyxK/kh+IvtZ9XD3nZb5
r6tY4fQP1c9b5sA/Pqjdx3uIJ+abutTTMlf/Y7Bdccvc+HjJv49o9z0RC6xq
ZZmrl5l0tLllzly1UN++U8ALo5ObjbDM1Vtod19t/tJHzy7Zuf6K0V5o6t++
s2Wu/upMqyTLHLvDnmPmt5u9cGhKyeOWuXp2RHSwZe79Wk+6du60F9ZtWnuh
Za7e6WnMv7GZwbjFsp0zvuyX7+xinmc9MYk1J95DxCPHc/5fRH7k/KzHR+hB
1sP6Gwn92JL0H6N6d4l60Znq7Uv+5Bb+IPsj+Yns50br/q6Df4mVzg3Acdbn
og52tz4XniCeixA6N3zwnvU5qg5h1ucohJ47H/zD+ty50bkRgk2tz6kvplmf
0wpwxPqchuJV63Ptix+sz3VJqGV9rkMx23oO+OJg6zlgC4ut50AoXrGeG744
33pePDeJNSe+i4hHjuf8L0R+5PysR5wbFZD1dCT9U4V+ZP17qV5xblRHrpf9
6Sr8wcnkj+Qnsp+n/h02yjL/TRcrhE87XcsyB55bLMz3upM/nrrdb7xlrp5+
fn5Vy9x42+OkpEmr/dGurgda5uqDjkyuYpkzzyvSI6B21QC82L5omX/T3cH1
bdZAy1zafuzkGmPGBmCbx+6DrXP1wS+WWubY8SaXI+5HA3BInR0uBW6Vhvbe
AWbL3PulVtoyJ8fty1eEW+bqv1cda52Tf/ps+ROAt6zz9FemWzRX5/g/RTxy
POfvK/Ij52c9zYUeZD3zSf8ZoR/dSD/Xm1fUiwO5XvInXfiDJ8kfyU9kP8V5
EkjnSSCdz+F0Ptel89mXzudwOp/r0fnsTedzBJ1v9eh8rknncwSdhyY6n93o
fI6k89NE57MLnc+RdN6a6Hx2AHHeRtL5bKLz+Q2dzznx4nx2QI7n/OJ8dkHO
z3rE+eyGrIf1i/O5Jp3PEXQ+16Pz2ZvO5wg6n+vS+exL53O47Ceyn/YjDi23
zH8LiBWW9HV4YZkDHwuKfz95VRAuzJ36xjJXb/ok8KBlbrxkn5/f5d7BWKtP
0hnLXP1ug61zLXPm4sU7f0530PCvWXcvW+bqC87c72+ZSw9/taV4h/Eazp+3
eK9lrr6mYOAkyxy74a7eDVpe0zD44dptlrn6IYh8ZJl7v23X4sPSAoDlPk3N
tszV+yd0tPc63FD0dU6AvbuOvel24b1JrDnxhUU8cjzn9xf5kfOznulCD7Ke
EqR/jdCPC0n/YqrXQ9SLd6je4+TPXOEPxpE/kp/Ifrpbz2uNzm8NzlrP7YZ0
zgPaWc/5epBqPecb4QnrvQC413ov+EE5673QGKtZ75EQjLHeI94g7pHGOMd6
74TQPVgdXlvvnSbY0XpPheAw6z1VCd5Y76km+MZ6r4VgPeu95gSJ1nutCVqP
54wQ3GS9/z6ZxJoTX0PEI8dzfnEPVkLOz3p8hR5kPay/idCPrUn/cap3j6gX
y1C97E8e4Q+yP5KfyH5WGTfurmX+W0mskCc2aptlDvxh0+brLhVDsfd3W7ta
5uoXbc93sMyNI4/3z3aaFYrNlpy7bZmrr0zsU9AyZzZPqt3R/10ovhh1wK16
hA/YX+i70zKXHuDdZ3h5cxhebeJS4PzAWrCosbbDMscu79I+0Tw4DPfUTbpu
maunVl1zxDL3flN+2b68s8Ow1YoTUZa5+uqwCj0sc/JIy7GxJAyHPtx/7Z88
uYPEGmPER4l45HjOv1nkR87Pes4KPch6wkn/E6EfWX8E1fu9qBdXUL3sTzfh
D7I/kp/Ifor7MYzuxzDqN6LpPg2jfgOo34ihfqM+9Rv1qN+IoX6jPvUbftRv
xND9bqZ+w5P6jVjqB8zUb7hRvxFL/YOZ+o2S1G/EUr9hpn4jT5BYc+JFv1ES
OZ7zi37DDTk/6xH9hieyno6kX/Qbfsj691K9ot+oh1wv+yP6DaB+I0b2E9nP
kPTqby3zX02sUHvWviDLHNgpKm3/y55mnDevx2PLXH1tkYARlrmxyf9MzI53
X3y47P7aMlf/Z/mvhyxz5hHJa8LH9QpHv55/9rPM1Q+H9gm0zKVrd//1ucOh
cHQY0bBaam5vyCrRYY1ljj3z6vjlmTYRaJoYXWBtgWpwpNbmspa596trz8f/
4BGBs2ILzrPM1edkFI62zMl7Wo4Nvwjcu7B+k1VlbILEGmfEjxHxyPGc31vk
R87PevILPch6WL+X0I9HSD/X20/Ui5lUL/szR/iD68gfyU9kP89Y+49wPClW
iLT2IU1xvrVvicAz1r4lDE5Z+5amuMPa50RgfmufAzDE2ufE4QJrX/Tl3rb2
RYFQ1doXxWFhax8Vie2sfVQdKGHto5phc2vfFYnDrX2XO3Sw9l3NMNvap0Xi
LmufVvrLeWLp05qhmHpFofh3EvmCxJoTv1TEI8dz/p9EfuT8rKeF0IOsZyHp
Pyf0I+vnevOJenEw10v+iL73Sz9H/kh+IvtZtOto593v3upblmStqn3ktXb8
7wITNyfZYi/HU/Pdd77Te/sfvjzW+6XW8/7olKGudrj0Yb1lzxLe64PmDZv8
S8oz7fcR++pWWGeHb6/MML05917Xdv44tMf5B9qo95/ndimTH1/ue+tr6/1B
//DP1Dm5h9zUnl1vbP+pe37s1L9E6a19PuhHWx0us9H7gla5s39g94X5scra
w+d/Sv6gr9/8bE3S3D3a0C1Zev5d+dGVXh8uXteH0eucJ03k0TkPv2+2eF+d
35d1BgqdOutcTnUNFHXpf1BdvcmH7sIHvRf5wL5tFL7p7JuYc77TxZzzlSbm
eLY053yviznnc030h3Y053yvizlnFs057Wiu+MU3a/95l+ac+WkO+UEXc85M
mnPmp7nlB13MOU/QnDM/zTk/6GK+uZ3mnDnxYs55Qud4zi/mnJk652c9Ys55
V2c9l0i/mHNm0ZzTjuac73Ux53yur6V6N5E/Ys75Smd/Tm9bvzn5kRnfjQoI
uO9YH8JDo5tZeErB6+f2WDiHnVihXokGfhbecYri34h45PiiGf1SO+0Kx++e
Tdli4S+pU1e8tXATJ3q9ongd+HUpP3L+WY7jA3e5hmOZK7WWWfhIt0EF/7Rw
kJn0urN4Hfn1/3ke/lYX89u3mpjf2mKFRrOXHK/5UO82/bTTo1t3tdWXB2/K
Wp2tq/IMaFqlb9Lkh3pEwcctCpS+oxV1nRiZ/ilbv54SmLTj9kO9ZtcJ09s2
vKVtvLB4bfMGr5V5vGya/TCrziO9ez2HEg2H3NACAje1Xp78Wv/4vet3psGP
dMc6zsMaxl7TBlS7OfDsMXWeWrHF0ndvf6T3uO3/YdCqDK2GTaNBL3O/0Yd8
WBTu8/SRXnZA75j1ny9qrfJuuVbe640yT6MmSWe2uzzWm0e+PNYj9py2ISb4
XdcWb/RQc61Xbeo/1sfUtvGqsviUFvGD6/rrg9V5jhSLCvTp+Fiv9XBu8XG3
/9bcK/0Vk5r6Rv/t8oD8UYMf647+02+2GLFPG3JtRFLKSnWeXZVbTFo24bE+
4cDh1q98tmrTv1uZ78bWN/rJ4XtmNJ32WL/Qe9W8c3PnaZ0cnh8fu0edh+P7
iXid4zl/X5Ff5/yqPKzfRujXWT/XW1HUq3O9qjzs53Dhp85+sv8xwn+d/Vfl
4c+3hPh8df58a9N+6CT2g877QZXnE+23QmK/6QNpv3nT/kwU+1MPpP2pynOD
9n91sf/1TbT/+Xkxi+dFd6LnRZWHn8cu4nnU+XmUnl+dn996tS/0HHnwgX7q
aQmvWavv67U87UfMicnWE7rV005PCscMrxcF3aabofqqgo4W/pjV1b2CS7YZ
H9IacnbyRguvlF4Hfj2e8lwWedCD8vD7nhXvq9Wm91XV9X9//v/+YQ73WOJx
xDUNzsn8jrimwTmZbxLX1JlzMt8krqkzV2SeSFxTZw7J/JG4ps7cknklcc3d
X3NOZ+aamhxPXFOT8xPX1GQ9xDU15pzMN4lrAnNO5pvENWGT5A9zYtlP5nBP
JB5HXNPgnMw35zDnI+7HfJO4psE5mW8S1zS4IvNE4po6c0jmj8Q1deaWzCuJ
a+7+mnNWY66pyfHENTU5P3FNkPUQ1wTmnMw3iWsCc07mm8Q1gTkn803mxLKf
zOE2SDyOuKbB8ZhvEtc0OCfzPuKaBudkPkhc0+CKzBOJaxockvkjcU2duSXz
SuKau7/mnN7MNTU5nrgmyPmJa4Ksh7gmdJD0E9cElOolrgnsD/NN5sSyn8zh
nkg8jrimwTmZb85mzkfcj/kmcU2DEzLfJK5pcEXmicQ1DQ7J/JG4ps7cknkl
cc3dX3POAOaamhxPXBP+W37irLIe4prA+plvEtcE5pzMN4lrAnNO5pvMiWU/
mcNVlXgccU2DczK/I65pcE7mm8Q1DU7IfJO4psEVmScS1zQ4JPNH4poGt2Re
SVxz99ecM5i5JsjxxDVBzk9cE2Q9xDWB9TPfJK4JzDmZbxLXhL6SP8yJZT+Z
w22UeBxxTYPjMd8krmlwTuZ9xDUNzsl8kLimwRWZJxLXNDgk80fimga3ZF5J
XHP315wzlLkmyPHENUHOT1wTZD3ENaGjpJ+4JuyV6iWuCewP803mxLKfzOFO
STyOuKbBOZlvEtc0uB/zTeKaBudkvklc0+CKzBOJaxockvkjcU2DWzKvJK65
+2vOaWauCXI8cU2Q8xPXBFkPcU1gzsl8k7gmcL3MN4lrAnNO5pvMiWU/mcM9
kXgccU2DczLfnM2cj7gf803imgYnZL5JXNPgiswTiWsaHJL5I3FNg1syrySu
uftrzhnJXBPkeOKa8N/yE2eV9RDXBNbPfJO4JjDnZL5JXBOYczLfZE4s+8kc
zl7iccQ1Dc7JfJO4psE5mW8S1zQ4J/NN4poGV2SeSFzT4JDMH4lrGtySeSVx
zd1fc86GzDVBjieuCXJ+4pog6yGuCcw5mW8S1wTmnMw3iWsCc07mm8yJZT+Z
w7lLPI64psHxmN8R1zQ4J/NN4poGJ2S+SVzT4IrME4lrGhyS+SNxTYNbMq8k
rrn7a87ZhLkmyPHENUHOT1wTZD3ENYH1M98krgnMOZlvEtcE2R/mxLKfzOGq
SDyOuKbB8ZjfEdc0OCfzTeKaBudkPkhc0+CKzBOJaxockvkjcU2DWzKvJK65
52vOGcNcE+R44pog5yeuCbIe4poQLuknrgnMOZlvEtcE2R/mxLKfzOE2SjyO
uKbB8ZhvEtc0OCfzPuKaBudkPkhc0+CKzBOJaxockvkjcU2DWzKvJK6552vO
GctcE+R44pog5yeuCbIe4prQUdJPXBP2SvUS1wT2h/kmc2LZT+ZwIRKPI65p
cDzmm8Q1De7HfJO4psEJmW8S1zS4IvNE4poGh2T+SFzT4JbMK4lr7vmac8Yx
1wQ5nrgmyPmJa4Ksh7gmsH7mm8Q1getlvklcE9gf5pvMiWU/mcOdkXgccU2D
czK/I65pcD/mm8Q1Dc7JfJC4psEVmScS1zQ4JPNH4poGt2ReSVxzj5h+Meds
xlwT5HjimiDnJ64Jsh7imrBQ0k9cE7he5pvENWGB5A9zYtnPTcTnHInXHSNO
15t5HvE95pvENXXmnMw3iWvqzA+ZGxLX1Jk3Mmckrqkzn2QuSVxTZ87JfJO4
psack/kmcU1NzkNcU5Pfl7imJuscQLxWrou4psack/kmcU2NOSfzTeKaOnNO
5nfENXXmnMw3iWvqzDmZbxLX1JkrMk8krqkzh2T+SFxTZ27JvJK45u6vOWd+
mnOe0OR44pqanJ+4pibrIa6pMedkvklcU2POyXyTuKa2SfLnLXFK5pZm4pXM
HQtK/JG4JnA8803imsCckzlmBeKdjvT6H/Q6c1M5P3FNg3MyxySuCTOl1//n
efhbg5MwHyGuqTNX+RbfJK5pcBvmm8Q1Dc75Lb5JXFNnzsl8k7imwTm/xTeJ
a+rMOZlnEdc0OOe3+CZxTYOzMV8jrmlwzm/xTeKaBvdj3kdc0+Cc3+KbxDUN
Dsn8kbimwTm/xTeJa2pyPHFNTc6vykNcU5P1E9fU5HpVeYhrarKfxDU12X9V
HuKamvz5EtfUakv7QZWHuKbGnJP5JnFNjTnnt/gmcU2NOSfzTeKaGj8v3+Kb
xDU1+Xnkf5cgP7/ENTXmjcw3iWsic07mm8wvsyS+ybxTfp24JjDnZL5JXFPn
9/0/vvm/+0fim6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm5qCb2oKvqkp+Kam4Juagm9qCr6pKfimpuCbmoJvagq+qSn4
pqbgm5qCb2oKvqkp+Kam4Juagm9qCr6pKfimpuCbmoJvagq+qSn4pqbgm5qC
b2oKvqkp+CYo+CYo+CYo+CYo+CYo+CYo+CYo+Cb8h3xTU/DNb/7+psQ3NQXf
/Obvb0p8U1PwzW/+/qbENzUF3/zm729KfFNT8M1v/v6mxDc1Bd/85u9vSnxT
U/DNb/7+psQ3NQXf1P5Dvqkp+Kb2H/JNTcE3tf+Qb2oKvqn9h3xTU/BN7T/k
m5qCb2r/Id/UFHxTU/BNTcE3QcE3QcE3QcE3QcE3jd/fPE39Eq0QRff7WeqX
5lE/cFrql7ZK/UMG9UvzqN+oRv1Ge+qX7Kk/KUn9SRL1SwnUz3SkfmYn9Usv
pP7nLvVL1jHY50i4K/VLcvzP1C/J+VtSvyTrOU/90nzS7076balf2ib1h6ep
X5ov+cM+yn6Sj+yr0V/lqbfq5qm7YbzCpouXw/WVcfj90ashfqsBB+crPjX3
z/Wh2qWn1+JNX/q9045u+w7VxXObr7d6eLc+/LB3Ws2lm5qhf6k8W4ZV8cHh
rWuev/Hl+07CD+sL2zjGY/WijSete+CBE291CauTZIYtJoc1e2PiMcN14XKP
52WwdJEGM52XmqHF1H9rlRkUjwHXl3WqM9Z2T+30EaatG8wgfo7HgyIe5Pjy
Ij/I+b2FHpD1NBX64Tzp70D6G4l6YQjV6071fqorfMlN/mwkf3hfyn5up3+3
V4A+t6H0eZGP7Kvhp1vV9MZdq4XwCm4RN16fz2iGIfsfDfKdVQ8v5l0/Oy05
BMo8/VDYr208Fre/tqvNER8s29JucOg/IfDxWHubX/fH45zq9qttjlbHsF2V
K+QuFQp9qg5ZdaJQAo7YuvhFgQtl8eSYdjXsAkNh0tB3Jdz8E7BLw7RJM8x2
e6ILvh3Qpn4oiJ8TsKuIBzl+isgPcv4iQg/IeuoJ/XCJ9Jcl/ZW4TqneAeR7
NPnD/pOfIPtJzzk/98bzTp8rtqTPuSN9vuQj+2r4+fvaZT9nmk28wsuexcJc
H8bjoX8/TK3zvS8uyFt3So/jJpjRYGeVOgkJCCVH2X4cVQPn3E84vbJGEAxe
UCa7ztIEvNN7+t/uKeVwx5lNk35JDILWHmPmFDqXgO9fVRu66pbdngD3M6N2
DQoC8XMCnhDxIMf7iPwg50ehB2Q9k0n3H5L+c+R7KNXL/p+hfd+K/OlE/vC5
KftJ5xSfo8Z5Rc8VP/fG80X7gPepsR9IN/uao/+nUW3Gb/flFdwSn9RPOZqA
bUtsLbG7WE2M7HFRz2PjBylvIocHuzTHYjZ7Wox3dcGqx4dN6eTlB7bew3e9
aNIcW/aveXtCu/x7og+18JoAfiB+bo7v81rjQY6PFflBzj+OdMh6ZpHvh0n/
TNLvTPu+BNX7ieodQudOAPnTnPzhc1/2k+4JvpeM+4LONT5HYRudb/Qc8nNv
PI+0b3ifGvuH6mRfjXrDhgZEzhxSk1coV2vk4vb9muOpbtPqt57igk7Zw2qW
3lkTWrlv+NVveXPMvvC25+jt+fc8WDv5aHZ6TRA/N8dtIh7keH/KK+cPJd9l
Pam070NI/xDSD3TuzKV6f6R6x9O5X0Pyh+9d2c+X9O+2d9O9PZ3ua7pX+F4y
7hc6B/kcNc5Dem75uYdW9PzSPuN9Cvlov5Ev7Cu0JH8GFgsOKXHShVdo32DR
/FZXm6PnyPGbyjzJv+de5PaprW+7gPi5ObajODnelnyX81ekfS/r2UTnzl3S
z+fPMTr3R1K9k6neknTvZpI/Lckf8hNkP6lP4r4piPslutf5ng/i+53uIb6X
gvg+8hPnJr4T52jQOzo/6Tnn5z6In/d7Yl/iS7FPg17S/iQf2dcg9lN00QVo
DlYgSKwtMP0r33PiM2jfy/kbfHXu5Ojx/Orctwvi878x3btdqd6uVG8N6nsC
yZ9A8ufrvjPHT97Py6hvZf/L0n4+RH1WK2k/0z2P8n6mewnl/UznKMr7mZ57
lPcz7VPk/elN+/kUfQ7e0n6W43k/y/l5P8t6eD+nk355P3enenk/O9N+PkL+
tJb2s+wnn8/U1yOfJ5PpfK5Ifa58PlPfhHw+z6fz2Y/6iKHS+Uz3EsrnM52j
KJ/P5BPK5/NVeg7k81mO5/NZzs/ns6xnJp3P/qR/mHQ+T6N6+Xz+jc7nSuTP
dul8lv3kfoO+J6Hcb1Bfj3K/QX0oyv0G9U0o9xt0z6Pcb1DdKPcbtO9Q7jca
fHUO5fQbcjz3G3J+7jdkPdxv7CX9cr/hSPXK/UYd8kfuN2Q/6Xsmf+9Ed6l/
pu9JyN+PqI/nvh7LSv3zJFpfUP9JfRLXYeine53veeT7ne4hfo6xjdQ/0zmK
fH7Scw5yvC/1DXJ+8hFkPdw/04rcP5+n/tlE9ZaT+uc48oe/X/D3dtlP+t7O
3+ON31+j75n8vRPdpe+Dlfh7IX0/oj6e+3rDf+o7eV8Y+4H6JH4ujeeR7nU+
F43zkO6hPXQvId9HdG6CHE/POcj5aV+CrId8BPLV8LMyfQ+kFatSvQPp+2Bj
8seD/OE5iOwn/94gzUWQ5yH0vZ2/xyN/f6fvmfy90/CfvjfiaXoOeP9TH8/P
mfF8Ud/JfShupfON+iTum5D7JbrX99A9j3y/0z0NcnwF6mvl/PScg6yH9iXQ
PjX2J/kI5KvhJ8832B+e/xhzJclPaV6HinkdKuZ1qJjXoWJeh4p5HSrmdaiY
16FiXoeKeR0q5nWomNehYl6Hinmd7CfIfjbeEN9hlYeZV5j4ZPbxJrZxxu+5
VZL+f56NKK4JrZO+jgc5nuL476EUj+Wl/48o62Bdkyme4oD/3nSKp//fKBaR
eJYUD4p44305TtbjEFd6wr6DZl6hQLueBwdvbIr29HNhWgvS6/Qz/3fk1/nv
c75C9Hoz+v2cqzTPrkFz7Cv0M/1343Wen8dJvx/EcfT3jNeleJDj5fdlPXIe
SQ9y/H8BvYr+Nw==
      "], {
       {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[None], Specularity[
         GrayLevel[1], 40], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
R/2zz3/o+6mxNoqLsW+sZ73218o39nGDmLYRLz0q9/lXcW80N3U2jMmqIdVC
tomCvg+9JqRKPK8P/Ul5lucPc1D0NzH2YUgxnr8NvRr/eN4Q+tOQGvG8MfRn
Ic3juVnI1/HcJPQvodeWZ2d8pWdoxxj/Kca+DNkknr8L/VFI7Xj+IfTnIQ3j
+efQX4XsELJFyJYhdWL8x9BfhGwez+tCfxyyPbbr6ri2SkjjkO1Cqoc0sm7s
Jo7V8LuyVcjWIfXpS8i2IQ3UVf3ubO0c9yd/9uXe2MkYNeGQ5q5bnu3Lb565
FuKjjlbOk7OpfrVCdnY++VcRU3P6oj93NfcN99KuYgLv7SFXhlwV0lYfcu4T
0kx79/Js7+nBHmp6s6eafuyrH1j2U1NTx5DWxugQspt2n5BDQw4LaV+efaPB
1cZ49GZ/Y1D3Ac7jf6A4yN/Oefz7Gq9LyF7GoE8HuZbYh+tDzm7mwD4kZG/r
PlTd1nhtre8I/cDSXU1NvUM6G6On+Q4OOcYx4vUI6ST2TvaDGo40Bn062vnk
38Y6jnK+k7Xta4/7aXcNGRUyKOTkkOOsE7z9nafWY9XMHe88dQw0Rw/7y7ng
/J7o2NHG7WWtpxmXeEPcS3o/2HnqHmBs6jvFMdadZDz6NNQaiHWqMbBHm494
JxgDfMOtDexnG5f8Y1yLfYY+1DRSTR1nqsl/jn7kPFcNlgtDRhhjXMjp2qeb
k5rGhgwTyzB7AKbzjEFvLnA++Q8Q0/nOD3NP2EPO30XmBO/FavBeYVz8LrMv
1DpBTQ8mqqlpkpqaJusH3ilqcF2ppr7rQy419tXiIP9VztOPy40HjqmOse4G
cZD/upDxxro25JJK9ihxTzMPPrNCbg65JeQO80117HLrvkVNHbeqqeM2NXXc
qR/Y7w65xvzT1eC6P+QmY98rDrDf4zw9uNE66N8Mx6bpN0lM97mOsZnGwH5A
rGB8UHx8U5eEPBnyVMjjxiX/Y+bGfsi19OBhNTU9GnKXNT2h30zjzRTLs+Yj
xvyQ2dr0/Sz7/oy9BuMc400X0332Zp7z+D8f8oj5n3Ye/7n6gXuBOcG70LXE
/p8+5FxqDuxljpHnBWPRgxftC/W9pKa+xc4zxz3Bd4i752VjUOsb5l4k7lvt
+6/W8FrIm86Tc7l+9Ox11yT/OWJ6xXnqm1ARZzLkgpC3xQTed8XK3v5XnvEa
eMNfIb8b4z3n6cH7anqzQk0/4ETwIPgGnAj+AueAB8Ff4AzwIzgRHIL7m7uV
uxieBeeCT3xgPHoDD4LLcPfDy+BW8A34DlwJ3gLfgaPBDeALOxt3pTHoE9wK
3lTdHPCExHHQ8At4GRytpvWDr7b17KBN7vr6Jz5UXx/u5MR90E30p75mYoVX
wDPgdPC1avalobGq68c6uN5a41XTr6E9rVOec6OW1sy9yv16kPjgFbtYWyvX
1XOslbh3c13iQNzffCd4j+8pz/nQHta0l3nwh1/sb6+5u9taJxxjb+tpbY7m
zu9jfW2M29IYiVvtZyz84RidrXl3Y4EVftK+POcxidccqg9r4RQdxZ24yZ72
5kBzdNGfnF218eFOTvwF3d0aOlTKDcc43F62r9SLbsZKXOoIcXfUv51+rKvi
3tQRXw9zg+9o7cRv+lsbfKO3tfbRpoa+2tTQT5s8x+kPjuO1wTVAm1hwjJPN
B5cYaN0nuK6r+fuJb6Bz5INvwE96GWOQ2E8yVmdz9BLrKeaDL3CPn2cseMII
8zA3VNzDtMGduAm4T9dOfOiM8pwPjRQHd8VZxiLPueaHV4wR72jX0a9TrWew
86OteahziVclnnWOscA01nrABceAi3DHcq/eWJ7zm8R30Jda84X6UMNF2okz
XVSe86EJ5TkfmqgPHCNxHzQcgjPe030AExzjCnvBPXqJdVxurMSlJpsP3jHV
nl3hulHiHS++qeYmFpzkmvKc3yS+c7P1J65zizH4vlxnPfCNadZzo/ZljiW+
Ak+YUZ7zpFvLcz7E3T/c+seKC65xhznucR29uV3/a/S7y3quM95V+rFuQHnO
kcE0UxyN/TP4Jq6DMzxonfCK+6x7ljY1P6AN7tnaiRs9JA74xiPimqNNLPjG
k9YPd3jMeua67jbzz7bWx5wjH/zk6fKcYyXO9YSx/g75rTzjF/e7lnzwBe78
5caCaywyD3Pzxb1AG9xwj+fEvVAbLIv1J9+L2okbvWgs8rxsfrjEUvEucR39
mmc9Tzm/xJrnOzfPGImXLTPWHLEnTPAkeBT3OFxiW+fhVW+I9S1t8L1TnnGl
xHveE9O7zi12Hh/uae7rmuU5N3pfXHAReM3vPlPzLnGW/i3P+NYSYxO3EOPl
hZxLobnzK2KsVMh41TLjrbC2N6yNdcxXUeBOcJzq4bddIeNe2PAleNDWMbZV
Iedea+xN1RjbtpD3CD94Sq0Yq1nI+RwabgJv+coe1Iv5uoWMn+0QevtCxnU2
C71pIcOED2Nwoi1jbItChqlB6PqFLBZzXxqb965RIetv09A7+XvaO+7TS8aH
L/5TlvX0G/tX8Pe6v8qyXn5bqZ88/12WYVpnb7b0N7R/yzJM6+0NPdho3VX9
nbDMHrLmv7Ks99/Ze3r5vf2kTz+kXvk7YblncIM9/rM8eyd/tc/kKoS0LGTj
r3q+fvGM1fN3v5J9+sleNfC3xAr35Gf3pam/PW5anr0L5HnOvDzzXuwca/4p
z7g/+g/PLPO/uX4Hf5MslmffCeaXu58/um8txPyn88RZWSkuY63Mtao8+92V
c1jmvvEb61/+1vqve8f7wp9P/izLxphL+1zwfaEvnIta7jO/z7K/m/jucDY4
g5v5zF5t4jPzFa4v+g7y/K1nhb1lrGiuzT3P/+q7SaU1BfF/57lM52tz16/3
3HBGqJtnzs/39oI+8E5sWWl9FdcwXsX3ZZ3nlWfuT+6Mmcbcxvi8x9V8l8G7
uXi+9xyn36v5PnDeqvnul3s2q/lcxfcUDMxXFSd+1Sutr17I35Uaxqzjd4Cz
WttvCOcHXcs1Gz336V2p7Rr8dvD5B89fOmt1jMn3Zke/OTzXcxzfOq4nV23j
7+g3ineE700Dn39yrsL49YzJeeP8cfYa+o3axLPMOeZ8831q4jeK+YZ+x5r4
7drUNY315b1s7PrmftM2K890U9f/4nvLmeZ94lvwm2uaO47w3xdqib+BeZu5
ZjNzNayEmfd8lTF5V181VxPz/me9vF99Qx8W0iVkn2L0J2TbkP1C6odUDekY
0jBku5AuIU1CaoYcFNIopHpI+5AGIdVCnopY94XcH3J42DuF1Ao5OqRZyPYh
vUOah+wQ0jekRUidkENCGofUCDki/NuHHBDSXd0h5Eh1R55jXdOQ2iFtQuqF
bBNylPOdQo4OOTDkoJB+1to1pFfIwSGdQ3qrDwk5Rn1oSB81PeqvX7eQ46it
kGE8Xg3GQSE9jT2wkOHoETLA+SO1O4npBMeO0u8gMZ0kbsZO1Af7ZGODd7Aa
vKeowXtqIdtXah2qBvuwkGPFPlwN9tPVYByhBtcZauoYqQbLmWownqWm7lFq
MJ4rDvKPESsYz1YPCTlHzbrzQ04T42hj4DPWMfBeEXKea8eJG7wXqsF7kRq8
F6vBe4kavOPV4L1UTc7L1OCdoAbvRDV4J6mp7ypxkH+yuMA7RX1ByJXqcerh
4h7iXrFPU40B9mvEDd4bzU3Oax0D+3VqsF+vBvs0NdhvDrncnt2iBuOtajDe
bT5i32E9YLnNebDfYDxw3O4Y6+4RB/nvCrnaWHcaA3u6sVk3w7XTnLvIOh80
H7Fnmo+6H3IMXHxHbrKmB6yHOmar8Z/lPHPHxft/bEjdkIeNAa4nQu41z1zx
Ucej1kA/HnEt9hzHpus3TXyPWw9jjxkDm7uSO5H78Wlxg2ueuMG70HzEnu8Y
PXhWTd0L1GB/Tg2uRfqB/QU1+RerwfWy+Yi9tJB9i8HyovP04HnjgWNJyJOu
e0Uc5F8W8oyx/mcM7E9C3gh5M2S5efD5OOR1594NecnYr5tvoXMLreNNNXW8
paaO9/QD+/tq8q9Qg+ujkNeMvUocYP/AeXrwqnXQv5WOLdfvOTGtdh1jHxoD
e434wPWp+u2Qv0PWhawP+VKsYPw85B3r/kLN3FfOg/0bcayyj5wLzsS3jn1o
7NXW95NxibfBvq8x90f2e62xqft7x1j3nfGI9WPIZ8baaAxq+lo/MP1sHmr6
RQ32f41L/n/Mjf2fY8T73VjU96f1kP8vNTX94fy39pF95jzuXMzwlYfeJOTX
eP6tkOmvrK9UzPCBa9NiNk/Ogr70qaKYzSf/tWIqFrN5/H/174jwR4vNilkM
cG1RzHCDt0ox22Nq3aqYaXqwWzy3KmZ17ym/gJfUkyvBS3aUK8FL6suD4B8N
5E3c9w3lStz7jeQ43PeN5VPc+83lQXCUneQ1cJGm8ia4SDN5E5ykhd85eEkT
eRY8BnxwEjgKc9z/8IDEn+Ai4DtKG3w9tMF3tDb4emqDr5d24kzYiTNhJ86E
Db6+2l3M39d88IoB4oOHHFvIudRx4hugnfgf81sWs736W6wDjQU+eMiJ5oBT
DBHrIOfAerJ24k8nF3L+NLiQc6ZTxQT3OK2Qc6ZhhZz3nFnIedKIQs6lhlvz
EOMmXnW6+eAYowo5l0rcaqSxEpc6S0xj9Omhz0BjJU6RuNTZhZwPjbOGc50D
N5zkfPFdoH2aY/CqzYvZO/FnIedSFxZyDjShkHOm8YWcVyWedbE+iWNdUsg5
35hCzqsSz7rMWIlXTRQHXOVycU3WTrwn8SD0NYWcY02x5qu0wT1VO/Gk6wo5
T7peH7hD4kRo+AP3PXfrHHHAK26ytquNSx03GCtxrJvNB9+43XpudB0c4THj
Xiz2FOtOfcgBZ7hPH3jKva6Fh9xl3dO1rzPudHPP0h8sD2jjwz2feA36Yf3n
OAdW+MaD9u72Sn2Zbaw79HtI3HcZ7zb9ZtvTGYWcDz1uzdy33LGvig8u8ZS1
PeG6+xx7UtzPuC5xI3hG/zif/fzeJZ70rDU9bx784Q8vFXKetMg6F7qOeuaZ
Y47zCws531ogJu6oxK0WGwv/161ntrjmiRV+srSQ85vEd97Qh7VwkJfF/Yr2
AnvzSiHnQ2+a821tfLirE8dBr7CGZZVywzfes5dLK/UCTvJOIedS74v7Zf2X
6Me6ae7NDPGtMjf4PtROXOdza4N7fGStn2hTwxrtxKXWmOdL/cHxlTa41moT
C76xznxwh2+s+2vXvWP+z8T3jXPkg5/AVVYbI3Gi74z1mjlWi/V788EX4A3w
C2LBE34zD3M/ivtn7cSZfhb3r9pg+UN/8v2pnbjRn8YiD/yH/HCNf8T7t+vo
10brWe/839aM/w8hrcO/ZTHjU6z7z1hggj8V5VZwrAp5Rk15QuI6ifugt5Rn
bSovowY406beD9wTm8mJ8CXXiaH3kBu1C9lfDgTfqCoXetV+sw/c6ds6Ty/g
YZvLq7aRU+0bum3iVYzJpfYO2UvuRY/Au4U5qsm1kO3kWtRZSx7VDa4kT+rO
b0xyLNZVl48hNezTYXAu+VlnxuRtt4ZMDpli3Npysz6hj5HDcQ7oN3vQK6Sn
vA0uVEfO1oPfquR28KU0fyB1yBeJm+bXFnKOjD/fwv//PcpvYzvrbmhN9A0O
uof93tGe7+tza/envv07UN897Ucje0K/dqrUQ7jm3vE8MPTuIVsXs17BZfcq
ZGeAmLsXsr4Rp43nrolnj541tb4a+tLzNp6l3dzPBu5pD9e3jeddPe+8O7wH
PPMu0Gf48b72srn97OPzfq5t6XrelVaeYWK2Nu4JPvM/M+5mjaw73vFdPT/0
ZJ9CNr+Lawa4fjf3tZl718o1W3k+WngGeHf4c8WuhWzPD7T//B67l3vEnzXa
2JM9fN7G+b0d5xmfbZ3Dh/eI33LbuhfsOXtf1b6292yg9/eZfdvP9fWMv60x
9tO3rXFau579rmaMdvo2tJbqnrV9XM/vyQdYI/UeVKx01jwn+HZ0zQE+b+d8
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
C0yvWg+44AnwCe5U7uW1pZzHJF6Dftea39CHGt7Upoa3tMmxQv9lxl2hD5wi
8Rc098r46Pc4vwdgglOsshfc2W9bx0pjJS71ofngHZ/Ys1Wue0m874jvE3MT
C17xaSnnMYnXfGP9xP3OOWLwffnceuAgX1rPWu33Sjl/4Z6Ac3D3gHGdscjJ
ff2D5+A16wAXHOR7c/zkOnqzXv9P9dtoPZ8b72P91psfzvCzuOAV8Ieelb4H
rIUjJI6D/tuaf9eHHvyhTf1/apObO/0/sXC3Y+MDl0icCA1/4J7nbuVuBhO8
Ai5BL/4ybuIxxAI7fqwjH5wFfkI/8Esco75x14k9xYLbbG4OuEHiL4mnsBZO
AbegbnhHFevZRryJA21nDTW08eFOThwKvb3+dZ0DK7wCnkHvsFNfahprc/1Y
B+4tjbepfqyDAzWwTu5R7ud0r6K5Z79yb+lZ4kONrLOh/tUca2gNTVyXOFAz
69jZ2KzbvSLnL6391jfRv4Z95x7fpSLnVU2tv6WxEpfa1VpbmK+efq2MtZOx
axpjJ/HuIQ784QmJy6DbGbuDc60c218siac0t0/7GJsxuEjipttocz8fbG7s
NvZoT3E0cSxxJtYe5Bw8JPEydMeKnGMdaP86ijX9nZKqvjdVxQE+eMUhFTnX
OdJ64B5dre9wbXpwhDb1d9cmfw/9yX20Nlh6ahMLvtHPfPCK3tbUy3UdzN/d
3vR2jnxwD7gKHAhelThRH2NxNrs438215IM7wCFGGAvOMMg8zA0Q90BtcCee
Au6TtBM3Orki50aDzT9Ee4B5Tjc/fAuexb8Lyr8JOtZ+HW89/Z0fas0DnEsc
K3Gu4cYC00jrARd8C950cUX2uww8YlLIpRUZj4BDwCXgLNQ8Sh9qGK2d+NNo
4xADHgI34JnfkSaGvrAivyPHWW9b+80+XGJ9Q50f4xpinG+csfaBMwCuiyoy
jtZf335iv8j5ceYl1uXWeLG5Juhzlc+nVmT3+ET9Jvs83l5caswrjXNv5J3i
+I2l7B3lXHLupup7tvNTxHSi/R5pzivMe5lxz3f9JGNOFMfZrp0g9sus517X
TLXO/wMxXA1W
          "]]]}, {}, {}, {}, {}},
      VertexNormals->CompressedData["
1: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
UA1640QiG6chNmC/lmowM2qXI+k9wxjWNdNt7SB+3LLO7s+m6ZDpzVuxef6j
K/hXtmjhP8YrS9OwZy7Ed5rM9lEJk72rmbSoQQJus32UN10B/juOzHh/2qQe
nbUgAPxL17ix+TwuYGrcETO65aYj+Ev/o87PHNuyuu0yahE1taw+0W3Anhy9
AOKvaRe68W5zXfKpRyjEf7/xGNhL/hw69DRVonN+2YA9YqYLxJnfMOLp2xtd
yCpDAnHWz/jO3tsx7fXDxh4k3+Ad9JOdv6zB3rZwcrmBV8zpr0/9wX9NEdtv
BP3O2P12SCMSP5rtN1r07An9oUTXYdPbG61o0IcdsO4v7OUG9uE1e4/9behG
J6/NAbvdEj+w39z16bX+tdp08dhEsD/e/gvsYwb8GLVxVyXSuPuIPzDPT5oI
7dIbP6KE6urTHimboF0N77h8UOwjLznMG1euGWnW9ZSuYl9ysR74f1rTcPuh
ze5klL81fF/fmbP/Veehe9h56lrbDuBvtjiywp60huTA5zS2X50dBPFrVgsN
HjjWlhT37AfxV2U1A3/nJ3XeTJ3pRL2pAcSPvmgC+b/LPDNplkkXOlaaxvYn
UUPA7rGjcPXSKw3JsfQQaK/xLy3ESV0T8D5jVzuyo7sBvFfv7BHW307Uvr/Y
VqIeh+zA3mbhNcj/iP6PXkahNvS1+yKYB6LLp4N9qHuLp9NCXmlHZzQD+5hX
uyCOy4vAr6UXTcmf6RLEGZ3M9sl1jpzPz8qsTF5VdmLzxhK2vsim30e4F1nT
abXZ+lLM9xsDbM5+VfYbjfh+o+V7c/DXZmvbJ2Y60JTODcv/8zwo9mfrVAPw
vzJhg9ueh680x95I4D/l4UzwP2xy2iz2aivautc6yGfH0/Xgv6CP3u2nNnak
38wBkE9OPFv3H00rvRg56b7GqXsJ5PNpPrufqTjVLHeTrzcxWHMd7F0aWkL9
TyWOfxx3tgJJSuoM3yX8PjtPBZY8eBjwqBL9+4Sdp270vAj+O64cWVPX8qbG
o5kTzG8LLzTOUuzu09a+Wa6pQ7zr0N+K3WbWCPCXMyxX/67oTDsGBsL39ShY
zfb5F7ucuN3DmHTczc653qMng/3NpgZDHhxtTLaVS2D3Ek+eg736+uiDiUfb
0lftJcjfaOxjeO+14IMLZ03TUL2KI379X/u66/ePgb/Wz7fl1NT6tPDoh1//
jL9evrW/LD55yePLz2aBffYZtwJPI0ta4VZ46T/zz7lWquRPfXj+Z45VgPb+
/Hvq1u9JpZoqz49APake6yf1e+xJGtegVBPkrA/xrZ2Swd73j79NnxCJPt4d
CfYPQ9h+r+pDx429nJyouTXb75199ovN/w8vXTWJMiA1uj+F+Pk+Z+G9i7Jf
RUamt6MGth5s3ckoD+PUquHqleOOF2vKJVWpoMS5k3UsW7F/brUhQRpJ6Iwl
k78r/i739oM9JTQl7OQ9T9p4xQawy/vdIZ+kh74nA+9XoqHdssv9c97Y4tlz
uLKvG8bnjYbl7cG/y5njU6sX2dAbMRWgPzdxrQPxYws2NMtsJdEa1UN+Kv5N
Ygrgu2x2ian/xFpDTeL/gr2GnAL5n984N2hDtjeZFHMY4gQO6AHtHdcg7e+3
Feakkdce6FcOvdPhvV1zjm5/eMmabLx9D+rW5EU2xLn2oOYovyJbekUTCnFq
F7J93YKoxWYR25xoakVbqP+1eB2wO7cwbhs1sREpkjezc2g02//X7eXbvXLv
2qRwKNv//4ln+9KpNy57zdzQlJy+f5fdA5gsgvd293h1wvqwJRk7xR7myfCC
upDnycLgpAbvCzRzYm0gn+fXU1idLZ/Flr6yoysccuG9+h/HQvz7fR/4XR1c
h3wNvAvvNTRn+5/0ftN+rX9vR8ND2P7HzTaArdfd34530OiQhgvvgH/y63jI
592qFqafflqRh43S4L1d9X3YOnJrybg6PYzIqR7P4ftefTcF4vSYUytqf83q
1H9gDMSpMdkZ7GYzPQak1zKiQS8kyHNDjiHE//Ejt9uW8N+aA5k/oL3Gb7qC
/XD4vOc/5tYlv9JXgP1Gogt8xwoLrKaFPHOlASMqQH/edJrVv8T+mn9JWmP6
+TSr//tdu8F/avPLWzcPdqK6B9dCP//0ewLEd3tf8/bYnNa0dWlPiN/k8FCI
kzH4ybXTkVnapJ+f2b3ZyTfQ3lEd/Ex7PGhJz29PZfvkOpPB3sxBiml4tCFN
/LwR6vDwgA3E+VFriGVxA4m6XezHzk38vvpQwNKBBx0L3JXoZfHleG6vnnq5
Tot5GYn53H6Q2/uH1O6SJqe6V4bZKV317+N4z2PY9C/uBdwf78NxHtPl/rGC
XUewn4y57DO400P3ctyOcZK67TMfOuSdakf/510mtV458r/+dmTUr4nkYSK+
d7/wXgMh/5uWq8KkwoJEzP8oty+7MnWOeUJGYiG3n+H2NYs6GT/U+5X4Uqgb
xv/G7TdmsXt7g7t54dLd8qRW4Viwb0g2B/sX/x+nL1lb0VSrAMjnuxc7V07c
2pjqnkvXeP6KA/8raxezc9OB7uGzzukRu8ZBYLe87Aj2GcFjLux4YEp3ye0h
jvk09t4NQcv7xvo4EefqwAvkjF6ML3yy6F4jL9CSBhgCX5Cd+b36oePa+mXn
L8rv1eWdNXzB3n3Trnq9puuRefXNwf/6Y3aOG+07O3pBiQ5xPfYH/Lu6Dwb7
JNvYkZM/WNDgIQVgf/+rJdjfHh6QtPKpA9F/2RHibPJh83DHzGOGR9+a0qqd
VoH/m9UO7H4m7tK1HLuGpNxzL/Bf8ord++2Z7f1B55Q16TN3FNhzy92G/m89
Lb6mibcNXXf+O9jHTGScIj1/u1uiQyOyo4cNxDf4ze4xVq2uceFDz2eatTQK
7Et12f3J4Jj5nS20VUnfWnDPJqd9j2X3TovXeJdLtCWmLm+U+UoOWci+V1pI
uXU9pziRwzbse4Wnse/1+3T2o0ehTclIw0Cw4/rePCEB6szXd/mdE7t33b/k
RcS3jIpk58Bd4N8wk92zZYVcvxg+slQzIAPu2eSDO9k+Z/f+nVH+W23JuBbl
WP8ZVpet+9cW9K+6+4/2tOd4sH8YVwns76/ar86f2YyEDVvFxkURuz+JHvAi
umUrK2KmA/cn8uxdbP/ZQmf2iZgaben3S02gvTZ2bD633dOwuPa0hrTX13uQ
57LX7Bw93+rwpxzjb9oPp9zA/9jD4zDvZVo/fmZY05U8M+ylzHvy83cxH9l3
qRtT3sCKPl7tqMxX8v2PSxifank4denXsn2pzSSwx407BPErhQ5Y5jOlPbGd
nwXxb37rCfYHgZu3u3atSX+3rwz5/497dXmSqyu7/5nXznXfSHeireUCdov1
emwemJPezDrci9zsug7sli8Y14iMCT63+qsv1ZvnDe3deiQP8qz+Y8vPDcGN
yBPX06z+Y9g+MGRF392RW5vSa3/jwX9tm7ZQh0FzA9t4vmpLE3oVFkF/M2D2
lx277Rle3pG6fmF25/67IE68delAm84uZHlmZdavdt1k5+ux95492mBJhk8O
hTp8CZwLdm3Qk5hWOfc1i94vAv9pY9j5wmZAlZZ7qDOpugPOF/K8N4ls3LUO
8tHvYUte7dgH9otbF4J909B2h3Z2dSLPcoIhju4qdu8dvWL904/nmpJrW+He
W63zxfrnoD9jnQe/ZnzqUau+i2Pe6BGdb3psPBb1BbtRyala71N0SLB3ebB7
rRjHxuml5lF+FZqTTVeuQ/xH+oy/vAva6VqxxU9tyDjgL/JSwu5JWja6fdno
oD35c2IS+E9MYvc/NfSbVXca24SM2WQP9i9Lktk9RsSpfYZaC3K+qR70q1G+
G8D+ss0Zz6qZLei2333BXsOYvXfFjUa5SacKtTp92Hv1frP+uWi4aasNKYT2
1mf98/ZiG/iOVRc/PxfQrhX5a95O2Q/IHfi9ej+L9iVDSLo2kt2ry7WP+IJ/
SNr+wY+atic/B8jw3Vtlsvnz/pnnKzeNMKMPTPPZ/D9n1L/XF8/nYHeYM4Ld
nxT7fD9+949mtWM62OVJrJ+MHfLw4PWtbclYs5nwfRNNWf8P3/sp5fvdBuRx
D9b/Q/aye8uHb6eEHIhuTX+36Q/+/bpkgn3ppyYlGb01VNavB/bobqz+3S+c
Gj21twNpP4fVf78Hu+eZv9nljO7AFtS4BtzzqPOGy5tu/5o3bpiw/mbXd+6g
kiEFmrEXpoK9m84Q9n3vrp6z4rEVCTmTB/Ytt6LBXj5jeK3T8fZkoXNtsAfs
Yfdg2rHb5x1P86Cr4xbCd0k2LgD/70cXXh1g3Z4EdsmG7+KYZwv281kOX56U
96CWG9n3/R/3NvKAS/ZgD/DfE3Shrztp+c0H7I5ubL0YuEs3y+iZF/l8Cu7b
5bMbWX3uhU+oOkLXjz4Ph3s8efOBkWz9Ddhf8/rNDuRVk1dgD93L1tOU0/3u
dFrWjP4d9hfsLV5vZeM3c/bynCJ3ejndHOypvxhPd3OXB/cLMyO9q84Ge3CT
ILAX+kXaFRnWpsMaX2Jx7jpAfYrPLwkb98KddnlQCvUZnfIL7HaFs6q38+5A
t1nFQP42Uyygf5rbBfj7LKpBqpr0gbrV7MrWtT2tp6ePyCpPrlceD/FTht4A
e+UuHXcWBLqR4GtzoJ+MXcH6/9Npt2PObjEhQ8+x/o/r4C52r66ug7UaNwF7
I9t1R2c/9iTHrPqwOv9i/Ud3YdXewe2cSYEjnCPkFVkN2fm3zumHW8zdydSQ
weDfmOcfdfRYt7L8Kea/xXse+Hfe9evT3/J2xPjzAjY/72Z88Kx7H8sNVT2o
cV/gg3KVLMZJLXsFjd69X5dKPsBJZbtl9hB//Y95jcbva0mCP9aB+PcusXuz
1HtpUzXPaxLN8O0wrtsns/NOkH7VLa2OftN2cF0HcQoK+oC/8etxr2oMcCTV
+0SA//a93cBuat83tcLZxkQ/9gjYU7xuszxrb2x8+aQjqZU4BeIM82Xn9231
LPIbT2xC1rvFFf9f+42z0eyecF192Sm2mgG5tTwD/GfFME5ddHuFRfIOPVJ/
kB7UZ0SXP+w7Fsyq1WWnPUl+kAL+nw0YlzGQ0y9Z7Nen0x2/sv3h4FDw913V
7+iZlvak1phIiGPYk91XxD/caNH1ty1JNfSE/DNPsN9jyD+9v4x90ITY21aD
OI8qPmDn2XP39zRbXoNk3RwC/mbH89k5y6a/rlFhI1pslg/5DLx+mp1TPj8/
3j+nKk1okQj+6Xls/n/zqnZpwbUnmpmTK0D/n3+P/e5iu+N1rwFP2tIRr+F3
F/IFY8ZTzuZu/zn/QTPy+AzwFHlRiQ9bZ6URrSbbOJGXGrYf/h/36nKEGePL
ReNPHdxcwY1cmgl8WR7Ug53vCscaV5oypA151zgb6nMyNZPxsmU2zS4duaR9
VP4G+GP+qz6uKi7LX4v5p3VLYePIrbjXj91ftNddAiDPpn7sd1NXruf3Tt9n
TVed3gn2nJNs39v/eLm1fnvNSfHRTfBei/PzIP6z7Mg002g7+jJqNsS3rjwG
/C+87H5xeXAlOubtQzbuWrHzpsGmtpZt+hM6+TycN+U1213gPuSi/LTo/QUP
cqLcWuU+Tf6kYb9b8NBaOB/r8l0bEefJ5qVqrJ8vrfy1ZHycMzmaEAf9PF2X
nRem9yiIqLzPlMYv9PnXvCHW+dU2dq4/uDBMf/7DX5o1a+FcL3f5zPrJgj0d
B7p9aUs69c2DfiJPYN+36OvzUOtuFjR00TuoT5GfMbu/0smY2/5UvrZjnpNy
zyAPvMp43IHlvVts9SS06f3j4L/S8SP41zqVvuPZcA258vEyvLcwgt2/3Whi
NXFdC0fqJK+G9rYf9RT8G9+YMzm8HtXU901j/t2qQR0OXKrcNrJZazL212rI
M9ftBNirWeUe6/egBT1zoAfsn0df+Av3Bv2eLE+ISzOi3eggyHNZHJuvEuvq
Ev1B5qSv+QfI88YkNj/r9vDe16i/A6m1js3P341mQfyN3q3PxzdpRzrFmhb9
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
3eE+olaBxtScjZfh3dl5XBviun7bzrbk3jR2n4Nx2pz0L70y8Fsixrl9hN0T
Zu701Mz9IJFhZuy++pxJV7A3W961rfZ3czJwkrHOPzlOOmuXynHO7WHjMSvY
zN8u6ZnWooTdj20ZyMb7imSXGikbG5MN99l+CbmML6uzyrNqLmP3LQnai9Oc
FmVqB15i9y2jl7D7w1EhXjtH9XKhw8e2BLv63ePguyfid59ofxXsM2r+dHga
60FnpS5j+2otOydmhQY67TepSWKPsnNiglDnHB4n5t0OsEd+jtG/42hPa+UZ
Mm6ykP0usY7BiopW8jfNqx81/lUfjIP1qW3C7HLYNrOuNb5pyo1kdt/gKLC/
e+nRYsS6RrR1K7t/fS8TNk7V/mM18yWb/wvHPDz10YkMaP0M4vwuX5P1nxv+
NuM+NCIl2llg7zmH5bk383PBzsgijUc5+P2kbHqfnUcC3zVe6baoGbHcw+5P
tnZm6+8HrwHp87yNyM4LbP29+Z7V7fSnUabbKjYgR8exuoX9ZPu0xK0Dpg82
+aAtmM32aVl1vdn+P7zHLLcNhdqZixkfSWVcMzGGt0+f16edU9j4r/0zEk9y
+zve3t6ca+J3/s3tm2wsP1S6kup+TLBrm/YIKa77zR2/A/Zzv7Qac9p3/JaI
dvwuCSa1My7bFqr+5bn9CuOaibFCnJ/2xnq1Sr8kYj4l/L3jGwT/6Zr9xV30
f87ySUTOiXyTc83/5Ln02b2VOaZF7v8e9+ny+Z4TsvJNf7kj/0Tuif0MxxPy
Tc41KXJO5JucaxLknMg3OdfUIudEvsm5JkXOiXyTc02CnBP5JueaFDkn8k3O
NQlyTuSbmm95j1a0qEiQcyLf5FyTIudEvsm5JkXOiXyTc02CnBP5JueaFDkn
8k3ONQlyTuSbnGtS5JzINznXpMg5kW9yrkmQcyLf5FyTIudEvsm5phY5J/JN
zjUpck7km5xrUuScyDc516TIOZFvcq5JkXMi3+wzIemJUmc8b+E5i3NNipwT
+SbnmlrknMg3OdekyDmRb3KuqUHOiXyTc02KnBP5JueaFDkn8k3ONQlyTuSb
nGsS5BXIKTjX1CDnRL7JuSZFzol8k3NNgpwT+SbnmgQ5J/JNzjUpck7km5xr
EuScyDcPPuw0/3hmGxrG+ZsF526ca1LknMg3OdekKufkfJNzTYKcE/km55oU
OSfyTc41CXJO5JucaxLknMg3OdckyDmRb3KuSZFzIt/kXJMi50S+ybmmFjkn
8k3ONSlyTuSbnGtS5JzINznXpMg5kW9yrkmRcyLfXF/+7GOlPyPnRL7JuSZF
zol8k3NNipwT+SbnmhQ5J/JNzjU1yDmRb3KuSZFzIt/kXJMi50S+ybkmRc6J
fJNzTYKcE/km55oa5JzINznXJMg5kW9yrkmRcyLf5FxTg5wT+SbnmhQ5J/JN
zjUJck7km0svV5+4zL0pvcw551fONznX1CLnRL7JuSZVOSfnm5xrUuScyDc5
1yTIOZFvcq5JkHMi3+RckyLnRL7JuSZBzol8k3PN/8wbnGtqkXMi3+RckyLn
RL7JuSZFzol8k3NNgpwT+SbnmhQ5J/JNzjUJck7km8HrdW4abKhGkFdwnYXM
uSZFzol8k3NNipwT+SbnmgQ5J/JNzjUpck7km5xrEuScyDc51yTIOZFvcq5J
kXMi3+RckyDnRL7JuSZBzol8k3NNgpwT+SbnmhQ5J/JBzjUpck7km5xrUuSc
yDc516TIOZFv1jW0GbW9f+X/rIOca1LknMg3OdekyDmRb3KuSZFzIt/kXJM0
FvLnXJMi50S+ybkmQc6JfJNzTYKcE/km55oUOSfyTc41KXJO5Juca2qQcyLf
5FyTIudEvsm5JkXOiXyTc02KnBP5JueaFDkn8s2+/2O/wbkmRc6JfJNzTYqc
E/km55oUOSfyTc41CXJO5Juca1LknMg3OdekyDmRb3KuSZFzIt/kXJMi50S+
ybkmQc6JfJNzTYKcE/km55pa5ITIBznXJMg5kW9yrkmRcyLf5FyTIudEvmll
tfB4Vo4tFevMuSZFzol8k3NNipwT+SbnmhrknMg3OdfUiPlzrqlBzol8k3NN
gpwT+SbnmhQ5J/JNzjUJck7km5xrEuScyDc51yTIOZFvcq5JkXMi3+RcU4Oc
E/km55oUOSfyTc41CXJO5JtvVjrX1KdG/+nPnGtqkXMi3+RckyLnRL7JuSZB
zol8k3NNDXJO5JucaxLknMg3OdekyDmRb3KuSZBzIt/kXFOLnBP5JueaFDkn
8k3ONQlyTuSbnGsS5JzINznXpMg5kW9yrkmRcyLf5FyTIudEvvk2dvpJC6sa
/6kz55oUOSfyTc41KXJO5Juca1LknMg3OdekyDmRb3KuqUXOiXyTc02KnBP5
JueaBDkn8k3ONQlyTuSbnGtqkXMi3+RckyLnRL7JuSZFzol8k3NNgpwT+Sbn
mhQ5J/JNzjUJck7km6UVZ11W9hvIOZFvcq5JkXMi3+RckyLnRL7JuSZBzol8
k3NNipwT+SbnmgQ5J/JNzjUJck7km5xrUuScyDc51yTIOZFvcq5JkXMi3+Rc
kyDnRL7JuSZFzol8k3NNipwT+SbnmgQ5J/JNzjUpck7km32X6pgndjZQ+3MH
3p8516TIOZFvcq5JkHMi3+RckyDnRL7JuSZFzol8k3NNipwT+SbnmgQ5J/JN
zjUJck7km5xrapFzIt/kXJMg50S+ybkmQc6JfJNzTYqcE/km55oa5JzINznX
pMg5kW9yrkmRcyLf7D8sI0DZ17XmnBP5JueaFDkn8k3ONSlyTuSbnGtS5JzI
NznXpMg5kW9yrkmRcyLf5FyTIudEvsm5JkHOiXwzOXl58PgdjjRjCBvvjzay
8c65JkXOiXyTc02CnBP5JvJC5IfIDTnXpMg5kW9yrkmRcyLf5FyTIOdEvsm5
JkHOiXyTc02CnBP5JueaFDkn8k3kr2Keb2Kdhyu8VmwX55oa5JzINznXJMg5
kW9yrkmQ4yG/41xTi5wT+SbnmhQ5J/JNzjUJck7km5xrUuScyDc51yTIOZFv
Pt8eA/cVyDkLON/kXJMi50S+ybkmRc6JfJNzTYKcE/km55oUOSfyTc41CXJO
5Juca1KxPoPHDZUVTtmOc0s3zis51yTIOZFvcq5JkHMi3+RckyDnRL5Z5Dik
U2SdVmSbV0X2u4m5fjAeOdekyDmRb3KuSZFzIt/kXJMg50S+2YTzkm38Prw+
vz/nXJMi50S+2bz1hMHNa+Rojg1i51+HPvD/s5Lbcq55gce5ze/VOdekyDmR
b056M21I8G136tySnYPoBnYOSgeuWeCOui7Uc3GuSZBzIt/kXJMg50S+OTo0
Ysi0DUX/4RGcaxLknMg3OdckyDmRb1bu/miuv/3/4yAYh3NNgpwT+SbnmgQ5
J/LNkWO3Pw7s/k3Np5S3i3NNgpwT+SbnmgQ5J/JN5BdiPhu7Nzw/aXVbGmY0
HuyRfym7b2FckyLnRL6JceKEfDjXpMg5kW9yrkmRcyLf5O1SeVMRj3MsMLrm
0I/2JN+F3bcn2R8FO+eaFDkn8s3/1a5uGzZ9/DLAjOT0Z/k378vy51yTIOdE
vqmfndP/0Ooid+Q733k+Ef6LL6wPtSHb57L+fOsn68+ca1LknMg3bcd5eU9+
XeAucqvLIXqjA241IrHN2f+PrXKdEWDnXFOLnBP5Znze9XHatQWJh3icCrxd
lmcrHc9/0YIO01QG+/y8FWDnXJMg50S++X58hQYdOxYk7kNdI4/DuSZFzol8
k3NNipwT+SbnmlrknMg3OdekyDmRb3KuSZFzIt/kXJMi50S+ybmmBjkn8k3O
NTXIOQW+6S7wTYnzTXeBb0qcbyYKfFPifDNR4JsS55vi+JU433QX+KbE+Wai
wDclzjdFXilxvin2E4nzTXH+kTjfdBf4pqrbFPPkfDNR4JsS55uJAt9UObrA
N1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Jc43qcA3Vd2m
wDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2m
wDdV3abAN1XdpsA3Vd2mwDdV3abANyXON8V7MFW3KfBNVbcp8E1VtynwTVW3
KfBNVbcp8E1VtynwTVW3KfBNVbcpcApVtynwTVW3KfBNVbcp8E1VtynwTVW3
KfBNVbcp8E2J800i8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1V
tynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNifNNKvBN
Vbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBN
Vbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTYnzTSLwTVW3KfBNVbcp8E1Vtynw
TVW3KfBNVbcp8E1VtynwTVW3KfBNVbcpzhuo2xT4pqrbFPimqtsU+Kaq2xT4
pqrbFPimqtsU+KbE+SYV+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU
+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimxPnm
f9ZB1G0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U9Vt
CnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U+r7P/YbqNsU+Kaq2xT4pqrb
FPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4oKrb
FPimqtsU+Kaq2xT4psT5psiDVN2mwDdV3abAN1XdpsA3Vd2mmD/qNgW+qeo2
Bb6p6jYFvqnqNgW+qeo2Bb6p6jYFvqnqNgW+qeo2Bb6p6jYFvqnqNgW+KXG+
+Z/+jLpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6
TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb0qcb/6nzqjbFPimqtsU+Kaq
2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq
2xT4pqrbFPimqtsU+KbE+SYV+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPim
qtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPim
xPkmFfimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4
pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Ob/023+m29KnG9SgW+quk2Bb6q6
TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb0qcbxKBb6q6TYFvqrpNgQNK
/4MbqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6TYFvSv+Dw0qcb4rcVtVt
CnxT1W0KfFPVbQr8TtVtCnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPifJMKfFPV
bQp8U9VtCnxT1W0KfFPVbQp8U9VtCnxT1W2K9eF8kwh8U9VtCnxT1W0KfFPV
bQp8U+J8kwp8U9VtCnxT1W0KfFPVbQp8U+J8M1Hgm6puU+CbEuebWoFvSpxv
Jgp8U9VtCnxT4nyTCHxT4nwzUeCbqm5T4JuqblPgmxLnm//hEajbFPimqtsU
+KbE+aaoq1J1mwLfVHWbAt+UkAMKfFPVbQp8U9VtCnxT5RdiPpxvEoFvqrpN
gW+qcQS+qeo2Bb6p6jYFvontShT4psT5JhX4pqrbFPjm/2wX55tU4JuqblPg
mxLnm4kC35Q436QC31R1mwLflDjfFHV5EuebVOCbqm5T4JsS55vuAt+UON8k
At9UdZsC35Q433QX+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq
2xT4pqrbFPim9HL85zM2u17J/CkZLrlfNP/mJzn2cErImr3P5Nn1KhjfXfFa
ivK3Xfps42f5scGWGsu2PJK/Ruh+a9vljVTr8qWCWpos+c/HEWOmLLkvX456
lzEr641UqeRRk0bXsuTpvnZnrFJvyPXWBE5YOLps3U2/GPagZbZ8v3fhzK4R
SbJx6LOrtS+mSS3uvLe+OztbXu0VN6hPZILcq+2EEXdz06R2HbeZbIrJlr0t
3s8dOroTqb/2Jvz/uGu3O6vsf+U/3e82LvOXenP/n4Z1ain+tWIWBpfFlzB+
bnAbGyX+Qf33Jg1Tb0i3Ep9DPkOfOM9R8nHd4z+oLH/pCs9/5b6RzZT8H7H2
SoOSF35V2mvRyOmb0t5fo/esLauPNC5hYDmlPumVli9R6tOs77ZHSh1f83rW
6km+K/XkdcS6qvXMsKvqOGTWc3xK/e3cAtKnZsmvk+IqV+r7WI5IqbGqtv0L
adS+vEOL7bPl9OaLNxs0eiB3WqT91jz5hXTyy/In7a5ny8P097ztduOmPIzU
WVvV+aXUpfvVZzM0X+Sq8X3WjWmXLLfZmnHWbMlLafyqN+eiI77IsS+aJz8k
x+V9aU/6bDv1UnLw6Lyu8PIX+XmK3cougX4kfG6QT9KVl9K5fBKb+OiL/LDv
3iVl/hL6d5rwCvwfnu09oiy+lJRQ5ZwS/++h9ReU+N3H5hn537gpjeD5LD2q
+0TJp361uD1l+UuYf/Ktn4+U/B+U5OqXtVeqvCllmtLeO833HVPaezryqJ9S
l60P4joqzwFj+wxW6jOwZXodpe5Yzz/DWi5W6jll9pnXZd9JNjr399fSsu/m
6KstVr4XryPWVa3n0c7XSnx+PsandC/MelHsn2w52nbOtYuHH8iN1oxJ7zjr
iZTieDNj9Z4v8sbdORuMtt2SO2r7j6+W9kRa2jGkeptGOfLCe9EHC28ky7l/
iifEN3kq3fDVbJEX5Mg3Br/OOHz/uOzju62He6+nUsmIQeXczubI1Zve9H07
24vEzkjwk0c8lfILSuWzN3Nkq7ZNNx25f1z6mr0f/LP7xpa6lvkX6YdnlcWX
8nh87x9Ho5T4Xez2RZXlI81u8DRIyeer1TjIp/w4q1dl+Us2PP+HQVPTlPy7
jp9r6lvWzgWDrAyUp9+oN7OV9r7SObFSqXvTVnd1lPr4tLtyRKnPoqLD5dqV
9fvavJ5+MwZD/+fjRM5vU2mwMm5CmnvDeJlievNT2XeVxz95slD5zp8+LXql
fF9eR6yrWs9zP/1vuJmlyg6BzU+VPaUZN05tOdI7R273nE4/5H1brjuhgeeA
SalSzS0zZnqm58jdwup7DJQuyclu925+jU2VhrhFranjlSsP/fFtcQ2/E/LS
HssM8+6nSvfmm78yDMuVp4dpSu2re5M7eTnnvF6nSvOGG02uFpkrh5/SWVjm
L6H/j4hG4N+ihZ1tWXwpicd3zx+3Vok//EbDGWX5SJiPd+ZkyGdB1RvpSt6a
Oku1ynPbgnkblfwjF5T8VOq+jbd31t8Bb5T25vc7WNmurN9bT1y3SKlP/t65
0P87+bulK/NOHq/nsNVVbJV61mXzpny33Om9ZfOo5OT6bKEyX/FxJet0M/tR
Nu6lhJ+HnirjK9v53LCyfiBHsn4qnRhGjZT+wPOWow87d1baMWHqo9lK/i2O
Dfafc/c2PqUHle5NzJ2WK/v8jRlcHH1J1uie+GJqf0dK+1J+f9LrXLle8ohy
I2JOyA8HkPP24+5IL5t6FQy3yJNPGF02MTjYkQwILbqzfs4dyWL7torbnfLk
DbWmpZb5S2fKNwH/Uqvu+Yq/U/DV6LL4EuHx79Xeu0eJr3eo6hglj5Y8nzS3
DROUfGaOaN5bqfuz4Sf9lPzDB/0JVfLHfs/HpfTr1Dro/32HvtumzDtYn7Vb
Ih8p9Zlr1H+TMu+/4fWcGKydodSTrxO4Lqnr0dRDG+LL5jX52HPfAGWeG9dh
RKIyvx1c9npG2TiUb42O2qCMyyknPDYr4/FOdtOHZf1G7sL6qZRXzXq10n94
HbGuaj1f9rmcNuPNJXxKHZdGpOp0yZPnTDwZaJ59Qu5pGDE0pOJlaeDzwR0G
rs2TK+0KNu4Y15vcOaSXcd/4sjTqk/7asP158oIWE8eX+Us9uL/Omf7gX2ja
5YcSt1QeCfGDJ119oMQfEVSuvFlZ3X15Prv33t6r5LMz9MB1pd935flH7cuC
8eUbtGiHMu8c+PMD2ms+d8Y6pb0VXtfZp8z7w7z85yj1WZS+myr1mfPGNFFZ
dx/yep4JO9NEqef2Wtf8y9ZpOciiZknvsnXbtPzGusp6zdcVXJfU9ciPzZvy
zImFxsq8eGHXex1l/uTjVs5qGh+njOMjDy68VMZvyO7Td8r6mbzW3nS+0u8+
yEV5Sn+rMGvz1LK6yDntCj2UOt0cWNxeqU+1/dN3ZRqfxKf0/KL17eGpebJb
F9u4yRu9SECsWZXFVielfUcu5Zl+zpM3P215Q/Ez4P4nDS/fUvxzTNYtV+qO
8SeaOUN8fe91b5V+38/pyhwln81JD3KVfFoPtKymzDuYfxP9Asjfwt1qkjLv
h+34WU9p78pB7f4q83/mdYehyrqbYjHkrFIfx+Jha5T63PevOETZ9wTzeh5O
lmsr9bRk+yT83WKYKd8v8XUd13mK6ztfh3Bdorgeed89d7ls3pQrBOkr8yjN
bh8wUZk/+TjHcU9xvGcdfljlgfFleXf4yNeHXnvRCL/5q5X+2XSzx7lFVifl
iq0kpa60cd6yfKWec0yO+SjrIH9Slm6+jHXn34Fi/W1reTqXxZeKQ9pA/OBu
hauU+C2H6v9Q5p1jsR8hn7bxPSoo+RzadPKxMu9HdDtaouTfePieICV/g9vH
ByjrbutBu72V9xp/epmotLe1lcFgZd8TNcQf6nN0os9BpT56+45V+Oc5ydpr
v3LfKZfvfA/6c9HEObBvTemXUEep/+wOdp5Kf3Yz/PhZ2WcFz323UflefF3H
dV7G9R37c3FYx/7KOlZHWgrrUW+/ndCf9TLOHlbm3RUzoqA/6/L+bDCiaaQy
T9i8bgX9jfdLuaFBdr7yXDNiBPTP8aNqldWxN9kj5w8qq6tcZ2xJrlJP+2lh
O5V+jP6NYkeB/xfen689/gLx4y4HeirxK/L+7PqmSpySz8G/Q/7Vn/NvWy9R
8m8p9YL8r6Y1h/4cZzgA2rvwhtEfpb16o19OVfrzKc+9NR+V1WedS/hypT73
eH/+w+v5Xk6D/byBW4v7yvx8w2jFEuXc8OzWbCtlPrl9NzBWmZ/r7b8wXtnn
6t9urVXmnxg+P3faseSJsi8rGHo8Upmv/kZ+1Srzc7HN9n7KPiKrwXJY3yU+
P4fpycuVdW9Z+1EwH5aweVMefsy4SkjZs/vfovvK/DmLz8+5rE6y3/gHUJ97
5U8ZKfPz2LBjg5Rx0LnX1JVK/4w5luipzAt8npC7eTq2/+f8jPGNdzSD+E+7
DoP5eSHP5/b2xrA+Tkh59UqZn6V3LSYq+Sd1Lljxz/m5kfN7aO/2ph9WK+2d
ztYvKcUweYFSH8O2My7+c36+yuuZ9Nsb5md+LsJzkoznI9xvuL+OLVTOGZHn
psN+g6+/uA+Vcf+J+w2+b5Jxv2TP9xu7cxfPVJ6eGTPG/3O/8SdhZq2ydsvl
/eKhvbdLKvVS+tnu1RV/KOOggYkp9Dc+zgkf9zKO92CD5co4kXZx/1+HfXIU
fwe+35ga+QTizzD126XEr8D3G3t4Pv612gX9c78xkuefk7Zgxj/3G2J7x90a
HK3sNwivzx2LDrDfmMn3Gzt5PT0mt5us1BP3z/zcKeN503hatSJl/2wypOcW
5Zy3a1MA7A/5Ph739TLu568cPPxA2T9XaVn8WHm27Fl1g7L/DI2xHaLkPYu1
Q84r9yZEyX+X3dVaSr/h67yc1mTxOqX/VDsQ3UMZt3wcy4Mm34Hxm3M9TZk3
yUf/PbeVdeCgXssJyvzJx7mE/jje5QVnmyv7BoyvMy0exhevo8Trqtaz9xYv
JW+JP+V3U7ZFKPlH8f0ztneei+5Lpb0XbvTVVfbPxrw+YcEHU5X6vF53LkvZ
P7fj9TR60QDuHwayc7u8anNoHeXeosaI6V+V80vqsvpzlfMgP3fK5NbeOOW8
w89FeE6S8XzE9/G4r5dxP4/nQYfYM9OUcZBd8KAa7D/HFMF5kI9LOaD7qbXK
eExd/TJLOQ8+uK4TqqwDSYO+/lbmQ74OEb4uybgeHWbzpjRrvAH4T6/Yu1Dx
v7cjG86D3jx+ZpE1jPfO/DzYkueTOexItX+eB3ld1XoOauFaRzkH8qfcLfFS
qNLechNrrFDOg/d5fTbPvXRYqY/1rdU/lHsQrKftZr98pZ6frlSqrNxvVH63
ZKFyb9ThWCjcb2xh53Z5/tLiHsrzdoU+A5Xz+yt+v8HPnbJraEWIH3XJDb6r
TmqnqmXfWfaptOi+8n1H8vsNC3/nfco8tH19wkNlfBnx+w2+D5Vvn0qD+f8u
2yfJcefCxirr8L7oYeHK+sLXdcLXeRnXdxI2Be43nJNDwL9z/Vfg/4jfb8y5
+nWvEl+34QFZid+T32/YX4yDfOyPP7j/z/uNhecPGij5L3nrck/Jn9dR4nVV
69nY+aiPcq+R06jYX6nPLV6fDZvP11PuNyrxer4YXzNMqSe/V8J7Jhnvl/C+
jt+LyHgfwu+v5NrvB39RxoGL77Hvyvf6ze/rXrFxI6932WCjjJc5/L6uYvHh
tco6cP3AsxBlvuL7eFw3ZNzPr+X3dVGehr2UfdCDcklmynqduHA03NdVYPsm
GfdLRfy+riTEFPyrNHKH/VJNfl+H8UNtKjVV4u/h93W6PJ9WJcFTlHz4OJf4
uFfHO97XNWL9VG49QB/uJwv5fV2dxQYmSn1Cr1ktUOrThN/X8adc1zIuW6nn
h+AOgzJNX+JTerb10PK4PZ/lxCeX96aavZY7HF1/9creF1L95E8Jb5w+y3az
KvVT/NA/6sa1FYq/1oVcKPOXPLj/z9NWRxT/uoNut1fil47R91eeB7YOilD8
T0aeS1DiX6rlcbHMX57tEB2v+Ff6YTNAicufciSPn8z8pGoVehxT/p3mXRfI
Z+bR4pvKv/9WUD5GeX+n5YuPKXb0bx1W5bBinyCnHv+nvyGPczs+IE6x87gS
/3dq/Iy0S4cD37yUw/O3HS97SnZ5gxKGtf4sZ7qb7lH+zP9e+tDmyynF/tsk
KFrxb/hrc4zyjLE0PavYb+kHxyt+/CmPPzMqXrGPMci55PK67Hs8+NZn5p6X
Ut6JBas0pZ/kZ+Ynhyh//vapw/Wyv5c2fK+7XLG/WVEzqMwuN98VdEv5d/tv
XVuk2G3ZnyW7qi+VOPL+osErFPtr7j+p+GuK8veDzWcuVOyHDli8Uf5cn793
S/+DEGfq3NNJSlyM4z7SNlyxP+X5HDhplqr8/dclfxYr9v8PgS06+w==
       "]]}}},
  Boxed->False,
  ImageSize->200,
  ViewPoint->{1, -2.4, 2}]], "Output",
 CellChangeTimes->{{3.6140984598757963`*^9, 3.614098471213443*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make a movie", "Subsection",
 CellChangeTimes->{{3.6007277365348*^9, 3.6007277409707413`*^9}}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"drawNeedleActuator", "[", 
   RowBox[{
   "\[Theta]x", ",", "\[Theta]y", ",", "Horiz", ",", "ShowScan", ",", 
    "ShowLevel", ",", "OpacityVal", ",", "gearbox3Length", ",", 
    "gearboxLength", ",", "needleDepth", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.28163"}], ",", 
      RowBox[{"-", "2.17383"}], ",", "1.23233"}], "}"}], ",", "200"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{
  3.600727756356797*^9, {3.600727790929799*^9, 3.60072779167237*^9}, {
   3.600727849464449*^9, 3.6007278518793697`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"drawNeedleActuator", "[", 
     RowBox[{
     "\[Theta]", ",", "0", ",", "True", ",", "False", ",", "True", ",", "0", 
      ",", "75", ",", "75", ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2.4"}], ",", "2"}], "}"}], ",", "200"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "2"}], "}"}]}], "]"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"drawNeedleActuator", "[", 
     RowBox[{
     "0", ",", "0", ",", "True", ",", "False", ",", "True", ",", "0", ",", 
      "75", ",", "75", ",", "d", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2.4"}], ",", "2"}], "}"}], ",", "200"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "0", ",", "100", ",", "20"}], "}"}]}], "]"}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"drawNeedleActuator", "[", 
     RowBox[{
     "\[Theta]", ",", "0", ",", "True", ",", "False", ",", "True", ",", "0", 
      ",", "75", ",", "75", ",", "0", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "2.4"}], ",", "2"}], "}"}], ",", "200"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "2", ",", "0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SessionTime", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"px", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2000", ",", "1600"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vp", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2.4"}], ",", "2"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frames", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"drawNeedleActuator", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"-", "\[Theta]"}], ",", "True", ",", "False", ",", "True", 
          ",", "0", ",", "75", ",", "75", ",", "0", ",", "vp", ",", "px"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", "0", ",", 
          RowBox[{"\[Pi]", "/", "6"}], ",", 
          RowBox[{"\[Pi]", "/", 
           RowBox[{"(", 
            RowBox[{"6", "*", "90"}], ")"}]}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"drawNeedleActuator", "[", 
         RowBox[{
          RowBox[{"\[Pi]", "/", "6"}], ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "True", ",", "False", ",",
           "True", ",", "0", ",", "75", ",", "75", ",", "d", ",", "vp", ",", 
          "px"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "0", ",", "100", ",", 
          RowBox[{"100", "/", "90"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"drawNeedleActuator", "[", 
         RowBox[{
          RowBox[{"\[Pi]", "/", "6"}], ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "True", ",", "False", ",",
           "True", ",", "0", ",", "75", ",", "75", ",", "d", ",", "vp", ",", 
          "px"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"d", ",", "100", ",", "0", ",", 
          RowBox[{
           RowBox[{"-", "100"}], "/", "90"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"drawNeedleActuator", "[", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"-", "\[Theta]"}], ",", "True", ",", "False", ",", "True", 
          ",", "0", ",", "75", ",", "75", ",", "0", ",", "vp", ",", "px"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", ",", 
          RowBox[{"\[Pi]", "/", "6"}], ",", "0", ",", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "/", 
           RowBox[{"(", 
            RowBox[{"6", "*", "90"}], ")"}]}]}], "}"}]}], "]"}]}], "}"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SessionTime", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.600727864334909*^9, 3.6007279801352654`*^9}, {
   3.600728217207204*^9, 3.600728217758094*^9}, {3.600728846927693*^9, 
   3.600728847269999*^9}, {3.6007516835940237`*^9, 3.600751940795355*^9}, 
   3.600751998001466*^9, {3.600752101288513*^9, 3.600752104345888*^9}, {
   3.6007559126283293`*^9, 3.60075591724091*^9}}],

Cell[BoxData["29029.559668`10.914385441824786"], "Output",
 CellChangeTimes->{3.600752108116437*^9, 3.6007559178190413`*^9, 
  3.600756328648114*^9}],

Cell[BoxData["29030.323433`10.91439686792168"], "Output",
 CellChangeTimes->{3.600752108116437*^9, 3.6007559178190413`*^9, 
  3.600756329388301*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "frames", "]"}]], "Input",
 CellChangeTimes->{{3.6007521158794603`*^9, 3.6007521207342577`*^9}}],

Cell[BoxData["364"], "Output",
 CellChangeTimes->{3.6007521212030287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SessionTime", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<needleTiltFull2.mov\>\"", ",", "frames"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SessionTime", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6007279872711687`*^9, 3.600728011819611*^9}, {
   3.60072831596313*^9, 3.600728324657284*^9}, {3.600728413193433*^9, 
   3.600728414630497*^9}, {3.600728852627553*^9, 3.600728853163207*^9}, {
   3.6007520022981043`*^9, 3.600752002985128*^9}, {3.60075209081849*^9, 
   3.600752106576902*^9}, 3.600755922530085*^9, {3.6007563897289343`*^9, 
   3.600756390306924*^9}}],

Cell[BoxData["29092.462916`10.915325482895334"], "Output",
 CellChangeTimes->{
  3.60072802413974*^9, 3.600728285121958*^9, {3.600728317590699*^9, 
   3.600728320368927*^9}, 3.600728432065781*^9, 3.600728907746599*^9, 
   3.600752162377049*^9, 3.6007559791861057`*^9, 3.600756108823645*^9, {
   3.600756382845257*^9, 3.600756391546221*^9}}],

Cell[BoxData["\<\"needleTiltFull2.mov\"\>"], "Output",
 CellChangeTimes->{
  3.60072802413974*^9, 3.600728285121958*^9, {3.600728317590699*^9, 
   3.600728320368927*^9}, 3.600728432065781*^9, 3.600728907746599*^9, 
   3.600752162377049*^9, 3.6007559791861057`*^9, 3.600756108823645*^9, 
   3.600756382845257*^9, 3.600757164579818*^9}],

Cell[BoxData["29865.514552`10.92671499508933"], "Output",
 CellChangeTimes->{
  3.60072802413974*^9, 3.600728285121958*^9, {3.600728317590699*^9, 
   3.600728320368927*^9}, 3.600728432065781*^9, 3.600728907746599*^9, 
   3.600752162377049*^9, 3.6007559791861057`*^9, 3.600756108823645*^9, 
   3.600756382845257*^9, 3.600757164583235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Directory", "[", "]"}]], "Input",
 CellChangeTimes->{{3.600728066934382*^9, 3.600728068855301*^9}}],

Cell[BoxData["\<\"/Users/ab55\"\>"], "Output",
 CellChangeTimes->{3.6007280692697477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SessionTime", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{"\"\<needleTiltFull.mpeg\>\"", ",", "frames"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SessionTime", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.6007279872711687`*^9, 3.600728011819611*^9}, {
  3.60072831596313*^9, 3.600728324657284*^9}, {3.600728413193433*^9, 
  3.600728414630497*^9}, {3.600728852627553*^9, 3.600728853163207*^9}, {
  3.6007520022981043`*^9, 3.600752002985128*^9}, {3.60075209081849*^9, 
  3.600752106576902*^9}, {3.600755790132308*^9, 3.600755792772093*^9}, {
  3.600756081480219*^9, 3.600756103989305*^9}}],

Cell[BoxData["28805.236742`10.911016442415292"], "Output",
 CellChangeTimes->{
  3.600755793699257*^9, {3.600756084714911*^9, 3.600756104342222*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "infer"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot infer format of file \
\[NoBreak]\\!\\(\\\"needleTiltFull.mpeg\\\"\\)\[NoBreak]. \\!\\(\\*ButtonBox[\
\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Export/infer\\\", ButtonNote -> \
\\\"Export::infer\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.600756084723659*^9, 3.6007561043461857`*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{
  3.600755793699257*^9, {3.600756084714911*^9, 3.600756104348694*^9}}],

Cell[BoxData["28805.253555`10.911016695903601"], "Output",
 CellChangeTimes->{
  3.600755793699257*^9, {3.600756084714911*^9, 3.600756104351461*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Minimium separation between components in Walsh MRI design", \
"Subsection",
 CellChangeTimes->{{3.599845446113805*^9, 3.599845463129438*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"8", " ", 
     SuperscriptBox["Msat", "2"], " ", "\[Pi]", " ", 
     SuperscriptBox["r1", "3"], " ", 
     SuperscriptBox["r2", "3"], " ", "\[Mu]0"}], 
    RowBox[{"3", " ", 
     SuperscriptBox["y", "4"]}]]}], " ", 
  RowBox[{"(*", 
   RowBox[{"Dipole", "-", 
    RowBox[{
    "dipole", " ", "maximum", " ", "force", " ", "for", " ", "distance", " ", 
     "y"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["4", "3"], "\[Pi]", " ", 
  SuperscriptBox["r1", "3"], "Msat", " ", "grad", "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"assume", " ", "r1"}], " ", "\[LessEqual]", " ", "r2"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "so", " ", "this", " ", "is", " ", "the", " ", "minimum", " ", 
       "force"}], "..."}], " ", "only", " ", "depends", " ", "on", " ", 
     "larger", " ", "one", " ", "anyway"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.600127865487081*^9, 3.600127927608094*^9}, {
  3.600128109053596*^9, 3.6001281236704187`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"8", " ", 
      SuperscriptBox["Msat", "2"], " ", "\[Pi]", " ", 
      SuperscriptBox["r1", "3"], " ", 
      SuperscriptBox["r2", "3"], " ", "\[Mu]0"}], 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "4"]}]], "\[Equal]", 
    RowBox[{
     RowBox[{"percentage", "/", "100"}], 
     FractionBox["4", "3"], "\[Pi]", " ", 
     SuperscriptBox["r1", "3"], "Msat", " ", "grad"}]}], ",", 
   RowBox[{"{", "y", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600127935725162*^9, 3.6001280110039177`*^9}, {
  3.6001280528196173`*^9, 3.600128061798718*^9}, {3.600128098889522*^9, 
  3.600128104102598*^9}, {3.600128300604336*^9, 3.600128349834511*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["2", 
         RowBox[{"3", "/", "4"}]], " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["Msat", 
         RowBox[{"1", "/", "4"}]], " ", 
        SuperscriptBox["r2", 
         RowBox[{"3", "/", "4"}]], " ", 
        SuperscriptBox["\[Mu]0", 
         RowBox[{"1", "/", "4"}]]}], 
       RowBox[{
        SuperscriptBox["grad", 
         RowBox[{"1", "/", "4"}]], " ", 
        SuperscriptBox["percentage", 
         RowBox[{"1", "/", "4"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SuperscriptBox["2", 
         RowBox[{"3", "/", "4"}]], " ", 
        SqrtBox["5"], " ", 
        SuperscriptBox["Msat", 
         RowBox[{"1", "/", "4"}]], " ", 
        SuperscriptBox["r2", 
         RowBox[{"3", "/", "4"}]], " ", 
        SuperscriptBox["\[Mu]0", 
         RowBox[{"1", "/", "4"}]]}], 
       RowBox[{
        SuperscriptBox["grad", 
         RowBox[{"1", "/", "4"}]], " ", 
        SuperscriptBox["percentage", 
         RowBox[{"1", "/", "4"}]]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     FractionBox[
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["2", 
        RowBox[{"3", "/", "4"}]], " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["Msat", 
        RowBox[{"1", "/", "4"}]], " ", 
       SuperscriptBox["r2", 
        RowBox[{"3", "/", "4"}]], " ", 
       SuperscriptBox["\[Mu]0", 
        RowBox[{"1", "/", "4"}]]}], 
      RowBox[{
       SuperscriptBox["grad", 
        RowBox[{"1", "/", "4"}]], " ", 
       SuperscriptBox["percentage", 
        RowBox[{"1", "/", "4"}]]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["2", 
        RowBox[{"3", "/", "4"}]], " ", 
       SqrtBox["5"], " ", 
       SuperscriptBox["Msat", 
        RowBox[{"1", "/", "4"}]], " ", 
       SuperscriptBox["r2", 
        RowBox[{"3", "/", "4"}]], " ", 
       SuperscriptBox["\[Mu]0", 
        RowBox[{"1", "/", "4"}]]}], 
      RowBox[{
       SuperscriptBox["grad", 
        RowBox[{"1", "/", "4"}]], " ", 
       SuperscriptBox["percentage", 
        RowBox[{"1", "/", "4"}]]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.600127972147984*^9, {3.60012805564404*^9, 3.6001280625169897`*^9}, {
   3.60012809979191*^9, 3.6001281045082006`*^9}, {3.6001283011104107`*^9, 
   3.600128350275166*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"8", " ", 
       SuperscriptBox["Msat", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox["r1", "3"], " ", 
       SuperscriptBox["r2", "3"], " ", "\[Mu]0"}], 
      RowBox[{"3", " ", 
       SuperscriptBox["y", "4"]}]], "\[Equal]", 
     RowBox[{
      RowBox[{"percentage", "/", "100"}], 
      FractionBox["4", "3"], "\[Pi]", " ", 
      SuperscriptBox["r1", "3"], "Msat", " ", "grad"}]}], " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]0", "\[Rule]", " ", 
       RowBox[{"4", "\[Pi]", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "7"}]]}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Msat", "\[Rule]", 
       RowBox[{"1.36", " ", 
        SuperscriptBox["10", "6"]}]}], ",", 
      RowBox[{"r1", "\[Rule]", ".005"}], ",", 
      RowBox[{"r2", "\[Rule]", ".006"}], ",", 
      RowBox[{"percentage", "\[Rule]", "10"}], ",", 
      RowBox[{"grad", "\[Rule]", "0.04"}]}], "}"}]}], ",", 
   RowBox[{"{", "y", "}"}], ",", "Reals"}], "]"}]], "Input",
 CellChangeTimes->{{3.600128143410644*^9, 3.600128231623172*^9}, {
  3.600128273598226*^9, 3.600128287606298*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", "0.11655828049811334`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", "\[Rule]", "0.11655828049811334`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6001281507962093`*^9, 3.600128232125773*^9}, {
  3.60012827577954*^9, 3.600128288172969*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5.40", "*", 
  SuperscriptBox[".006", 
   FractionBox["3", "4"]]}]], "Input",
 CellChangeTimes->{{3.5998453162318573`*^9, 3.599845338921081*^9}}],

Cell[BoxData["0.11641453227603929`"], "Output",
 CellChangeTimes->{{3.599845333893042*^9, 3.599845339468933*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]0", "=", 
   RowBox[{"4", "\[Pi]", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "7"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Msat", "=", "  ", 
   RowBox[{"1.36", " ", 
    SuperscriptBox["10", "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"2", " ", 
         FractionBox["100", "percentage"], " ", "Msat", " ", 
         SuperscriptBox["r1", "3"], " ", "\[Mu]0"}], "0.04"], ")"}], 
      FractionBox["1", "4"]], "\[Equal]", 
     RowBox[{
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", "2", ")"}]}], 
      RowBox[{"(", 
       RowBox[{"0.050", "+", "d", "-", "0.018"}], ")"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"percentage", "\[Rule]", "10"}], ",", 
      RowBox[{"r1", "\[Rule]", ".006"}]}], "}"}]}], ",", 
   RowBox[{"{", "d", "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.59984536880933*^9, 3.599845441806808*^9}, {
  3.599911442188632*^9, 3.599911474517825*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"d", "\[Rule]", "0.050419150543659655`"}], "}"}], "}"}]], "Output",\

 CellChangeTimes->{{3.5998453894986353`*^9, 3.599845412778192*^9}, {
  3.599911442797977*^9, 3.599911474948669*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", 
      FractionBox["100", "percentage"], " ", "Msat", " ", 
      SuperscriptBox["r1", "3"], " ", "\[Mu]0"}], "0.04"], ")"}], 
   FractionBox["1", "4"]], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"percentage", "\[Rule]", "10"}], ",", 
    RowBox[{"r1", "\[Rule]", ".003"}], ",", 
    RowBox[{"\[Mu]0", "\[Rule]", " ", 
     RowBox[{"4", "\[Pi]", " ", 
      SuperscriptBox["10", 
       RowBox[{"-", "7"}]]}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"Msat", "->", "  ", 
     RowBox[{"1.36", " ", 
      SuperscriptBox["10", "6"]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.599911320536531*^9, 3.599911416541453*^9}, {
  3.599934201572727*^9, 3.599934202060918*^9}, {3.599935160486927*^9, 
  3.599935160770987*^9}}],

Cell[BoxData["0.06930596824041964`"], "Output",
 CellChangeTimes->{
  3.599911346149707*^9, {3.5999113786916943`*^9, 3.599911417047908*^9}, {
   3.5999341879399557`*^9, 3.599934202950683*^9}, 3.599935161224791*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Force", " ", "=", " ", 
   RowBox[{
    SuperscriptBox["r", "3"], "*", "d"}]}], ",", " "}]], "Input",
 CellChangeTimes->{{3.599934055724757*^9, 3.599934088939197*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", 
           FractionBox["100", "percentage"], " ", "Msat", " ", 
           SuperscriptBox["r1", "3"], " ", "\[Mu]0"}], "0.04"], ")"}], 
        FractionBox["1", "4"]], ",", 
       RowBox[{"0.11655828049811334`", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["0.006", "r1"], ")"}], "3"]}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"percentage", "\[Rule]", "10"}], ",", 
       RowBox[{"\[Mu]0", "\[Rule]", " ", 
        RowBox[{"4", "\[Pi]", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"Msat", "->", "  ", 
        RowBox[{"1.36", " ", 
         SuperscriptBox["10", "6"]}]}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r1", ",", "0.001", ",", "0.01"}], "}"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0.01"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.3"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<sphere radius\>\"", ",", 
       "\"\<10% Min distance between spheres\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.59993392674212*^9, 3.599934033289558*^9}, {
  3.5999341208159227`*^9, 3.599934175862795*^9}, {3.599934215039091*^9, 
  3.599934228869589*^9}, {3.59993426299755*^9, 3.599934364381322*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXsw1AkAB3DWbFPnqjGeXeXy2DqPVLQMpW/2zC062iipVGiFrV3v91u/
S6ijB9LIChXR5m1Z1mP9ik5sl65dcnZjTt1YndkKmXJ3f3zmYxIU7h1M0dDQ
8PzP/6/P4VG9gliQKnb70U35qKiSyJRcFkofiN402fKxu8eoLjaRBevL/F92
/MjH8YU+79sFLFysEBgbs/m4F2xYPitm4TucmJbd5WMvo8cpb+MhTDoFRJ3R
KwdnWSdiYPQQqOc6iz2KykFyW8YYTB8EOqgmHIvu4PE/hupcji9GTm0a9m2o
RJ6phF/sdwzmhifHJ4rvovjLfVLl4A87BnvuWMh9qOKqbYqPnEaHUJC5yKoB
MbJYSPk+EFGRJpeo62vRZmtlf6YxCJwKr8NjM3W4wvl8LXQfGyd/SB6LFgjw
eEnlKH0UDGdVgK3/tnqY+4VnBe4PgZ/YPHA7tQHTa/X1j7SGQq4YNn0rbQDz
5lG2ypyDxrIEbnthI6Tz2448ajyH1T25AoQ2QVSxqeAFjYvkTz7MNZbN+M2U
f95EyMMx0fN29lIzuvdMUnJNInA9dqGL3deCQZ3MmGZ5BN6PW2g3JLfi7Mi7
1ug7kdgcX6cRxWhDs5BtPH0iCnPsIePlpTYU5tzzfUeLhnaCpoFULMSTfnvV
/tlolNkqRozS2lFrJa92vxuDF5R0G4VNB0ySGPQZbiy0yCTXZ7MdcPvQ9Rfd
Ig68LTc2XC0VoVeW/ekPRRx0oL85idmJZ1VGr76tjof7+JeGwJVO5JaKXqsD
ExB6cPxrZU0X5Mm0pnCrRAz076sRB4iRRE7MOM8nQsOFc8pYtxtDTtUuXTVJ
KOdNMX4WdqOh2PH888hkuD/2kevTe8DcMiEqsk5BBYPmmZPdgx26I2GCqRSc
L7solb3qQY0q++3xB6mo3Xk8n2fTi1G192XhmTT4FGqbtaT14ppyWqPWOh2c
oxEnd73shebypVteb9PhtvreYCytD4Hdzu6mrAykxnebtUT3QTv21sOZpgzo
XVmQGQ304cr+jCqqTiaUi/kHOAYSyNMHteZiM7GUbbIk5Ujg+cHx2oosEx+j
Xl906JLgVppdUxg9Cy++sk8L1vSjPqVgb1lJFlpdLTda+veDXxDnZ7WQBftB
XsmT6n60yS9UKr0vYHBj0Uq2uh83iz74BrVeAMWNpnZ2JeEdNle6R5fA+6K1
qbb5JPItMuzG9AjourwMySggMfRO52mCAYHKbOWB4askfuLQF1o2EMgrf7oS
doPEnnMph3ZuIUAszhvcKSFhzv1mFW07geWr1lrrqkh8itgavo5JoPBXquyN
kITdLiH1oRuB2SnB7I4OEhHz7qUHPAgIvBo/p4hI/B3JHbzkSSBR+ynFUExi
MqrZTOswgY91ByUeEhIDMQzZQgCBlkzmqoZnJKj0UV5REIHQLGX9l2ESjI/B
VDqbgOY2xWEPKYnO2BzbqBAC/strc6Z+J1EfJ708yyXA37qvQl9GQmUfZJYX
TsD69nqjIDkJywV1u0UkgXy1R7ZgjERVvOHM2RgCt8c1vZkTJJQONanUOAKT
HWkPr/9JwnjRSa8qngBNP5SimCThLxx6wEgkoC4Qs6yVJEoSTrkokwjcH826
mfCGxL/EXFg8
     "]], LineBox[CompressedData["
1:eJwdhwtQ03UAx4drnpceQUCPu+Lk1bkB1wP/dDD0K2sHTAJtFKLQygnVqDUG
bMAYj40fpyienB3o/7+dCA4COWQ4VGiSvNTQqRlcAafFBONxQxqbLI/rjPrc
fe5znyCpQpyzgcViUev+10beG37VK0pE/c8YenqzA2cz87HbM3rbMXsf9TWt
6QthBSjLY9JDj93DzZHopV2OAtTHiyooLxs6wifbRC2F+M5ztyuZN4ogjYCa
k6tw7QWt3lt3A0nu/j8prho9m9y/++wfweDE4dVfp9XI1AlcqeVDuGN67bct
bUVwB61W7/lhAEeN1geug8XwKeofch3/EZOlYRZFeAk6hwMuz9ywQnP94dwO
ZwmaTqdZd0r6YItti+9v12Ab/9b2/k+voPtUzDf3laXg0Wljb8ovIXHrQ2tD
hBYjJnGi844Fb/vdk12Y0YJpq6k1SS6ifenw/IHzZRhcbHgc4jFj3CWu7T1U
DvfUmsu7rgsn7bOsjogKPGtZGFuJ64TX2hEmdb4CFwbStj0SduDgtR2i4L2V
yP4wQmfRtWOziumcs1RCkdws2T78PY7vqjRxfHUocc9zSxNaMVkxyn6i0kHw
POPBss2EFHfMyecTOvBzrt9ma86BKY+yyCg99HZJZOq+Zpi1dXFnaD1yW1wB
L1NNaKxTZ4R79GhpHNq3h38WVyarztnFVTjrVCYsms/gdIM7XXp5/bsvqgQL
RohlT4x8P4Kql/YP7v3MgBPcyqgpf4JwTvDT7gwDbAu+t4pfIRhWipIDxAYk
5FKeS68TPO76IPOR0AD+19qP3tlK4PQ4nPU8A0LlL24MiyRgJbXypasMVvPe
UngnEvzV0yytOcEg6t1eTmcSQazOgsgaBnlOkTF5N4HQXxY6pmewqJSPHkkh
KHBWe4WpGfyR3xPC/phgp93lms5i8FOhYMLzOYFsJGVjH48Bhxr/tkFKsPxJ
1j/aUAaCpzkcKpuAYxYtCwIZXFXVvJf/5frrjAPjvgzM6p9rHXKCtV9i2D7P
aCxFS0OOKQjqhWnWmRUaPI+rj6skiLZs+arPQcNU9OrcF4UEFC/RmDtNw/5+
exlHTbB5OS44YYpG4N+x/qYigkPcq3TIOI2sXtt5QQlBUxBrA/suDbpYEm/X
EJAy4YHZmzT+BRzfmgA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{
    FormBox["\"sphere radius\"", TraditionalForm], 
    FormBox["\"10% Min distance between spheres\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{0, 0.01}, {0, 0.3}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.599934162434021*^9, 3.599934176191442*^9}, 
   3.5999342293865137`*^9, {3.59993426797748*^9, 3.599934275099852*^9}, {
   3.599934307712449*^9, 3.599934365213902*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"this", " ", "matches", " ", 
    RowBox[{"Walsh", "'"}], "s", " ", "work", " ", "on", " ", "page", " ", 
    "113.", "  ", "I", " ", "think", " ", "it", " ", "is", " ", "wrong"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Theta]y", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"\[Theta]x", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.599917140574338*^9, 3.599917144940256*^9}, {
  3.599917196359572*^9, 3.599917225763441*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", "\[Theta]y", "]"}], 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]},
     {"0", 
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], 
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.599917145279029*^9, 3.599917208873811*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.599917251901106*^9, 3.599917279048629*^9}, 
   3.599917312449645*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xyzNorm", " ", "=", " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"x", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], " ", 
         RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"z", "=", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"PointSize", "\[Rule]", "Large"}], ",", 
          "\[IndentingNewLine]", "Blue", ",", "\[IndentingNewLine]", 
          RowBox[{"Point", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", "y", ",", "z"}], "}"}], "/", "xyzNorm"}], 
           "]"}], ",", "\[IndentingNewLine]", "Red", ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Walsh", "'"}], "s", " ", "method"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Point", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
            RowBox[{"RotationMatrix", "[", 
             RowBox[{"\[Theta]y", ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
            RowBox[{"RotationMatrix", "[", 
             RowBox[{"\[Theta]x", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}], "]"}], 
          ",", "\[IndentingNewLine]", "Green", ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Point", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ".", 
            RowBox[{"RotationMatrix", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
                 
                 FractionBox[
                  RowBox[{"-", "y"}], "xyzNorm"]}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
            RowBox[{"RotationMatrix", "[", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"z", ",", "x"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ParametricPlot3D", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], ",", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}], " ", ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], " ", 
              RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], ",", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], "}"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{",", 
          RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]x", ",", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]y", ",", "0"}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.599917284483488*^9, 3.5999172990845833`*^9}, {
   3.599917408662036*^9, 3.5999175035924263`*^9}, {3.599917564025523*^9, 
   3.59991785144025*^9}, {3.599917896051195*^9, 3.599917934741588*^9}, {
   3.599917969365366*^9, 3.599917980119709*^9}, {3.599918022725123*^9, 
   3.599918091899*^9}, {3.5999256030179987`*^9, 3.5999256249196043`*^9}, {
   3.5999259436653223`*^9, 3.5999259603011923`*^9}, {3.599927742432501*^9, 
   3.599927778041059*^9}, 3.5999278277163277`*^9, 3.599927965692606*^9, {
   3.599928098568215*^9, 3.5999281207485657`*^9}, {3.599962838009767*^9, 
   3.599963011998608*^9}, {3.5999630463824177`*^9, 3.5999631875434*^9}, {
   3.59996322003055*^9, 3.5999633438484497`*^9}, 3.599963529951952*^9, {
   3.59996371297234*^9, 3.599963770419908*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Theta]x$$ = 
    1.401150323501048, $CellContext`\[Theta]y$$ = -1.1184069846779665`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Theta]x$$], 0}, Rational[-1, 2] Pi, Rational[1, 2] 
      Pi}, {{
       Hold[$CellContext`\[Theta]y$$], 0}, Rational[-1, 2] Pi, Rational[1, 2] 
      Pi}}, Typeset`size$$ = {360., {128., 132.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Theta]x$184972$$ = 
    0, $CellContext`\[Theta]y$184973$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Theta]x$$ = 0, $CellContext`\[Theta]y$$ = 
        0}, "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]x$$, $CellContext`\[Theta]x$184972$$, 0], 
        Hold[$CellContext`\[Theta]y$$, $CellContext`\[Theta]y$184973$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`xyzNorm$ = (Cos[$CellContext`\[Theta]x$$]^2 + 
           Cos[$CellContext`\[Theta]y$$]^2 Sin[$CellContext`\[Theta]x$$]^2)^
          Rational[1, 2], $CellContext`x$ = (-Cos[$CellContext`\[Theta]x$$]) 
          Sin[$CellContext`\[Theta]y$$], $CellContext`y$ = 
         Cos[$CellContext`\[Theta]y$$] 
          Sin[$CellContext`\[Theta]x$$], $CellContext`z$ = 
         Cos[$CellContext`\[Theta]x$$] Cos[$CellContext`\[Theta]y$$]}, 
        Show[
         Graphics3D[{PointSize -> Large, Blue, 
           
           Point[{$CellContext`x$, $CellContext`y$, \
$CellContext`z$}/$CellContext`xyzNorm$], Red, 
           Point[
            Dot[{0, 0, 1}, 
             RotationMatrix[$CellContext`\[Theta]y$$, {0, 1, 0}], 
             RotationMatrix[$CellContext`\[Theta]x$$, {1, 0, 0}]]], Green, 
           Point[
            Dot[{0, 0, 1}, 
             RotationMatrix[-ArcTan[
                Sqrt[
                1 - ($CellContext`y$/$CellContext`xyzNorm$)^2], \
(-$CellContext`y$)/$CellContext`xyzNorm$], {1, 0, 0}], 
             
             RotationMatrix[-ArcTan[$CellContext`z$, $CellContext`x$], {0, 1, 
              0}]]]}], 
         ParametricPlot3D[{{
            Cos[$CellContext`\[Theta]], Sin[$CellContext`\[Theta]] 
            Sin[$CellContext`\[Theta]x$$], Cos[$CellContext`\[Theta]x$$] 
            Sin[$CellContext`\[Theta]]}, {(-Sin[$CellContext`\[Theta]]) 
            Sin[$CellContext`\[Theta]y$$], 
            Cos[$CellContext`\[Theta]], Cos[$CellContext`\[Theta]y$$] 
            Sin[$CellContext`\[Theta]]}}, {$CellContext`\[Theta], 0, Pi}]]], 
      "Specifications" :> {{{$CellContext`\[Theta]x$$, 0}, Rational[-1, 2] Pi,
          Rational[1, 2] Pi}, {{$CellContext`\[Theta]y$$, 0}, Rational[-1, 2] 
         Pi, Rational[1, 2] Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{403., {184., 190.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.599963092091382*^9, {3.599963123688778*^9, 3.599963181717972*^9}, {
   3.599963221401719*^9, 3.599963284235607*^9}, {3.599963318539894*^9, 
   3.599963344475563*^9}, 3.599963531418694*^9, {3.599963759362111*^9, 
   3.5999637717965403`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Intersection of two planes to find the true intersection point in our cradle.\
\
\>", "Subsection",
 CellChangeTimes->{{3.5999275722016497`*^9, 3.5999275764451027`*^9}, 
   3.599927853755878*^9, {3.59992815509807*^9, 3.5999281639731483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]x", ",", "\[Theta]y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]y", "]"}], ",", "0", ",", 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], ",", 
     RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"n1", "\[Cross]", "n2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vecNorm", "[", 
   RowBox[{"vec_", "?", "VectorQ"}], "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"vec", ".", "vec"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"n1", "\[Cross]", "n2"}], ",", "vecNorm"}], "]"}], ",", 
   "Reals"}], "]"}]}], "Input",
 CellChangeTimes->{{3.599927580122571*^9, 3.599927653693152*^9}, {
  3.599927810891457*^9, 3.5999278199367437`*^9}, {3.599927925264942*^9, 
  3.599927943173719*^9}, {3.599928725756988*^9, 3.599928762121921*^9}, {
  3.599928819075491*^9, 3.5999288199603653`*^9}, {3.599928925328373*^9, 
  3.599928963794368*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]x", "]"}]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.599927726420884*^9, 3.599927820379674*^9, {3.5999279283149157`*^9, 
   3.599927943635247*^9}, {3.59992873571756*^9, 3.5999287625774393`*^9}, 
   3.599928820976746*^9, 3.599928964623714*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "}"}]], "Output",\

 CellChangeTimes->{
  3.599927726420884*^9, 3.599927820379674*^9, {3.5999279283149157`*^9, 
   3.599927943635247*^9}, {3.59992873571756*^9, 3.5999287625774393`*^9}, 
   3.599928820976746*^9, 3.599928965464799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]x", ",", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]y", ",", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "2"}], ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.599927668346883*^9, 3.599927707101259*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nHu8zlX2x08X1ZguoyITNajklhqNkjmdxSQJqTRMNWqKlCTdUSGiKLei
i0olXebIpSaSqL65i0PkzsO4nVx6HHIJY8qvn+96r6/vmmf3z/M6n7b9rP35
ru/aa6/12U/ltg+0bH9sXl5efqm8vON+/Zwz5MTyhyofjPi8bsoDl+y6udaV
z55S84oVz+8zfPaon2osWdix4OoBLW6dsOdHwwsrff3CtCpPFJx0+uafzv08
a3jmlLXdms95uiCep9jwrxZPbFl9YD8dnzF8fc3h+VGVAYoXGd7hpsKOv7QZ
VJCn/4GXav5uYYtzBzNe/HidX/z8ao/kticr3n5dr/j1Kj/i+dG/xfPJ3/DK
eP7ms/0xfXqec+togWfwK4+fUe2uzyYLPIPf99kTn9ebPk3gGbywe/m9cxrN
FngGf3rpJ/OfGP2NwDP4ou8eWTVt5nyBZ/Aa3SY+NvTJIsaLHw/Pfn54zm1P
Vrz98OzXC8+eH3j2fMIz/LnnZTjz8zefBfeVahKVn2s8g7/5xrGd829YbDyD
3/lk3RNWfbrMeAZfcdHHp8w8fpXxDH7MhPmfPnP6GuMZfMBtvbd+PXON8ezH
w7OfH55z25MVbz88+/XCs+cHnj2f8AxP6fd9n+Hu+RqOPfzNZ/NlT1xXccNK
4xm88oAPeo+o82/jGbzMxjPGLDq4wXgG/2XR1OOHPrLJeAbf/9Lt5d/Zs8l4
9uPh2c8Pz7ntyYq3H579euHZ8wPPns903Ci2eJWOG8X2fqXjRrH3B8OxPx03
iqNSQya1eHjIJhc3iqN3Dk8q6Pn89y5uFEf93hy4tfZdW13cKI7q7rns5RnH
b3NxIxmfjhvJ/Om44e3Jirc/HTeS9abjRsJPOm4kfKb9OeP2i32GE9/S/pxx
73vWcOc/hqf5zBj+ZNOLBy46uM35cyZaVbnOtx9VyDp/zkTlPpgy+YulWefP
yfi0Pyfzp/3Z22P/zuxP+3PGxZ994vlJ+3PCZ5rnItuv0zwX2f6S5rnIxcOs
4by/aZ6LvL8ZnuanyPCTb7qtze0dSxzPRVHPGy76zYg6Ox3Pyfg0z8n8aZ69
Pcn3Y3+a52S9aZ4TftI8J3zCM+sgX4JncPZ3eAZP70dZw4mf8Ayeft8zhjv/
NBw+83L+t8t49uPh2c8Pz7ntSd4b7Idnv1549vzAs+fT+bME/FkC/iwBf5aA
P0vAnyXgzxLwZwn4swT8WQL+LAF/loA/S8CfJeDP4v0ZuwLxWQLxWQLxWQLx
WQLxWQLxWQLxWQLxWQLxWQLxWQLxWQLxWQLxWQLxWXx85vsD+YYE8g0J5BsS
yDckkG9IIN+QQL4hgXzDvy/i53f5hgTyDQnkGxLINySQb0jufCMrgfxZAvmz
BPJnCeTPEsifJZA/SyB/lkD+LIH82b9fktsey58lkD9LIH+WQP4sPn9mvsB5
UALnQQmcByVwHpTAeVAC50EJnAclcB6UwHlQAudB/z6Kt9+dByVwHpTAeVD8
eZB/F6hvSKC+IYH6hgTqGxKob0igviGB+oYE6hsSqG9IoL4hgfqGf3/Fr9fV
NyRQ3xBf3+D/B+p1EqjXSaBeJ4F6nQTqdRKo10mgXieBep0E6nUSqNdJoF4n
gXqdf9/F8+PqdcbnBy1eq3Zv6/0RnxWmlh78zNjn5O6iL669OtpjeKtndsz5
uWQUuHhc/xY/D38znx8fwBkvgfEex04J2C8B+/9nfj8P8+OPT29+f3rD/9xq
/sn/B+ffB8ZLYLz5VWB+j4vH3fcaftkDN1Sqk38g4nPl/BnfNp52r+jfEsAZ
L4HxhmMn/27VGV+WvbBUM77X/r/Dbb3g/M2/C4yPAuM9HgXmEf+9C9884dOp
Pyd16SHX3HD86tofyLIxpVp2X7XbvndltuTFH/Z0KQBn/N/fbbtw4cRPZfIj
v1n3eMedNn5e7fHlzny3VwE449c9W6XrwK6RzD4ybpuNX7hzbvGU6s8UgDO+
9OvftO513ExZeuR7N9r4AWd0fP6dzf0LwBn/+m27jx/w/ByZeWTcKhs/vW7F
k67/14ACcMaXO/O8Ic0vmSfTjuDf2Pjun9zzcLXHBhWAM/7JLYeyb6xhfynM
932KBfF4e+5P6jyM9/V2xvv558V2ircfnPFl1f4VMQ82/nnlB5zxryk/38Q8
2/gi5R/c8lPlf2r8HG38HH2+4Ixfpc93eewnNn6p+g84429W//k29kMb/+ak
QcPvfuKeAnDG91f/xG/Z91ZW3bWi68hPzW/B9z9Y8dCT1WeZf4J/0fSZRsPG
LTQ/BO/124pTSvdZYv4G3qLncdUf2rPc/Aq8ymmfdf1T/1XmP+AtO1SpuKDa
GvMTX//nufvxPF/wyjo/zxG8udrD8wLvqfbzXMAn63rhH3yv8gPP4IuVT3gm
j1i/e8KQTWdExjN4k1fbLtnaYaHxDD4mGnfL3NLLjWfwyz9+4Z7MbzLGM3jD
XmOqPdVjvfEMvmBtj2Ma3rzReAbvUf2SLcP6bDKewTm/wLMfD8/gRTo/PIM3
UHvgGbyu2g/P4IW6XngGv0r5gWfw5cpnOg4XR59H486/uPsMScfb4ujcWjVn
HPrdEknH1eKo/gVtLl3y7hpJx8/iqNn2mdfc8dIGScfJ4qjB55PmvjJus6Tj
YXFU4Z5a927P2yLpuFccXbm1cs+G3bZKOo4l9f90HEvGp+NVcXS2zp+OS8WR
qD3p+FMcNVX703GmOLpM15uOJ8VRReUnHTeKownKZ9qfM1GnA70Lmz062/lz
JtrdfUq76QeWOX/+NS/+4T+3nrr6386fM9HqB4sfvfAvm50/Z6IJFWZWuHLp
FufPmeimvF1tmjy93flzJrqzTrtOi+tknT8n9f+0P2eiO3R82p8zUUudP+3P
megTtSftz5lopdqf9udMNF3Xm/bnTLRT+Un7cyZqr3ymeS6Kmrc6vLJ687mO
56JoRIN+fbrPXuF4Looueem3rSb+eYPjuSi66vL3uqz/odjxXBRV/ai0HJ67
zfH8K17S/eG/f5R1PBdFU1ruL3N3nxLHc1L/T/OcjE/zXBRdoPOnef4VV3vS
PBdFDdX+NM9F0UW63jTPRdFw5SfNc1F0tfIJz5zDuj5bv12lbMIzeO2Xz/r5
2HYrjWfw929fsrrauIRn8LNmzmtdp/v3xjN409b9j5328HbjGfzjG1YM/FOn
HcYzeOcPTuzfpPlO4zkv9d8u49mPh2c/PzyDN1F74Bm8rNoPz+CjdL3wDF5T
+YFn8AeUT+fPEvBnCfizBPxZAv4sAX+WgD9LwJ8l4M8S8GcJ+LME/FkC/iwB
f5aAP4v3Z+oEgfgsgfgsgfgsgfgsgfgsgfgsgfgsgfgsgfgsgfgsgfgsgfgs
gfgsgfgsPj5TdwnkGxLINySQb0gg35BAviGBfEMC+YYE8g0J5BsSyDckkG9I
IN+QQL4hgXxDcucbWQnkzxLInyWQP0sgf5ZA/iyB/FkC+bME8mcJ5M8SyJ8l
kD9LIH+WQP4sgfxZfP5MXTBwHpTAeVAC50EJnAclcB6UwHlQAudBCZwHJXAe
lMB5UALnQQmcByVwHpTAeVD8eZA6q68Xgfu6ELiv/4D7Og+4r+eA+7oNuK/P
+Pq/q7eIr7eA+7oKuK+fWJ/K1UnAfT0E3Nc9wH19g3rd+1oPcXU5oS7n6m9C
/c3V2YQ6m6unCfU0VzcT6k6uPibdXV3L1/9dHUyog7m6ls3v6ldC/crVqYQ6
latHCfUoV3cS6k7wyeeX2eldb3/rPfPbcrU3XjLywZ+ibpvaPPvQWf8yv739
qy/H9t30UzS+ZHTfOXUmmd9St85vNKjSN40mmd+WrHv0veu+2R9tuOXznefI
BPNb6rRXjd+/c/bMMea3PQ/XHFHuowPRcXPatXj7yRHmt7O1DnZ1hbzRR/O5
QO1fsK/36v/Pl+AT+0//ff3BFWWG+S32TxwaXXZo2VTzW+x/p/mVdepP/5f5
Lfb/4bJJpwx+bpT54aAKNZa/evfuaOWeISs6bplovNl73yB73R8LZxhv5+Rv
WHBH8z1RyyUX3ji+8Tzjrb32Jc5esbvtvlcWGm/j2gyfVb3O3qja5HuPafK3
RcbbvuwjDU99f2/06H+XPX7xXYuMtyt7XP/l7rP2Rf/+qP3KW6781nh7RuuE
F7v3faDaX7Xv/VVLuq4y3paq/V+NePjqmvnLjbeKav/+vad/2PnO74y3u9T+
vatO7TDy4SLjbazan5lSUntMlZn2vmM/fUD4HF7njZItb+2Izm2U6XZ0PlDt
ppbff9y3JNp7bcUa15y2wPjks9M3Owa1KrPU+Dy/6fqOlavtiu4ctrRrp4Yr
jc9Oq6d+X+qNXdHY1pecf/wpa4zPiR1fbbv9lB+jTaVHndymR8b4/O9/Hl63
sNeP0YYN1a8+Z1zG+Gyk9cBBbp96Ve2f3Gnsd/dN22h8Xqj2l/zjpMvHrV1v
fH6m9l9YrUbr+zZkjE/s/1u1laOfaLbC+MR++tfwif1Nvmr73jl9Zlv8xP5h
y+aUHL1Pxe/F91GpE86vcHR+G/v/lqjrIyvWjO71nfEcv6dboxvLXPvE5J9X
Gc98Lv/v5/Xz8tYbz60//uq0mSduj24ec1KDry/daDx/v+ixEwft2B7t+t3D
9Tu8tMl47vJjrcOtlvwQNa47/7LJF2w2nk/QeuABl3eVVfu7ZJ6tfc7yLcbz
+2r/wUvrXTJjZrHxXFftrzH4ln+12r/ReJ6l9qPHgOdWav+wJV+fvunjFcYz
9g87qfSogc99azxjf8Hdc0YdnXfFfrsuGl7013eOPq/Fz3d9tP+Pc06qNTA5
r8XPcUO0Zmutel1GrDOeY3/bEL1eZZZ8X2aT8cxny2Uz3m+1v9h4jt/HTdEl
c5eNmleSnCP2HnnvNkev3z50VIPdyTmiL/VDd46oqvaX+mL3Nd9N/sF4Pk/t
L3i78XkdXtpmPE9Q+9EXwfNVav+AesXd35m50Xheovafp/4Pz9h/Vtdzzx3a
IzlHYH+/H1bXPPocEfO5KNq1/PmlR9cfYt4WR99V+vadM/ok9Yd4/iVRvfue
LVVp1XrjOeZhWbRAFn1zuHZSf3jviF+tiLrWKl66a+RW45nPkUX18/aW/cF4
3nzET1ZH4/s91HpQz+RcXCpQt6yi9nf+eeuFH16e1B/+ovajl4Pntmp/27e2
PdPsv1uN56fV/us7fF75pMPJuXiU2r/qrWN7vHH9euMZ+z/XOA/P2D+ty09j
jz4X5x2xf0R0qPizO1P1tCP42KhPryHbqjVP6mm9jtjzaTSmxY3TvhyQ1HmO
OTL+i+jstgeLauQn9bQGR9Y7Lfpy/Zvl7jo1qafF88yK+uz4eG3HDUmdh88x
hYtfOP3NpM5zbKBuubJMbD84PO8qE9t/043vVr6gflJP66b2f3L+vhptLkrq
aQfKxPYXvPZY3taaST0tX+2/8L1Bnf9wW1Lnwf6rWp32auu1SZ3na7X/a81b
4Hmu2jtXcXjuH88j1+g88Nwk/l6prt8Lz6fFPEsDtROeX4jXJRN0XfD8h/g5
yl+VB/itFz93SeuWqVvymdQt+fxQnws8D1T7n9bnCM/N1f4v9LnDc3m1v7z6
CTwPV/sL1a/gGfufUj+E5wZq/x71W3jeGvu5zFU/h+e5au8X+l7Ac2H8Hska
fY/gOX4uy+QGfe/guUP8nko7fU/hOX5ei00HC8/V4jgg92scgN9TtR7Yw/nz
drV/nMYZeObzLY1L8Pyh2v+YxjF4fl7tn6dxD547qv11NU7CM/Yv1LgKz9i/
VeMwPP8Ux20ZpHEbnmPdzSY5W+M8PC9Xe6vqvgDPjeN9RNhH4HlSvO+YrhWe
q8b7lLBPwXOteF+T43Vfg+ffaj2wrIvP+9X+4bpvwu89an9t3Wfhmc8bdF+G
52vU/ld1H4fnz9T+ZbrvwzP279E8AZ6x/0XNK+C5W5yHSBPNQ+A59vPt8orm
LfB8c5znyEua58DzXLWXvAie68V5lFTXPAqe4/diixzQvAuey8d5mjyqeRo8
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
jbffc3Ljwf38/H/qRf8Hhll3EA==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
DoLPvvTvE8H9KX87g89fwpt5ZmB0LD8Ruw9bjP5C2AeiY3ke7Jep+09WvKCv
Clwl8Zpp7XblrNZScuP33Hrsz62T1mtPzmr9TqX9l/ssThI//21uLbWmGud0
vnczdlPi8/4mn+/FrkvtH+RvXoNPgUvCzwXnj714Zg7938DfJI4n2+HtiWPO
DnhHYt/yOp/vic4/9c40sR/5PLcf5Zf2ZhzHNcZfcuOVxpLWeodn/smNV+P+
NzcXmgf9o7FszDgm98f2p6887+yWcSx7PDqfLCztIS1A/yU883C03jpF2iG1
XjpVGkZxDK7PM3tTr0V++aTUflh+bn9qH1tQsT74XCuu/aK4DRdQbA32FYqV
v6b21YXgU4LPvmJcneCcUVrrcO57T4NPCPY5pbWH6W8MF4XLyz/B1yku5PxM
cfm5YN8rv3ss54uKSW/k4kgRzW0uRpwO5w32J4qt2WA/VgrOB1+VcWyNwXN1
hnxYsF9S/H0qOlcvqbgRHB+lZ+oF57zSirWC8wLpydOC46zi++nBsVhxv2hw
zFUsrRgcK6UTigTHaGmPSsFxU1qicPDYpUOky7S+3bQno/NA6bEKwfFUeqlE
cDyV7no2OteVlitJf/uMdVeNYP0sDVw5OC5Lo14YXKOQlqsK35axZj4rOJ5K
A1cJ1gDSPNWDtbd070vRflmasklwDUT6Sp8fhB/kNxcIjo/SDo2DaxTSwOcF
72Fp9YbBdRVp7MvhezLW2BcH59fSlrWy9qfdo8/BsdxZ+CN3TnSWVqTOd6Rp
V6bOj6SfQ+I8ax59q1PnFNLPH6XOraSTV6XOv6SlJwbXB7ryXcOD6wk3wkOD
6ww3ROeHyhO7wEOC6xLXwyOC6xVto2OPzv4Cxajg3FM56H3wPLiN9lhwDeR4
jSp17iONPTm4niDtuiY631a8XkK7I3W+oLxhKs9M5XumBNcxbtUeCK4zSA8/
A3+WsWZ+Mrj2ojncEF2rUtyfFFx76RatBbbCW3nnzsR+b7H0IM+Mz1hvjwyu
87SDRwfn7Mrd29OGwkP5u37wBHgifAv8CPxI4jqb9sYwuDM8DB4Od4QfgB+A
+8MT4UlwX8UbeELicT+mOUxcM1G97gn5c3gcPA6+FX4UflQ+GR4Lj4VHBdeg
2vObe9I/Bh5Dfzd4BDwSfjS4VnMTzzwCL4E7wmOD6zmd4HHBdZvO8GPBdQPV
D7rQhsMPac2j6xcdcnv1UMYxqCt9D2FHJNZBWpfP4O7wSHhU4ndpz3wuvR1c
3/g0OCYoNiiudQoeu+agRfB8al6/SF1jkbbckLomI225MXXOLm25KXXOLt24
OXUOLl2q3FHrOz5x3FL8eou+3alrj9KWX6fO65VrfJ7TKoqbW1Ln+NKl3+Zi
hzTMrtR1KunPralrC9LP36WuQ0rTHkpdF10WPFeKc5qvn+lvhF2SG7viujSZ
4rzivWpe0vCKn4q3v6euqS6n78fUNUzl1/tS1zalSw+mrtkuhX9KXdtUTnck
dY30ffhA6vii2LcndW1WWvr64FqxcvltqeO18q+j8JXwh4pvwbUs1bSkr7V/
lvDbegWf02v425uD68nKT3sG15mvgnsH1x5bwIOCa5ut4YHBtdBW0izR50Q5
/l3B9dVr4Rvg0RnXH+6EZ8It4R7wUxnnzn+nrvd+IL8VXS9Tjv9p6lqWcpYQ
XCNdiU2Da8srsOWCtbe0X3H4VvhjbLH/x4XUNQP5tHmMt1BwrXI1tmCwbpT/
/yx1DUo5UZKLC4rjyseUlynfyRNcu/4IezKtHbwKey7+f1FqPVYzOBf+DFsj
aw0qXz0hun6tMU6Mrl9rXXbk9JB00bToWtAa+scE1+r/xE6PrguthWdE14XW
yWdH5xjb4CuC/caXipPBddGftS9yPlw+sHmwr/sK+0R0bV376oXoepF+89To
+pLO9dPRNXqNVzVrxZp3+fx8dP1Kuc/46Nq99vaw4JrkH9hJ0fcQWqOx0TU7
nZdx0TVi7fPHou8PdL6ejL6H0PreHlzj3a+YFu27tyqORedXX8MXBfurjfpt
0f7rG3hndK4ofXVBsN/bgD0/54sU/1vmfNRxvxSt9aX/v4rWndKiOrc6v8qh
lGtL40sntwr2+duxVwb78y3YusHxRWvUIDherMfOi66P6Jmrg2OBxnJVsP/X
WN6O9tE74PrBOaPW963oOKTvupQ2iv7N2KbBceELbLNg/7wJ+250zNgJXxMc
j7Q3lDt8l3EOUDs4P9UeUz15IX3V2adfR9c7pL3vDa5LH8Iui46XP8CDg+ve
v2P3Rutg6c/l0XFxH/2bouueyqG2RNdEpNs3R9dElPd9GV03Uf64NTpvl1Z/
Lzoe7+Y926JzeGn796Pr7D/Kh0fn59LS26NrB9Lz30TXAqTb7wmO+wexH0Tf
H/wE747O+aXJd0Xn89LzC6Nj83c88110fUF6fk90vUC5/7rourz2tnJO5Zjv
8XljdD6pvPKZ6Lsr+YQp0Xdd8kUPBueth7UvguOytNb44HiquNov+F7gV537
6LsNzf8n0fcWGsuq6PsSPbM6+k7lN/jj6DuVA8H3AvsyrtPOj47f38L9g+8U
9PzK6HuOX7QHgu9KxEujNc338ADty4zfuTb63kK//7PoOxjtgUXROmaPzn30
/Y18Tt9gPalYsyL6LkdneXL0vaB87+JobbQXXpDTPbvgRsG663Ps+ug7EvnA
s7K+x5LmOTvr+yppoQpZ31dJ994afL+jta6S9X2eNFUb+ZeM56FD8P2OfvN1
wXc3Oi/ls74bk06WL/85Y21ZIuu7PcXHklnf5ykOqkah9W9EX7ms79KkmV+J
ruXqPKp28VPGZ0y+Qz7k/3UV5dPnZV0bkU89X3XrYG0pP/Z9dG1Ued/L0TVt
nfeng+s50uQvRt8LyM/MjL5f0LzNjq7nyzfOib6XUlz4IboOqxyzdbAGls/Z
F12TVZ7bMfiuSutSOeu7T2npSlnfTSp3aBt8H6f1ah98T6ez0y34Xk9+oGLW
d4TKTdoF3+vpXHenvZTxWZ4VfX8h/9w5WJ9IN9bPuq6hfKFL8P2g9mTX4DtE
+aJqWd+jS+uWyfoeV3qjVNb3stIkxbK+65WGKZ31HbB0i+pdqtOozlI163tW
6ee50fd2io81s66pKe84J+sajfKpM7K+x5WGeTX6fkE+WfcYuzPO4/4H07fy
2A==
         "]], Polygon3DBox[CompressedData["
1:eJwtmnfgT9Ufxu855yYioULKXqUie5NoUGlr2koLUaFNQ4NK0jAL7UjaFBEt
RKRBm0pLJdr98nte3+f+cb73vO65n3XvOe/3837Ot/aAYScPjVmWDdefXMdr
UpYt0XGCuPZuWTZM/LT4WvH+4iU6bhP/prZU/Tv1oiOCmvhX8R7iqurvo3Pv
q/92NH8nfk98k1pT9Zvq3Jcau0XcQtxC/JV4ntpm9X9Se1X92/X5a9Sfrn4j
ff6Z4vHi88UL9doNeu0G8Q9qs3TuDo2vVX+G+gfr+om6pquu6apzO3TuOo0v
Vf8O9etq/GaNN9d4c53bwu/R+Lvqz1T/EI1PEX8sfkzcTFxe1zcUH6jXbFS/
rFpNcU3xB+rfodZF/S46t12vOVuvv139C9V/WWPniO8QXyR+RXy1eLF4vLiW
3v9K8VzxreLVGr9M/IL4BvEBGh8ifkp8tXg/8Xhd006f15Z7rHMjNf6i+jeq
X13jEzTeXuPtdO57nbtW46+qf7v6dTReTuO1xLV0zYfq/6fjYTSd+0LXjNL1
L6l/k/o1dP1Q8XzmibiauJ94kvgS8RK9/ja1tnp9G537Vucqipuo30TnPlG/
vM4drv7hOveL+hV0rrH6jXXuY/XP0vtNEF+gsUXivdQOFB+k8U3q367WQf32
PHNdM0HXv6P+NPUP0vdZobEVfLbaJJ0bxBxU/23mnMbbiYeIh4h3E7cXDxUP
FZcStxFfxPMRJ3Fb8cXii8W5uK8+70Gu13vvK26t8Qt5vhqP4p46P1z9EWpl
xL1zP98lwd9vUvJ8fVDXdRAP0Pib4jc13kTcX/yG+A1xY3F38UTxXcGfd5x4
iniKuKr4Br3f68VvbSc+Ifn6Ptx7cUddfwnPR9eXFrcUD2b9iDNxZ/Gl6l4m
Lis+nDknvlxcTtxFfLl4pHhP8dniheKF4obiY8X3i+8XVxF3Eo8QXyreQ9xC
fJ54sHiX+mfmnp8viutrvJv4CvEV4griVuLzef7iIO4gHiYeJt5dfEbu9fCC
uJ64q3iUeLR4L/FZuefrS+IG4iPEI8WjxOXFY3V/nuV+6v6s1Vif3PHu1eD4
crTGbxX3iv4+J2v8MdZ/8Pw/Rfy4+HFxTfF9un6j+OHo+XWr+GXuh/hdXXui
2iPiR4LX703Jz/fu6O8/Lvn5T46+H+PFq8VTxQeKm+v154rP0+v/I3aqDRQP
Ev+r/hhd/4x4oq5fI26mNkh8rsb/p/49Gv9QPCd6fk0WfyCeHT2/TtI1j4of
DY4XR+f+/beK9+Z+J8+386L5luT1dG/08z89d35YEBxPz01+v8s0Xlk8OPn+
XR49P/rljr/LguNr39zxaGlwvD4/+f6OjJ7fvZLn17niSuKjdP0t4luC+V6N
fyR+SOOHEc/Fb4nviX7+p+WOl/OD81lP8QOsv+D41SeZh+j6fVg/udf3rOB8
1yt3vHs6OF72EN8nvi/495XV688hPun1P2hsdPL6GBc9P2Lu9fm6rj9U/Jj4
RvVv0LlO3CvxDeLrxR3Ej4ivF48VtxMPyZ2P1ulca71+jvha9a/VuRbcK3Kq
+Ebx4fwW8ZXiK8WNxLPF14ivETcjlut7faf+eprOP6Tx63S8TtxK4ydofKx4
jNrDGusUHTuIIbW4tzr3bPCcG04uFT8kniMeIK6odjLxXq+bihYQnyluLZ6e
u7G2WeOMtYqORcSkKuLG4n7ifuIKye/RX9w/83u/ovEfyU00nV+m8Yf5HeKB
Gp+ZO5YQUw4RP6lWQ/0a3JNCj5QhF4ovF69nXou3i68WrxaXE28Tj86tYdAy
++ncRxpbicYh9+jcSI2tY16Sy8RXiVeJy4p/FI8Sb0I3if/mmYvfY56Jf+WZ
5NYMaIdaOvdZdA4mF9fOnH/Jx7WZe5n10iw0A99VfBi5SHwVn00OZa2orWI9
69r1/F6154Jj3ohkzYJ2Iadu1TVP6Fx19Q/gnuXOseTagzLn76fUtqiPRkw6
/2Dy783VH8pc0MA3PCuuCdYAs3WclVkbEE+Zi6frurmsdbU5Gp+tc/15PuKb
xePE3dCa5PhgzXSceAGaKlgzHS8uo9ZD/QP1flOI9blzITGKWDUPDSK+Tdw9
+T1YK2dHv/d8tQnBGuPY5O9ErCPm8V1Lq3VXv6Guv19jfaNzLzmV3Pqizt0r
vkd8qvh58WTx3eKTxc+J7w7WRCeRa8STxHeJT0TLEZPFk8WniGOyNq2lz7lX
Y39Ga7kqOk4Sh2RtXVN8j/jvaO2zn46TxX9Fa7uqOt6dW0PX51kU2hpN2Ehc
OlorMoeYS7uCtfhmdHDmBzwOLaL2jMYW6NQl+uzXcuc6YjKxebn4CfET4gvE
10XHfnIAtcITGh/He4uPSNa4M8QzMmvfHslz90zmVu5nxNw9I/rZDYuOvcRg
tNYKnXtS/KT4QrQ4Olj9f4h5xFa1ucGa+aJkTXiI+ntEa0U078HiMtFamDnN
3N49Wqui+euJQ3QtwHcaH1xj8F2pGahNKkbXEtQcUzU+NXMtgkadJp6WWbtS
A1FLVIiujagBmon3iq4NqAGm6/rpmWsDYgqx5U9ivsY2oqvFf5ETxBvQmeId
xHzx3sn5v6nO/0JsSs73zcTbxXWT9VyXaH1QJ1mPHS7+R7yb+DRxXfFWcmF0
biHHUPvkaqeqX4d1nbPoNW91qC7+WrxLxxOIFzp+Ja6XrBePiNYbDZL1Vrdo
vVc/WT92jdYvlZP1YAvxDvG+yfqmufhXYmGy3usg/it3TiA3tBTvFNdI1uvt
xX/mzknkpo7iv4lt4tHio6L1Y8NkfXgkAUz8n4491d2fuKbrS2m8l7ie+Fvx
7uLTxfXJk7njwRniBuLvc+ckctOh4p9z5zzW8ojoXEgOIjZcGp2biLnkpuuj
YzExg1g3KDqWEDPI3QOiYwkxgbUzMDpWEDPQBv2iYwkxk1hDvU4sJcagJfpH
xx5yMrl4bHSurpZcz7QR/5Z7TRN7x0Sv9SuS19Yt4lXiPcW9xY3Is+Ly4j7i
g8XbxHuJ+5JbxT/ljlknB+d8YhlrlLl9RfTaZU2y9q+MXqvoI2LHzeTS3DGF
tTQqOtYQU1hLo6NjzSM6bgzW2GhtYjyxfXB07K+eXM+1E/8h/lfH48XVdNws
/jR3PYvfQL1J/Yn/wJpkbf6VnN82F/lseSyZ8tkW8bDcNSu1K/Xwz9E5CK10
TnRuIoegrc6Kzi1f5q5/ieHE8onEUPVfJG5r/n2h8TbB9fEf3JNYMi2zr3Vu
uMZWRPswX6G5iMfi3cVbxZfmrpGplampt2nsfbXK6u9Ew+We053U75x5rnMP
Ooo7Zb43rNnOwfX3rmJNU493ybzWa0T7F+Qccs8b4lLqf6NzI3J/Ju9VNvq7
cE95rz2j7zWaojVLLVprEG/5raWitQXPnNoRjcxcoGZ5DR2XuZYhHqJN/gjW
Xmgifuu/wVoJTcSz+F+wVkLXoe+2qj0X7Zm8HFyD4aUwpxeJF2We63dG1x5L
M3tBH0b7Ob/r3AZde0Byvd9W538X76/z5XkeavOja7qVOrcyc63HMz5G/crR
z/5ztdbB9+D36DnDsygXPZc4d5R4n+hrmQNHi/eNnhs/B2srNBbakhp1efAc
onb9RudaqZ/r+JHGftPxSPHeOn4mvi/a66BGo1ZDw5wZHMOIZeT4ZsX8J/cv
jvb0vhDPTK6hqaWJoUcm54Ajgz+D3MBnNgy+Z3yX5Tp3rPrHBusRPAS8BHJC
R40tK/RU92A981qh33oE6xX0FfUOMY5Y10atdbKPQv2Bht2k8U2Zte1StW6Z
PT3y8ZJCHzFnya879bqW4ko63pX7mVYK9iB51ot1fYfMHhL6gBqfegGNiv7D
o6wQXCNQK7xa6DM8TvI5NeuyYr6SL/EM8A5KPLVkjwGvgZzTVdxc/E6wRzVV
3Er8bpFvZ4hbiNcEe5zTkmt0vKCSGja5pn2reJ7UutPIOeIB/Mbk/P1aMT+I
NS11/dpgD3R6co2Pl1TiMSR7Ong75OTOyZ4O3g45u0tyzfxSsT6ppanJlxbr
BW+VGpZaFg/j4mK+LSrWG+sBjwuvq8RDTvZE3i7WC/F7RXKuOClYz6biedbW
+9wnXqw2U2Mzda63xi7I/Vu4Z9y7ucn6lZqIeuu83H4J95h7PTj3veaecm/P
z31vuSfcG+YUte2YzHNtVnL9V6qI9y8kr42mhT5+MVnPsWZYO4uSYzsxHv34
tb53A0Knjrfy2WqvaOwVnbuK+CmeJ57H/UrWGEcHr3m0x8Lk+YoHjl5/KVlv
4kmjR18Xn5I5x5Jr+YyWwa/hs+ck68M9ivyxTm1VcA14W3LOPzvYo0ALvKl2
FvkquH56JbmewCNGH7+VPLeouam9KxWff1j03HubZ5K5hqeWn51cz5Yu8tUb
yfU+MYfY87C4irh8kb8eT9bv1YLr64eS81e5Ir+8nFzP4GlTrzyWXD9XDa6n
H0nWy9Tk1O9v6XuVFn9LzBE/mqyfKwfX559E17fkhra7WU+sLO4P8QTPDS8S
zxAvDs2MtzYos5bG08XbRUMdlOyH9C/WX+1kT4z6EU2CNsGjxKtEk7ZM9pTx
ltG0zZM9ZbxlcsyhyZ4s/srwzHEPDY13hyZGW6OZ8f7QzGjpB9R2Zt6DyYmn
5JjMeyZ/JmtuvFY0M1qcmE5sxzNJuT0zvLMSjzNZI/MseaZoZ8QIfgz+DNoZ
/4q9FTxrvGs0eq9gzYx2x0PHS0eTN03WYL2DNSPaDM1M7O9e5B88suOCNRre
Gf4Pc4U5gx+E/0NsIEbg95CDzwnWpORmapzTgmsYah88ebx5NGCTZI3aM7hG
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
         "]], 
        Polygon3DBox[CompressedData["
1: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
         
         "]]}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0ksrRVEYBuDFwXF3SpKEzJTLL2BIipGSYiYpBgykmIqYmjA04hcwJvwA
uZxz3JnL3cT9WTF49/Ot2u31rtVuHJ7sm8gJISzIt8T5XR5kNzeEFA/YwGu2
8Z4d/GIvSxMhDLGW42xmi8yau7nEAa5ylBuc5hbnuc+CvBBewl+BI3zKsxxZ
H/OYJzxhmmlmmGGWWZ7ylGc843mM+YIXvOQlr3gVz8Nr3vCGO87zFitY38bz
yaus6XjIZe5xjpuc4jpHuMJ+LrKLnTJjbuIYazjIYvbww17tvGNr7MZ65ruH
J/5IRXxPHqVOp/J4xyyL32Mpq1nCKhazkkVMsUIKzWVMsoQFLGI+k8yLe1Kt
kKAaYdvj/v9/+AUQ2UV7
       "]]}, {
      Line3DBox[{706, 1016, 481, 705, 1017, 1134, 928, 707, 1135, 929, 708, 
       1136, 930, 709, 1137, 931, 710, 1138, 932, 711, 1139, 933, 712, 1140, 
       1031, 1235, 713, 1141, 934, 714, 1142, 935, 715, 1143, 936, 716, 1144, 
       937, 717, 1130, 1145, 938, 718, 1131, 1146, 939, 1029}], 
      Line3DBox[{720, 1018, 1032, 1336, 719, 495, 721, 1147, 940, 722, 1148, 
       941, 723, 1149, 942, 724, 1150, 943, 725, 1151, 944, 726, 1152, 1033, 
       1236, 727, 1034, 1237, 728, 1153, 945, 729, 1154, 946, 730, 1155, 947, 
       731, 1156, 948, 732, 1337, 1019, 949, 733}], 
      Line3DBox[{735, 1035, 1238, 734, 1036, 1239, 736, 510, 737, 1157, 950, 
       738, 1158, 951, 739, 1159, 952, 740, 1160, 953, 741, 1161, 1037, 1240, 
       742, 1038, 1241, 743, 1039, 1242, 744, 1162, 954, 745, 1163, 955, 746, 
       1164, 956, 747, 1165, 957, 748}], 
      Line3DBox[{750, 1040, 1243, 749, 1041, 1244, 751, 1042, 1245, 752, 526, 
       753, 1166, 958, 754, 1167, 959, 755, 1168, 960, 756, 1169, 1043, 1246, 
       757, 1044, 1247, 758, 1045, 1248, 759, 1046, 1249, 760, 1170, 961, 761,
        1171, 962, 762, 1172, 963, 763}], 
      Line3DBox[{765, 1047, 1250, 764, 1048, 1251, 766, 1049, 1252, 767, 1050,
        1253, 768, 542, 769, 1173, 964, 770, 1174, 965, 771, 1175, 1051, 1254,
        772, 1052, 1255, 773, 1053, 1256, 774, 1054, 1257, 775, 1055, 1258, 
       776, 1176, 966, 777, 1177, 967, 778}], 
      Line3DBox[{780, 1056, 1259, 779, 1057, 1260, 781, 1058, 1261, 782, 1059,
        1262, 783, 1060, 1263, 784, 558, 785, 1178, 968, 786, 1179, 1061, 
       1264, 787, 1062, 1265, 788, 1063, 1266, 789, 1064, 1267, 790, 1065, 
       1268, 791, 566, 792, 1180, 969, 793}], 
      Line3DBox[{795, 1066, 1269, 794, 1067, 1270, 796, 1068, 1271, 797, 1069,
        1272, 798, 1070, 1273, 799, 1071, 1274, 800, 574, 801, 1181, 1072, 
       1275, 802, 1073, 1276, 803, 1074, 1277, 804, 1075, 1278, 805, 1076, 
       1279, 806, 1077, 1280, 807, 1078, 1281, 808}], 
      Line3DBox[{812, 1182, 970, 810, 1183, 971, 814, 1184, 972, 816, 1185, 
       973, 818, 1186, 974, 820, 1187, 975, 822, 1188, 976, 824, 1189, 591, 
       826, 1190, 977, 828, 1191, 978, 830, 1192, 979, 832, 1193, 980, 834, 
       1194, 981, 836, 1195, 982, 838}], 
      Line3DBox[{837, 1295, 1091, 835, 1294, 1090, 833, 1293, 1089, 831, 1292,
        1088, 829, 1291, 1087, 827, 1290, 1086, 825, 1289, 590, 823, 1288, 
       1085, 821, 1287, 1084, 819, 1286, 1083, 817, 1285, 1082, 815, 1284, 
       1081, 813, 1283, 1080, 809, 1282, 1079, 811}], 
      Line3DBox[{840, 1092, 1296, 839, 1196, 983, 841, 1197, 984, 842, 1198, 
       985, 843, 1199, 986, 844, 1200, 987, 845, 1201, 988, 846, 1202, 1093, 
       1297, 847, 607, 848, 1203, 989, 849, 1204, 990, 850, 1205, 991, 851, 
       1206, 992, 852, 1207, 993, 853}], 
      Line3DBox[{855, 1094, 1298, 854, 1095, 1299, 856, 1208, 994, 857, 1209, 
       995, 858, 1210, 996, 859, 1211, 997, 860, 1212, 998, 861, 1213, 1096, 
       1300, 862, 1097, 1301, 863, 623, 864, 1214, 999, 865, 1215, 1000, 866, 
       1216, 1001, 867, 1217, 1002, 868}], 
      Line3DBox[{870, 1098, 1302, 869, 1099, 1303, 871, 1100, 1304, 872, 1218,
        1003, 873, 1219, 1004, 874, 1220, 1005, 875, 1221, 1006, 876, 1222, 
       1101, 1305, 877, 1102, 1306, 878, 1103, 1307, 879, 639, 880, 1223, 
       1007, 881, 1224, 1008, 882, 1225, 1009, 883}], 
      Line3DBox[{885, 1104, 1308, 884, 1105, 1309, 886, 1106, 1310, 887, 1107,
        1311, 888, 1226, 1010, 889, 1227, 1011, 890, 1228, 1012, 891, 1229, 
       1108, 1312, 892, 1109, 1313, 893, 1110, 1314, 894, 1111, 1315, 895, 
       655, 896, 1230, 1013, 897, 1231, 1014, 898}], 
      Line3DBox[{900, 1020, 1021, 1338, 899, 1112, 1316, 901, 1113, 1317, 902,
        1114, 1318, 903, 1115, 1319, 904, 663, 905, 1232, 1015, 906, 1233, 
       1116, 1320, 907, 1117, 1321, 908, 1118, 1322, 909, 1119, 1323, 910, 
       1120, 1324, 911, 671, 912, 1339, 1022, 1023, 913}], 
      Line3DBox[{927, 1028, 701, 926, 1027, 1335, 1133, 925, 1334, 1129, 924, 
       1333, 1128, 923, 1332, 1127, 922, 1331, 1126, 921, 1330, 1125, 1234, 
       920, 678, 919, 1329, 1124, 918, 1328, 1123, 917, 1327, 1122, 916, 1326,
        1121, 915, 1132, 1325, 1026, 914, 1340, 1025, 1024, 1030}]}, {
      Line3DBox[{259, 686, 482, 1134, 260, 495, 288, 1239, 509, 303, 1244, 
       524, 318, 1251, 539, 333, 1260, 554, 348, 1270, 569, 363, 1283, 584, 
       1183, 378, 599, 1196, 393, 1299, 614, 408, 1303, 629, 423, 1309, 644, 
       438, 1316, 659, 453, 1325, 698, 673, 468}], 
      Line3DBox[{261, 483, 1135, 262, 496, 1147, 289, 510, 304, 1245, 525, 
       319, 1252, 540, 334, 1261, 555, 349, 1271, 570, 364, 1284, 585, 1184, 
       379, 600, 1197, 394, 615, 1208, 409, 1304, 630, 424, 1310, 645, 439, 
       1317, 660, 454, 1326, 674, 469}], 
      Line3DBox[{263, 484, 1136, 264, 497, 1148, 290, 511, 1157, 305, 526, 
       320, 1253, 541, 335, 1262, 556, 350, 1272, 571, 365, 1285, 586, 1185, 
       380, 601, 1198, 395, 616, 1209, 410, 631, 1218, 425, 1311, 646, 440, 
       1318, 661, 455, 1327, 675, 470}], 
      Line3DBox[{265, 485, 1137, 266, 498, 1149, 291, 512, 1158, 306, 527, 
       1166, 321, 542, 336, 1263, 557, 351, 1273, 572, 366, 1286, 587, 1186, 
       381, 602, 1199, 396, 617, 1210, 411, 632, 1219, 426, 647, 1226, 441, 
       1319, 662, 456, 1328, 676, 471}], 
      Line3DBox[{267, 486, 1138, 268, 499, 1150, 292, 513, 1159, 307, 528, 
       1167, 322, 543, 1173, 337, 558, 352, 1274, 573, 367, 1287, 588, 1187, 
       382, 603, 1200, 397, 618, 1211, 412, 633, 1220, 427, 648, 1227, 442, 
       663, 457, 1329, 677, 472}], 
      Line3DBox[{269, 487, 1139, 270, 500, 1151, 293, 514, 1160, 308, 529, 
       1168, 323, 544, 1174, 338, 559, 1178, 353, 574, 368, 1288, 589, 1188, 
       383, 604, 1201, 398, 619, 1212, 413, 634, 1221, 428, 649, 1228, 443, 
       664, 1232, 458, 678, 473}], 
      Line3DBox[{271, 488, 1140, 273, 501, 1152, 294, 515, 1161, 309, 530, 
       1169, 324, 545, 1175, 339, 560, 1179, 354, 575, 1181, 369, 590, 1189, 
       384, 605, 1202, 399, 620, 1213, 414, 635, 1222, 429, 650, 1229, 444, 
       665, 1233, 459, 679, 1234, 474}], 
      Line3DBox[{275, 490, 1141, 276, 1237, 503, 296, 1241, 517, 311, 1247, 
       532, 326, 1255, 547, 341, 1265, 562, 356, 1276, 577, 371, 1290, 592, 
       1190, 386, 607, 401, 1301, 622, 416, 1306, 637, 431, 1313, 652, 446, 
       1321, 667, 461, 1331, 681, 476}], 
      Line3DBox[{277, 491, 1142, 278, 504, 1153, 297, 1242, 518, 312, 1248, 
       533, 327, 1256, 548, 342, 1266, 563, 357, 1277, 578, 372, 1291, 593, 
       1191, 387, 608, 1203, 402, 623, 417, 1307, 638, 432, 1314, 653, 447, 
       1322, 668, 462, 1332, 682, 477}], 
      Line3DBox[{279, 492, 1143, 280, 505, 1154, 298, 519, 1162, 313, 1249, 
       534, 328, 1257, 549, 343, 1267, 564, 358, 1278, 579, 373, 1292, 594, 
       1192, 388, 609, 1204, 403, 624, 1214, 418, 639, 433, 1315, 654, 448, 
       1323, 669, 463, 1333, 683, 478}], 
      Line3DBox[{281, 493, 1144, 282, 506, 1155, 299, 520, 1163, 314, 535, 
       1170, 329, 1258, 550, 344, 1268, 565, 359, 1279, 580, 374, 1293, 595, 
       1193, 389, 610, 1205, 404, 625, 1215, 419, 640, 1223, 434, 655, 449, 
       1324, 670, 464, 1334, 684, 479}], 
      Line3DBox[{283, 687, 688, 1145, 284, 507, 1156, 300, 521, 1164, 315, 
       536, 1171, 330, 551, 1176, 345, 566, 360, 1280, 581, 375, 1294, 596, 
       1194, 390, 611, 1206, 405, 626, 1216, 420, 641, 1224, 435, 656, 1230, 
       450, 671, 465, 1335, 699, 700, 480}], 
      Line3DBox[{285, 689, 690, 1146, 286, 692, 1337, 693, 301, 522, 1165, 
       316, 537, 1172, 331, 552, 1177, 346, 567, 1180, 361, 1281, 582, 376, 
       1295, 597, 1195, 391, 612, 1207, 406, 627, 1217, 421, 642, 1225, 436, 
       657, 1231, 451, 695, 1339, 696, 466, 701, 702, 704}], 
      Line3DBox[{467, 672, 1340, 697, 452, 658, 1338, 694, 437, 643, 1308, 
       422, 628, 1302, 407, 613, 1298, 392, 598, 1296, 377, 1182, 583, 1282, 
       362, 568, 1269, 347, 553, 1259, 332, 538, 1250, 317, 523, 1243, 302, 
       508, 1238, 287, 494, 1336, 691, 258, 481, 685, 703}], 
      Line3DBox[{475, 680, 1330, 460, 666, 1320, 445, 651, 1312, 430, 636, 
       1305, 415, 621, 1300, 400, 606, 1297, 385, 591, 1289, 370, 576, 1275, 
       355, 561, 1264, 340, 546, 1254, 325, 531, 1246, 310, 516, 1240, 295, 
       502, 1236, 274, 489, 1235, 272}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
xs8LE6TzHuH+gULJP8KfECz5M/60/ilmn5X/sHfWyvn+aZdRidn5akf0NWbf
ysp21Wsq/ijn4ebP7LyyxWwesy/q4ZUdzH/zPvcdyOzMzLu9k9n3367phczf
+/qGrmB2el49XY7Z9+Ni25bs/WjHJQYwO82W2fVh9plUOTeGvU/jl27bmJ11
lgaN6KnYt2nbnV3s/d88uG0ks/O5Se3HxvbnDGX+vwlfD7T+hlg/k+8PQ6T9
vbk98E2yJ5vbD5+E/U7Cfi9+XggX57UU5xX+ATvJP8KfMEfy55tr0Y4s3ypP
0mv3n5Kv4S0f32F5d6d1TkeWbxZRdjXPKPld/fuQVJZ3JdaNLrN8M//8uz7D
g1fzazZjeRfdddYelm/97jYcwfAj4dSz/1jefSp8sJ7l244ahwPPK3jz6/Tp
GjuUvAvIvNyX5VtP3+hdDJ+62e31ZXnX4qpt+4tKvrWaV30Bw7PZuVs+sLzz
7fnIeP1id0MbwbNWF/xSB74e5PXBfH/oLvbvKvb/j9sDW4U9P4U9j7j9YCDs
fybsF+cFM3HeTHFef+4fmCX5J4/7E8oJf4YJf9636DqB1bNAk9trWP18CnP6
sroWU2rnyerWuiEfprM6vG9ZW0dWv849HnGS1aePF39fTVfq+bM5zT1ZnUpp
tjOC1aH+hjpjTyt9QcDJlS6sHo3dtKdgr1JvTo6eqgVKf+HWckPD9krdcSyX
VIHVlS2+t953U/qUrRurXGT1JXZQyeoopX7kdawae1zpdyLWpESwOjLRMsLI
pauHocz/p/L1kC+t38b3h81i/y1i/wncHjgu7Dkt7HnB7Ye+kv3ivFAqzhsv
zvuY+wcchH+chH+EP8Ff+DNO+LN0vPVa1mfQHFY5rJsF6zdqeuhuY30DPTcK
ytnF+oeyzBXtWX9Az+FNbAnrEyaFV2zP+gB6rq9z9yTrBwbbF7Rl9Z6eD/C7
a8LqfkDnFs3/9IXin+69wZLV9x073c1aLIjSPN89POVqjlLHUzxmH9Ud6Gmo
9dc/ZeDM12vmyF1iPfL9Nc+7if2Hcns0z/sLe0y5/ZrnHYT97/h5Nc/pvNrc
P5rn5B/hT81z8qcUz6ASz6ASz6ASz6ASz6ASz6ASz6ASz6ASz6ASz6ASz6AS
z6ASz6ASz6ASz0DxLOEzqOAzqOAzqOAzqOAzqOAzqOAzqOAzqOAzqOAzqOAz
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
YfregPTacv9MennSyZOeW15P+mN5f9LLyvaQvlO2n/SI8nlJP6fiN5D9Rt8Z
ks6O9HX0XSLpwkgPRt+/kf6RdI/0vRbpT2meou+LSP9Lul+zv+dBje669O95
UKN7Jz/T9wc0D5b+PQ9q1pv9PQ9q9if9sWwP6WVl+0nfKZ+X9IgqfgPZb/R9
JukWaU6n7zlJZ0f6um9/8xsaHSl9/0Z6XuIH7P7mNzQ6avq+iPTsxD/Q9zD0
PYGTxG/Q9xzEb9D3BvJ60sfL+9v9zW9o7CH9sWz/t7/5Dc15Sd+p4jeQ/Rbz
Ny+n0X+m/82/afS3wX/zbxr985y/+TeN/py+y6LvAEj/7/83/6b5/kLi34D4
N/+/+TfNevquQN5/zt/8m8ae4L/5N4396X/zb5rzxvzNv2n8Q/wm8Z3EW+Yb
xM0r5xmGS0xXPX9tmYwHLr/zHWpeAo+cxqw9vDkYDb2NgypVyMSXLyPT/BYW
QcrB+avPud7FIWYxnQeVz8Y1X7/UznYugNdPDzzsaXADz9dtWWdgXg6uNLvv
9k4vH8Jj78a/UvzWJ7nK3TafcrFdE/eAM4Pp78foFUT6Ebp/v+haR8fU4AbE
NFpuPHRgLv4836RGl7Q8CKvRuOEM17vwPOxA12CXbDRY99XzaqsCaNRicxPz
TcGQoD9sUZ/XmeibblLVPqMQeu9btvDkvDC4OSj93/ERqThyVMMzxcnFQPdG
xJcTX033H8TrE28cdfa97pIDT3GHTXD8tYCXWDN4ibGPRREsrFK1VrnV0ajj
1jLyydksrHT5NU54p/SNnVOPnFkYglsbeMbufJSN40ZWPDchLJ/uxfGy0B+R
7ijyY91V1hbbMLPdx2yml5nQ2zrd4EIeHF3R8XHLppGQPO1TgXP8a9z6T8S9
HQMKIKWawbke6U+g+/bRHfI6ZaJdc+Pxs7YXwgK31boHsp5BbmrTiIinKXjw
1Lppxe+KYGmb0f2NVySCbb8e1Rt+jMVORdPW3OxdAnSvQ/cVxKs/aPTT8aBV
Ajq6dFvrX+8VVn/cueCwYSHdQyPp0UiHdsTWLfL2clTsKzeztlM2vls74ZZ2
tQKw89Oq1DT+NJo8vnM50jAHvbStjyaye5YKs5vstEwE/3nP15aFpeOSppU3
nhpYCI/WvB6QHJ0K/5htW9ggPgmnlfO+MO5rIejaZV1c8f0lzBnaY/brFY9x
25F4W8sLRbDAu/RpgXMGjNK7H1R09CY26qQbl1qlGGbmoiu2T8BEI9sDeZkZ
+OxGu1N7pxaCf+2GFbcOicThZu/cwwyz8D/X7HJrzJQ40TcPe6vvi3HH5naY
3/41NjPYu6HhmEIIyQ3d/lbnFXhYX31RUJCAm3QOTzRsWwj1SxxqHR2SBbU2
BVs+mBaNrt+LXB50L4SYH09ebm//Gqq6VXhRUOSHE6zsHiUbF8LhkEYLYh3j
8GFwcoPd/7zEaJ2Bhpe8isCh6aQce09/HL44OFmp9jixgqO7VY1icA5Y6jiu
r1Ln2lye1y0xDO88LJ28UFupp/orilxa5oCeX8KL7cdv4i6fdYsCI/Mh1+hm
87H7QzBcO+HKb60knG6wqEG3+yVgGny0c/jCXKj4+MC5l7E+eGr9QY/3/9MX
YZSkI7pwsH5vlm9LC887TFLyr9H70vos785PMmrI8u3OKtPcaUr+3T8SG8Ty
rta674Ys38o55fSaouRfa7t/OrG822c6sTvLt9FRnt1PKPlXY0XzKJZ3K2pp
903CWNx3anIJToiE1ieX7g1S8q7EOSpoax03zK7du5GZgk+tL+JHfSXvDJZ2
GrlqWDKcGZ905uSiMDizzXxngEUJzKm0/6CCR7Cja4Sjy+ZguDl2i9a/Ci59
zbCtreARRA563uSsYmdAy32dGC5Z2wdUVPAITu8ZWkHBJxiiN9Wb4VLzhttv
K3gEmTtb7lDwCQLX9A9iuET3iHSvSPeJpP/JkvQ/xjWnZrD8fGl2aDvL18MB
JyJYnr5oZ6jN8nPS1iO1Wb6+Salpw/I0eOzGhSw/h37M8Nuv5Ouv8OObWZ4u
NuyfWV/Jz2t+Da4ZKfl6rtPviyxPO29thdpJ3qi7qPdsPdckaLnVTz8tpwRO
6hjtVvAI/p1zP3TxgafQwmrtHIZLmU9a3lLwCCppFZ3XWh0NY387JTBc+qBf
OUrBI3jU7MtSBZ/AeHmXywyX6L6Z7p9JN967UegHdm9qsqNxwDKLbRA24NwT
hkukw3kjdDgThQ7BfbLebJbPKc4Dvu1Q8tvFeKkTy2ubouFtWT67//D7maTk
d+OGrx6wvJ5gMnlrlpLPcGDfSJbfAdaeh1he63R2Glag5HNLTydzlt8HLH0+
s7wO/e/QfAWP4GCtgwsUfIKAJ98/MFzyEfoDoePW6BBiltrYKHgE5toHdt5Z
jvDyqvllhksL7d6ggkeQMzd7T6v406Bl4eDIcIn0vuGSviWkV9I9lv+hmx5b
MzyYOSzRguFAyanBTwOV/F+49OinIwoe/HKN8mE4YO7StXK+kv9BRmtvMzzo
ebKgkOFAswxtLwWPwGtJ0F0FnyCpzqt9DJcMvxgFKXgEjzMdTyr4BAeHL85f
reDS/h+FExQ8Av8ytH+v7ws9gkbOYrhEutiOkg4kuerCxgwvtA5UWMnwwzZ6
syXDjempRp7bFLxonenznOGHbYLlRoYbO7Z62ip4BEdnQqcnjnEweFhcI4ZL
kzb+GlkEGeDgX7erg6c/jFsw0JHh0hQvI7s0BUf+GzmuNcOVm7/632R4Qvff
ct2ke2i5ztK9uFx3upzoYqY7IAmmrSnUNa4Ziiu6brAK9S7R3JfTPTCt1+fr
0YyvB1ovnoP8nO6P5X3ofp3ujcn+eeL+WvzCN3G/TPfodO9N56L7b/k53UPL
+9N3SvI9Mv19LnKfFqryPUtn4QfZbzP5+wLxvpDeV4rArxrSdxxT+HvHPfy9
I733XTxO8BSPExwk4mQBjysQcYUUV694HMLv/X/iECkOSbfXQfqu4QCPc3zK
4xy7izgXeYFPeV4g5YXII/TmeYSURwt43sEDnndIefeZ5ynM53mKv0WeRvC8
hiCe10h5HSbyP1jS/wvcwF8cN5Bw4zHHGZzOcQbTBM4IXRTS9yX0XUkIxzE8
wHEMAwWOteC4B8047iHh3jSOkzCA4yQSTi7juApnOa5iE4GrVzgOQwLHYSQc
Jt0Y6cjI/wLncQHHeXwocJ6+IxJ1QfM9kagjGMXrCIKoI6943cFyvO7gOFF3
XHmdwhu8TiHVqWm8rkF9Xtewlahra3gdBC9eB5HqYDivmwC8biLVzTReZ2Ek
r7NIdRZ4XYYkXpfRRdRl+n6Mviej+t6U9wOYwvsBpH7AivcPeJT3D2gi+ocv
vN/AAN5vYKDoNyx4f4IbeX+CfqI/6cn7GTzC+xk8K/qZkQf/9D+QzPsfpP7H
kfdLsJX3S0j9kjPvrwB4f4XVRX+lw/sx+Lr3Tz+G1I9d5P0bePP+De+J/u0i
7/dgEe/3kPo90l2FSPpzuh9ZUN7oh87NTYbEV9M9i0O5nyFWX501vDfdjwxc
P7L4x7bjGv6cvtuZG9Xjbu0T5zQ8PN131Pz3zMqpB9wN6XsTK3GvsezJp2tN
Znho7gVIx9/5fWn3ajM8NfcLN8S9g/nCJmeGOrkbki6a9Lvbt3+otO7UOUPS
8YaIe4S5sw4aLN55XHOPQPcF/1Z+0dzmu7PGTroXWBxafdptxQ90LuL/SadG
fhB9ONblfThQH/6W9+3wiPftMFX07aLPx268z4fdos/fz+cCTOVzAfiLuWAX
nyNgJJ8jYIKYI07wuQMi+NwBUWLuiOZzCjbicwpMFHNKHT7XYEM+1wDNNQ/4
HIQ+fA4CmoNG8bkJxNwENDfd53MWjOBzFnwWc9YsPpeBmMuA5rK5fI7DWXyO
g8ZijmvA5z604XMf0NwXxudErMfnRKA58RCfKzGQz5WwWMyVO/kcCmIOBZpD
j/G5FcTcCmVibiW9NemvSXct5mIQczHQXGzD52tcwedroPnaks/jmM/ncaB5
PIHP79iDz+9A8/shPu9jCp/3geb955wfAMEPAPEDpLMXfAIQn/CA8w8g+Acg
/sGS8xVQi/MVUFnwFeGc34BtnN8A4je6cP4Eb3P+BIg/qcP5FnzO+RbwEXxL
IOdnMJHzM0D8jBvnc1DwOfBD8Dl64rsL+g6D+B/kfBH05nwREF+UwfklEPwS
rBL8Ujzno2Aw56PAQfBR4Zy/goGcvwLir3I53wWLJb7LRvR5NpKu8rXgx2z4
enAW61+Jfayl566m/tqVm4RjmH2vC3XLJ6HbhzEb3x4tgelLa9Vp6x6Cr0fd
MIz8lo43dk37rVOi2LMk7dSyvoE44lx6+JPPWdi09ulOX5R8/NYorUFhudtY
/1LfJQ8q52Df9J7nGe+9zOf+6NUhPvjpUf+d2kpSbZoHXsEP86D6iodzIvef
xjYuDtbbmr7BDY4zg682y4OYBc+njL+xyZD0gVUEP3k++/L3sw2vwYxJm4wD
ZuTiu1CrY41C8yD06iCz1b3vQEpUI5eulXLQ9enGxMZx+RDcRae39uIHUOtX
bFLhpyxcUTo8cOwApW/5Z+CRjT1Coa7L2M/xP9PR6PqlNk5viuAo9wOESH6w
VtGvOnQZH5VcLR79N0QYPgpMwzrTx5t2PFAEx5zOHt3uFYP95g/OXP4mE79N
79Rt7AilP7y3rUu11DAs93j90+y62Zh1wWNR7w4F0Lxdx0XjHwfgxgBLrahd
OZiTcOua6bh8CJt+tccexW9drK4drqH4bbzbELNQxW9dZt8s9vzobPiP0PsZ
Cz4869mkPj/+C4cTa40XDNPJxusLCvb66hbA2WWPt5fdeAwnprRvEJqfiZF6
3pNb9i6Ea90mN522Jh7Crl2wb5uehrt1e6z7uqoIXOrl9n7a6DksvNRktqvu
c+znFfbPUp9i6Ha08Fp4s+f4el4V1zMzM3D+OMu3thMLISZZ+/2e1CdoWWNk
8vL1ip9N7D4X+BRA50WNfldQzvs+92J4knJer4mmB42V804/ChMNyt/GnnrF
lv5KnJh+C3GsosSJi2lzs87rjhuK+xQcJO5TKoztkjr66nP4tLhB3vgtGXjX
ctWSbP1C+HCrQpj+lRRY8bP9/ELvFKz46d7lK88LQWfQs2sBL9IgsI9R36rr
4nHq99SgDvZF8LFH1M3oH+mw2SN4189eoXh+09tK/sp7N/1S5nNPOVdxg7C4
rcq51nd8aLhaOdf6dntHOCnv8Wv7GSPNlfe4NGp/yizlPd65bdV/ab9A/NzW
ZEuUEv9rGiX3YvEfc3VX76ObzxmaSrq1J5ZfaqdvyoCV7yvVKb72HD19Z4f8
UOxfolf9fLP8TCifdkBX/9ZjnBvyopyp8l5+5OqMv/YpC+qYR//0XvoAPcJX
rrRV4nZOmc3RUiXe0j9YjPFW4q2iqfO1rkq8bTSfmNjqUgi+ur9iabqSp3qP
DXTKKXk6bXqB1ui17oZDJH1X5/mPztfVyYZ2JYtf1P8ajk/Wfi0MVeKkjftS
X91KOfDho3ONWX3uoNX7FS/aKnm08foMs8MvwjCkxaG193ITEUZvyP/tVgI9
DY7VKRjsYSjrmjouXNby7oxcuHDuit67htew0XmPb02UPI0+svep32hPQ1mf
o/ad4N305X1Ynp9ZF1N2Rsl70wcvz7J8H/69tSPL8/CZ7iPslbw/vdC8gOX7
o5FHbrE8/6z17/kaSt53mBj9guX77Sb997M8X7S/w84NSt7n1OwwhuV7RjP/
WWPfJeKZ4Bs6m0zCwW3yvpo9XEug+dglj0o2R2KZ1epLkY6RUDm8wpmOSr7/
OvlwkL2Rh6GsG+ljcWncotxEqBxsedIuNQyGF0Y1b3qmBHrdy3wW8S0d0hJr
V9RzD4Ea1xe1q628l42vT7gruAnfvo6ubNc3EG5NSRvF4ifqbtdpCm5Car0W
1QvK3YbvZYX/Mvz0KGuxUcFNsNMKNrYP8YFBdh5+DD+nn/qDm9C+3B8chVh7
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
I33n+3+Bx2mS
    "]],
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{405.9521075763224, 183.2504572344464},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {
     Rational[-1, 2] Pi, Rational[1, 2] Pi}, {0., 
     1.}}, {{-1.5707963267948966`, 
    1.5707963267948966`}, {-1.5707963267948966`, 1.5707963267948966`}, {0., 
    1.}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.4668472030590314`, -2.245697456466728, 0.5670165877456392},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.5999277075256033`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
uw0YaAfjTh4nxh3EADKV3jMlU5EMvf98yVQsBoaDgZGyaJ9mYA0zMAkMTAED
0zbLeKRhYGfADZYsBtbIskU2A1ssBnZaDOwTBg4KA0eEgePCAO3HMx7Jt04N
mcsVzT3Ugxgw91DXHAgDj3IDGQgTBDQJghAoYs9+ZXm2rg5pMN4wECHpQ0Qi
ft3yZMSxBoleL2tC12OY6XIsfL5p6becbNwvfXu1hkDpy0jL1Zx8dT5TLxEU
ahJH+p9++qlOWOjfokWLyOIlcY9oJH70ox+px48f40jGlD6XtnIpxb98Aeln
63o1UPqtA6XPy32FulSasuhEHfKvB/nXh/wbCgJNKAwMkzAA+bdGGGg7RsLA
eA4DnSH/rrJ2Jck/ZTrnLamzrLxF5D8Q8h8M+Q+15E93D6dtx0H+EwLkPxPy
nw35z4X86e7B9Fpas9LcX8y+neBaWVGIjuMmS/7bL8gpqVjyv+3Kn7Y/dd+9
leC5R5XcOTjgruFG/vS6h7B/v/yf5gsCsP/nhcqrfzo5m+ncKpTCwGudrrym
dCVbpyvZZW4cyKF0JdcJATK/GlDlOovh6TNM3Nj7v+kBwH/5nR+CBwIBDzcW
qys5eXrYHY81JpHqNzbq/vWvf63u378vNEyZMsXk77dv31a1atVS3/jGNyga
xMnRuer9O1brb5+ppKTXrvIbuZPlWPkyXVtmyDmmH6NETbKHZ6pg/C1GsPL9
xt8Jxt8Fyu8mS0f2nO5LfuZK8mNUv9hV/YgVSo2C6sfIenVG9ZOh+qlQ/XRX
9WK4v9TDMov2yT2zD0bfRNOv+q0+1e+Jo3ralkw/luovieqvypQ3o/pbpPpM
r+r1cAZMX6veKD9PlB9f9dr1OS3NIrtnvdOod44ecM8Rv6eXaHVH9BALy17k
LdMLIra+8RgNuvDtXmx9P7EuMTD6vplXrC5n5+kBxpARuGDkCNSoPVGlpaWp
/fv364d79eqlq8+wSLq4uFh16NBBPXz4MPTt2GrnmjdD1P5UJf17lqX2Yp/a
xePbV03tdppjBmOMxzcY5Hp8Uyi9OTy+pc/jk6H0jj6P70EeP0NSnAClD4LS
h0Dpw3xKHyeXkk5c71X6DJkTPQf+Pg/+viBA6SuPuDeKXifpDd1bbrOldL1c
uKX0/aL0Q7dY6UdF6XS7WLpJ9OlKlH5NrigwSr+dKWqX1RjvQ+Wfoz3IUa7H
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
mhdW74SXVv/k19agTS2ufX7XCmB/A9nfIPZ3MvsbzP5OY39Dyzz7FsZ+z6CY
TC9rsaaVvbZCSl9ZwSVf6T8vc/bt407um7dFyDvYt48dPZeqn76vPmed8+Hv
qJ90g/5Oux/pZfXnDj7vAyeWSU4su3l5XZKX3e7ifFdZEcB+g+v7ffbZZ2+F
xNt6vR18xa7Ox2R+wy/W1QTM9TWUY3z+ue0p5jVtllN1m4UOSK6XT/M2jfu+
l9/pz9WF3D709Pr169bfz6f1YpfuAHyoPjPrG368rg/62r9fm0380NnERi+b
8Dat877zbb8wm/ips4k1Xjbh7erE97z8Tn8p0z/6/MrZ4kIvW/S2Nphd91y/
c/a0u9noF85GZ37Djfo6mzCNhLlj+7edOtBmE//zDfe0i7NZc7G36XT0Nxvx
DTfb1dmEmfwxa1586AwT22zid+19Cy2jOZrsE+Rs4k9eNvGbDr+FmSQ3R0n1
Jv7NyyZ+6GUTH3W42d/LX90l/I/moxY4H/WP3/Cj3m0vCPqj7LGg2yL/YD5q
tfNRP/uGH+XZbP/2N5vsbPZHXjbrrXJ4eBzZ/mYznc1+5GWz70qEveXJP8vr
Xbep8/mn9j8o3/kge21p+/RT90a/kL+1uReY/Vlux5ftlqt/uprtOpbQzVun
Ix7W2rCFD/26T+S93loGe8/cVvsHL+/1VpIj3nqdlzoqL7rp+o42wz+XbXur
bfK2W14C/3cSyza1KNK847K8o66uzgoKClIPvoh6Nqt+2/+xxb+Xl7pLSkTr
rbx8+dJqampSD7ainrtazc3N7q3ktP9Ns1v/ya1y9tthsaXb3vpdbmWyXRGP
Mz/7/Nn/AxSvrt4=\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Lat/Long Coordinates corresponding to the inputs", "Subsection",
 CellChangeTimes->{{3.5999284458070107`*^9, 3.599928451287449*^9}, {
  3.599928628180546*^9, 3.599928637821249*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"x", "=", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
    RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ArcTan", "[", 
   RowBox[{
    RowBox[{"\[Sqrt]", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]], ")"}], 
        "2"]}], ")"}]}], ",", 
    RowBox[{
     RowBox[{"-", "y"}], "/", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}]}], "]"}], 
  "]"}], "\n", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{"ArcTan", "[", 
   RowBox[{"z", ",", "x"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.599932512919236*^9, 3.599932542204791*^9}, {
  3.5999520755240993`*^9, 3.5999520823591843`*^9}, {3.599963886618086*^9, 
  3.599963905707925*^9}}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{
   SqrtBox[
    FractionBox["1", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}]], "Output",\

 CellChangeTimes->{3.599932544595007*^9, 3.599952083703744*^9, 
  3.599963909309271*^9}],

Cell[BoxData[
 RowBox[{"ArcTan", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.599932544595007*^9, 3.599952083703744*^9, 
  3.599963909312704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            SuperscriptBox[
             RowBox[{"(", 
              FractionBox["y", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
                 RowBox[{
                  SuperscriptBox[
                   RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                  SuperscriptBox[
                   RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]], ")"}], 
             "2"]}], ")"}]}], ",", 
         RowBox[{
          RowBox[{"-", "y"}], "/", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
     RowBox[{"RotationMatrix", "[", 
      RowBox[{
       RowBox[{"ArcTan", "[", 
        RowBox[{"z", ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}]}], "]"}], "//", 
   "MatrixForm"}]}]], "Input",
 CellChangeTimes->{{3.599932596932396*^9, 3.599932683615942*^9}, {
  3.599932771838604*^9, 3.5999327743177156`*^9}, {3.599963939897573*^9, 
  3.599963946321396*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"Cos", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}], "0", 
      RowBox[{"Sin", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}]},
     {
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          SqrtBox[
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
        "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SqrtBox[
          FractionBox["1", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
       "]"}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          SqrtBox[
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
        "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"ArcTan", "[", 
          RowBox[{
           SqrtBox[
            FractionBox["1", 
             RowBox[{"1", "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
         "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}]}], 
      RowBox[{"Sin", "[", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SqrtBox[
          FractionBox["1", 
           RowBox[{"1", "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
       "]"}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], "]"}], "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"ArcTan", "[", 
         RowBox[{
          SqrtBox[
           FractionBox["1", 
            RowBox[{"1", "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "]"}], 
        "]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.5999326675000057`*^9, 3.599932701168223*^9}, 
   3.5999327749484463`*^9, 3.599952106222109*^9, 3.599963957689822*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"\[Theta]x", ",", "\[Theta]y", ",", "x", ",", "y", ",", "z"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", "2"}], "+", 
       RowBox[{"y", "^", "2"}], "+", 
       RowBox[{"z", "^", "2"}]}], "\[Equal]", "1"}], " ", "&&", " ", 
     RowBox[{
      RowBox[{"z", " ", 
       RowBox[{"Tan", "[", "\[Theta]x", "]"}]}], " ", "==", " ", "y"}], " ", "&&", 
     RowBox[{
      RowBox[{"z", " ", 
       RowBox[{"Tan", "[", "\[Theta]y", "]"}]}], " ", "==", " ", "x"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.59995262664153*^9, 3.599952734374827*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Tan", "[", "\[Theta]y", "]"}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Tan", "[", "\[Theta]x", "]"}], 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}]}], ",", 
     RowBox[{"z", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox[
         RowBox[{"1", "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       RowBox[{"Tan", "[", "\[Theta]y", "]"}], 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox[
       RowBox[{"Tan", "[", "\[Theta]x", "]"}], 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}], ",", 
     RowBox[{"z", "\[Rule]", 
      FractionBox["1", 
       SqrtBox[
        RowBox[{"1", "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]x", "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{"Tan", "[", "\[Theta]y", "]"}], "2"]}]]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.5999527039937153`*^9, 3.599952734945807*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Plot the Workspace reachable by the needle\
\>", "Subsection",
 CellChangeTimes->{{3.599965465538246*^9, 3.599965475670946*^9}, {
   3.600174548178701*^9, 3.6001745684451847`*^9}, 3.6004281874329777`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pA", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "rad"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{"-", "pA"}], "pA"], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], "-", "pA"}], 
     RowBox[{
      RowBox[{"\[Pi]", "/", "2"}], "+", "pA"}]], 
    RowBox[{
     SuperscriptBox["r", "2"], 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]y"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]x"}], 
     RowBox[{"\[DifferentialD]", "r"}]}]}]}]}]}], "Input",
 CellChangeTimes->{{3.600443896318655*^9, 3.600443927283678*^9}, {
  3.6004440642221518`*^9, 3.600444135110755*^9}, {3.600444329092009*^9, 
  3.600444339457542*^9}, {3.60044442291156*^9, 3.600444463933144*^9}, {
  3.600444565947982*^9, 3.600444596147032*^9}, {3.6004742643735523`*^9, 
  3.600474274101022*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   SuperscriptBox["rad", "3"]}], "9"]], "Output",
 CellChangeTimes->{{3.600444094559209*^9, 3.600444135634882*^9}, {
  3.6004443364422827`*^9, 3.600444340216086*^9}, {3.600444428401032*^9, 
  3.6004444643821774`*^9}, {3.6004445719735823`*^9, 3.600444596648806*^9}, {
  3.6004742655575123`*^9, 3.600474274821487*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"4", " ", "\[Pi]"}], "3"], "/", 
  RowBox[{"(", 
   FractionBox["\[Pi]", "9"], ")"}]}]], "Input",
 CellChangeTimes->{{3.600444610594656*^9, 3.600444615632997*^9}}],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.600444616053884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", 
    RowBox[{"2", "\[Pi]"}]], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
    RowBox[{
     SuperscriptBox["r", "2"], 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]y"}], 
     RowBox[{"\[DifferentialD]", "\[Theta]x"}], 
     RowBox[{"\[DifferentialD]", "r"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6004443578506804`*^9, 3.6004443632006207`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", "\[Pi]"}], "3"]], "Output",
 CellChangeTimes->{3.6004443636699953`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"T", "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
        SqrtBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pA", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Tdx", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"T", ",", "\[Theta]x"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Tdy", " ", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"T", ",", "\[Theta]y"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"T1", " ", "=", 
  RowBox[{"Tdx", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]x", "\[Rule]", " ", "pA"}], ",", 
     RowBox[{"\[Theta]y", "\[Rule]", "pA"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"T2", " ", "=", " ", 
  RowBox[{"Tdy", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]x", "\[Rule]", " ", "pA"}], ",", 
     RowBox[{"\[Theta]y", "\[Rule]", "pA"}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"IntAng", " ", "=", " ", 
   RowBox[{"ArcCos", "[", " ", 
    RowBox[{
     RowBox[{"T1", ".", "T2"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Norm", "[", "T1", "]"}], "*", 
       RowBox[{"Norm", "[", "T1", "]"}]}], ")"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "[", "IntAng", "]"}], "*", 
  RowBox[{"180", "/", "\[Pi]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SphericalQuadrangle", " ", "=", " ", 
   RowBox[{
    RowBox[{"4", " ", "IntAng"}], " ", "-", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"4", "-", "2"}], ")"}], "\[Pi]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "SphericalQuadrangle", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"4", "\[Pi]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6004249150829067`*^9, 3.60042494849509*^9}, {
  3.600424996633286*^9, 3.600425016343239*^9}, {3.600425100760051*^9, 
  3.600425113631236*^9}, {3.6004274212624817`*^9, 3.600427510068548*^9}, {
  3.600427545429915*^9, 3.6004276004441032`*^9}, {3.600427630905546*^9, 
  3.600427635512965*^9}, {3.600428020961132*^9, 3.600428034760983*^9}, {
  3.600428083171658*^9, 3.600428112659356*^9}, {3.600428144789568*^9, 
  3.600428177757031*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]y", "]"}], "3"], " ", 
      RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.600428178063549*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
     RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
     RowBox[{"3", "/", "2"}]]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], "3"], " ", 
      RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
      RowBox[{"3", "/", "2"}]]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.600428178068461*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["4", 
     RowBox[{"5", " ", 
      SqrtBox["15"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox["16", 
     RowBox[{"5", " ", 
      SqrtBox["15"]}]]}], ",", 
   RowBox[{"-", 
    FractionBox["4", 
     RowBox[{"5", " ", 
      SqrtBox["5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.600428178071382*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["16", 
    RowBox[{"5", " ", 
     SqrtBox["15"]}]], ",", 
   FractionBox["4", 
    RowBox[{"5", " ", 
     SqrtBox["15"]}]], ",", 
   RowBox[{"-", 
    FractionBox["4", 
     RowBox[{"5", " ", 
      SqrtBox["5"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.600428178074918*^9}}],

Cell[BoxData["104.47751218592992`"], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.600428178077821*^9}}],

Cell[BoxData["1.0107210205683144`"], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.6004281780808764`*^9}}],

Cell[BoxData["12.566370614359172`"], "Output",
 CellChangeTimes->{
  3.600425122295154*^9, 3.6004274593565702`*^9, 3.600427510571603*^9, 
   3.6004275479769993`*^9, {3.6004275889344597`*^9, 3.6004276009013968`*^9}, 
   3.600427635957477*^9, {3.600428027637597*^9, 3.6004280353654003`*^9}, {
   3.600428119746579*^9, 3.6004281780834417`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "2", "]"}], 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600428875282843*^9, 3.600428876061159*^9}}],

Cell[BoxData["1.224744871391589`"], "Output",
 CellChangeTimes->{3.600428876535118*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ArcSin", "[", 
  RowBox[{
   RowBox[{"Sqrt", "[", "2", "]"}], 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", "/", "3"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.600428612863104*^9, 3.600428638231365*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"ArcSin", "[", 
   SqrtBox[
    FractionBox["3", "2"]], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.6004288469329853`*^9}],

Cell[BoxData[
 RowBox[{"1.5707963267948966`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.6584789484624083`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.600428838195078*^9, 3.600428847480625*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  FractionBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"ArcSin", "[", 
       SqrtBox[
        FractionBox["3", "2"]], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "3"], "]"}], 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "3"], "]"}]}]}], ")"}], 
   RowBox[{
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "3"], "]"}], 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "3"], "]"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.600428736284528*^9, 3.6004288336455936`*^9}}],

Cell[BoxData[
 RowBox[{"ArcCos", "[", 
  RowBox[{
   FractionBox["4", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox["\[ImaginaryI]", 
      SqrtBox["2"]]}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.600428781237001*^9, 3.600428834193523*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Norm", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}], ",", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "3"], " ", 
          RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
          RowBox[{"3", "/", "2"}]]]}]}], "}"}], ")"}], "\[Cross]", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]], ",", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
        RowBox[{"3", "/", "2"}]]], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]x", "]"}], "3"], " ", 
         RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
         RowBox[{"3", "/", "2"}]]]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6004250496142263`*^9, 3.600425054425026*^9}, {
  3.6004251336501713`*^9, 3.6004251574013033`*^9}}],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], "2"]], 
      "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], "3"]], 
      "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"]}]}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], "3"]], 
      "]"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.600425055089183*^9, {3.600425148361537*^9, 3.600425169675601*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{"-", " ", "\[Pi]"}], "/", "6"}], 
    RowBox[{" ", 
     RowBox[{"\[Pi]", "/", "6"}]}]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{"-", " ", "\[Pi]"}], "/", "6"}], 
       RowBox[{" ", 
        RowBox[{"\[Pi]", "/", "6"}]}]], 
      RowBox[{
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
              "2"]], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              RowBox[{"Sin", "[", "\[Theta]x", "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
              "3"]], "]"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"Abs", "[", 
            FractionBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]y", "]"}], "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}], ")"}], 
              "3"]], "]"}], "2"]}], ")"}]}], 
       RowBox[{"\[DifferentialD]", "\[Theta]x"}]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "\[Theta]y"}]}]}], ")"}]], "Input",
 CellChangeTimes->{{3.600423834993435*^9, 3.6004238779135447`*^9}, {
  3.60042411492665*^9, 3.600424129011801*^9}, {3.6004249544637003`*^9, 
  3.6004249875019827`*^9}, {3.6004250243991013`*^9, 3.600425033554434*^9}, {
  3.600425180062076*^9, 3.60042518083391*^9}, {3.6004282010861692`*^9, 
  3.6004282131470003`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(First[$Failed]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.600425544748679*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(First[$Failed]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.600425561217819*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \
\[NoBreak]\\!\\(First[$Failed]\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/normal\\\", ButtonNote -> \
\\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.60042556865609*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(First :: \
normal\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6004255686592693`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"find", " ", "the", " ", "angle", " ", "be"}]}]], "Input",
 CellChangeTimes->{{3.6004273619334707`*^9, 3.6004273662855883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "zvIn", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angRange", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"solidNeedleRange", " ", "=", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"zv", " ", "=", " ", 
           RowBox[{
            FractionBox["zvIn", 
             RowBox[{"2", "angRange"}]], "+", 
            FractionBox["1", "2"]}]}], ";", " ", 
          RowBox[{"100", "zv", " ", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
             RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
            SqrtBox[
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
               SuperscriptBox[
                RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}]}], ",", 
         RowBox[{
          RowBox[{"-", "100"}], "zv", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
            RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
         RowBox[{
          RowBox[{"-", "100"}], "zv", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
              SuperscriptBox[
               RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}]}], "}"}], 
       "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", "angRange"}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", "p1"}], ",", 
           RowBox[{"zvIn", "\[Rule]", " ", "p2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", 
            RowBox[{"-", "angRange"}]}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", "p1"}], ",", 
           RowBox[{"zvIn", "\[Rule]", " ", "p2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", "p1"}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", "angRange"}], ",", 
           RowBox[{"zvIn", "\[Rule]", " ", "p2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", "p1"}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", 
            RowBox[{"-", "angRange"}]}], ",", 
           RowBox[{"zvIn", "\[Rule]", " ", "p2"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", "p1"}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", "p2"}], ",", 
           RowBox[{"zvIn", "\[Rule]", " ", "angRange"}]}], "}"}]}], "}"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"p1", ",", 
        RowBox[{"-", "angRange"}], ",", "angRange"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", 
        RowBox[{"-", "angRange"}], ",", "angRange"}], "}"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Specularity", "[", 
          RowBox[{"White", ",", " ", "40"}], "]"}], ",", "Yellow", ",", 
         RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Graphics3D", "[", "solidNeedleRange", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.599966578201754*^9, 3.599966613306287*^9}, {
   3.5999666548431892`*^9, 3.599966697635215*^9}, {3.5999667459712877`*^9, 
   3.599966750201412*^9}, {3.599966800178604*^9, 3.5999668040189466`*^9}, {
   3.599966871937748*^9, 3.599966928623825*^9}, {3.5999669904130983`*^9, 
   3.5999670045444717`*^9}, {3.599967039779744*^9, 3.599967189584064*^9}, {
   3.5999674101089497`*^9, 3.599967431081604*^9}, {3.599967545662589*^9, 
   3.599967570045042*^9}, {3.599967657457685*^9, 3.599967831186286*^9}, {
   3.599967897682706*^9, 3.599967931943676*^9}, 3.5999679963934917`*^9, {
   3.6001293811737843`*^9, 3.600129411232418*^9}, {3.600129473405304*^9, 
   3.600129483064996*^9}, {3.600169381146082*^9, 3.600169381521744*^9}, {
   3.6003771264708967`*^9, 3.600377157681566*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztnHdUldez9y0IFlDEhoVYQcEGSNUDzwAeii2ACHaNBbvGmNgVNdaoqCTY
a+w99s4zdmPBXpHYu6ixYNfrOXvmYbnvu6/rt9a77l/Xf/biZJzzne/Zz95z
5iOp2KFPbOc8uXLlSs6XK1feL+t486IZN48dDf474U2UZV35S/Lm8z4X0ybe
vNl68bJjwbUSduxu53g4eOqblGMRzy+mVdp669bMNseD8cmMTlGR+4N7fF4c
uXPqpTTfC9NN+/49HjzcucGS37PSgvPabClSsOjltF+exi/P3elE8Kril9s/
Mm0LvjXRXPR9v8tpibb+nYtuORG8e/GKEivyrQ/uX77V7Fo7L6ddSB6zc8id
E8HNbfNsjiu0IPjd8CLdyt2+nJYr14gFqa9OBH/S2xcr/LxbPbHmxMeI+DSO
5/y7RP40zs96Vgg9aayH9Q8V+tNYv1RvGtc76Wt/0qaRP5Kfaeyn3Z8/FiuT
XABGr2//d+kv6+AD+VovrFgSu7UMm7+9bUEwt6z/95VP+eB6oypHGl4oicXN
IV18HAqBXfembvM65gH/EY/9u/QqhfeyJ6wdMbsQjO32+cix4R+135qkNT14
rxS2s4nx+8XOHqZd3VY13j1byz2tx5sK4c6Iqy8u2h9nD8W/91+5LzVLu5G3
xLtiE5yx2+YNx5+Osoe2Sds/VJ+TqQXHH/nNcYMzTqjWV2+QYg/xuy9dbJ22
wiTWnPgEEa9zPOd3Evl1zs96pgg9Outh/aOFfp31c722ol7keruTP/WFP3iD
/JH8RPaz0eSiQaWTS4P/vNwvnL+sl0q2+3NBRTccrRXeu61tGfih9V7HK59K
wNjCKfkbXnDDN8PiRtdxKAu3vys6aW5HJ3i1NrFfYq+qmO/O+4NJs8tCl+Mp
p48Od4Ain3wnHrhXFau99mz4s105mDTyVK9m7rYwaPuxGhXCq+HsCrU374sr
B90LF9ywN/WjVnRKWI1iE6rhzAtjMp+MKgd4uY1N9TlZ2puflu8qsqEaTh1y
4GRUSjlIaxiZv3XadpNYc+J3iXid4zl/V5Ff5/ysZ6LQg6yH9XcW+pH1c723
RL3I9Y792h8cR/5IfiL7eaST7/YUj8oQ13flCMu6bWmbif6zPPF+12GzChyu
DOnmH9tWTqoAjd6PL7m9ghf+VWN097tRVWDv+Deju6eWhTuTeyy1T/HCyC6z
Zl/bVAXyPI+9Vqp8SejePdzvbJYXOmyd+3F6PldI/O3mrc/zHcH/3F9PZvh4
4wrfHcemaa6wuO5u2xhPWyjZJK1meqI3Du3W4qF3B1e4u6N2vvY+2Vpim1cz
j432xh5e98tv6+UKy8rFnjmQvM8k1pz4myJe53jOv1DkR87PejoLPch6WH8u
oR9ZP9eLol7keh+QPyeEP8j+SH4i+/k4z83TzsnuULj4mXGW1QYnmhdU9MMi
G/vFbmvrAb0ykzZf/uQK8U+PrGhwwQ+7lPnHqY5DdYh5+zR4bsdKcOpA5aKJ
vfyx6FWf2KTZ1eHssKvNjg53gfTz/7oduOeP458tPN/PrgbYnbvq2My9JHgf
f3+ofHgA5s1oGbQvrgYU7f3CZ2+qAyw91/Kg04QAXHPvaecno2rAk7Ge4z3m
fNRic5eKK7IhAB1dnyREpdSAPsVGLGyVdsQk1pz4ByJe53jOX0TkR87PevIJ
Pch6WP9poR9ZP9cbLepFrteR/Okp/EH2R/IT2c/Ci5Ifzf+3Nhze+i7ZskZf
2fHZdlU9nPNx8xjvIZ5Q6JcpBacOrw7tbuWvlznRhIVt5mZq9z0B1nWs9+sH
N9j1PmOoHhmEPardHz0FvOC0TZ3E4D6VoE7IvFJbbgThyNQz8StGe8Fyl4tB
qzaVhZoHwhcsTwhGTxie8HazF2B06oaZw5zAp9Xr1gmrv1w33vufnTvtBe9X
zhzzbkQeCF4aUKRpZjC2tH93uFeGF/gVXNf7eVa6Saw58a9FPHI859dFfuT8
rGeZ0IOsh/WfEvqR9XO9mqgXud655E9B4Q/+wP587Seyn7MXzBuV4lEH9q4p
2tCyfv/uRWv/WYC1K3l2KHC4DjQb+71n5SRP2NJjyd1tFULw4bsjXnejfMCz
40X/7qnVIa50g5/tU0Lw1M0t7a9t8oFdRwcsKlXeDRrFV7E5mxWCuPHcvun5
fGHppq5bPs+vACX+ObJrhk8o/uP0/dRpmi8MfPjXkWjPknDzWdS7E4mhaPdT
8jrvDr6Q5Fj6cDsfW0itUrPzsdGhWNP2462tvXxhRK7e8w8knzGJNSd+iIhH
juf8/UV+5PysZ4nQg6yH9e8U+pH1c721Rb3I9Ur+4FbyR/IT2c81T/pNadba
D777tLSJZe1vV6hujzZhuD98dfB1J39wjU1o9Sm4DuzsfKD2yPdhePDfV2Mm
rfYHx0mus6uV8oRjPm4eO5Lqo++8X021qwbA4qm7rz5Ld4fPhQYPPfawPn48
eaHWmLEB0P/SnYYenSpDsZZPlrcKMuOkO+X/dj8aAF6jj1/Lf6s0ePg4hz8b
YMYKG1r0nPo8AGwGzMp/8F4BmJS9JzRrthlzWf8Ewp33o/NNXXbeJNac+M/9
rfHI8Zy/lsiPnJ/1/CL0IOth/X8K/cj6ud4iol7keg987Q/uIn8kP5H91IMa
zHVODoQh39eNtazzilcqtaBiODbv4VZ2W9u68NKl3djLn3xhb7vbAxtcCMdF
9ytd8XaoB+MT2znP7egNEJ3neudeETgrIcY5aXY9mByf2/no8JqwYe/Jl/vv
RWC9rEuz+9mZIOJjh5tx7m5Q9EKxP8qHR2K97c9y74szwX2X+9mY6gL9Btyd
5jQhEgOfVfF4MsoE4zNLN/CY4wCjjjSpUGRDJJ59m6dcVIoJGrye07NV2iWT
WHPifxXxyPGc/47Ij5yf9ZiFHmQ9rH+i0I+sX6oXud4WX/uD+8gfyU9kP09O
qrAyQzfBxYXpzSzrvoqBL8/cicQHUxa9nrwqCPY/SNywOS0ADrSw2VdsQxQO
ufZ9rcu9gyFXyKzpRf7y+XKe/JPq1KoBfiha/mW6gwZ1Cy9eGTPDEzoMcO21
+3YDHFgww7bDeA1KVbo+MOlJNSgcGzjiVpOGeO+3vXVbXtPgZEbucaYlFWDH
zs2ZPrMb4opSb14sLQBgW+nEwYjljjBg9rWPnocb4hmLz04Aa59vPOt2IcMk
1pz4PCIeOZ7znxD5kfOznhJCD7Ie1h8o9CPr53o/g7Ve5Hofkj/7hD94kPyR
/ET282ZG9pb5/2rg+7xDC8v6sFb0adtVDVFrWbi79xCAP7b0vjpleD041rRK
ocyJjbBGj+C92n2AgWXPFv/1gx/UHLezoR7ZGD0Ts7tMgRCo3dccEdzHG0rW
HHJn843GmPF778AVo0PgfnibIqs2VQeH9LY9lyc0wWO1/g58uzkE1qyYkjJz
WCXI/WmUe8LqJui7LfPMudMhENVscuK7EU7Qu+ePGbGZTXB3f5tVvTJCwOnJ
33WfZ/1jEmtOfH0RjxzP+VeJ/Mj5Wc9doQdZD+uvJfQj6+d6B4h6ketlf1KE
P8j+SH4i+zkoNfHGX9NC4MiiIessa2FTl3V1ezfB8Y8bXnKpGArtR/a36xEc
DCca149blvg9zrwb98hpVig8fWX/e3ZkIETHHMvlVzYaO4RlNvN/FwqVzt27
7RHhAx363l8X3ycaB/3Zp095cxhs7XFl6bmBtSCfa+ga37+iseJMr3jz4DAY
94vL/JfxVWDJwhU7Tf9EI8bv35B3dhhMGN/Ybm3L4uC1YETrnW+jccmLfAEp
S8Jg58/PTv2T54ZJrDFG/BgRjxzP+UeL/Mj5Wc9moQdZD+uvKPQj6+d6n4h6
keuV/MGT5I/kJ7Kfefec7pLiEQYDjpo9LeucKrrZf1Y0nh0+IbzA4TCY6aaV
rpwE8LDyxvRtFWLQtkOPEnej6kOXU+FFu6fWA/t2O1rZp8TgHxUOhF3bVB9K
+f82qlR5PzA1KvboTFYMOm/4cen0fGYwH6k+//N8T7C5FffnDJ9YHJR79k/T
NDN0Cl29MtrTDSL3Tbl+IjEWG2evmOrdwQzHdzmsaOdTEmrmj2p4bHQsJv9o
d2hrLzP0ej5k9IHkmyax5sQfFvHI8Zz/B5EfOT/rCRN6kPWw/pJCP7J+rjdR
1Itcr+QPsj+Sn8h+TrptetJvf31wffHlm8mXtdbqBj4x72OwXNHDm1/2NMMI
+/3rHK+FwOMKof3Kfanr58yR2o53Zri2asSUzBtBcLjn8q038zfFgx9XeY3r
FQ6FZteoYPPaH0pUDa76fc+muE3vm+FwKBzWtuz+4I/c3pB3UZeZb7c3xVPd
80zJtIkArUjgljUFqsHjW/1t2z1tildSk/v84BEBhZ+eiHQq7AxV+xate7VI
HA7Iyh+X4RcB5X+0C1hV5rZJrHFGfH4RjxzP+U0iP3J+1rNa6EHWw/oLCP3I
+qV6ket1+dofzCJ/JD+R/Sxuv+LnZq3D4VzZK3Us616vC5V6tGmKiYttKl93
ioCuz8PrfwoOg6cuZ0qNfN8UbzSf2W3S6ghYHZo5tlopgJGDU4vuSIrDN1em
la9dNRI+fUjf8yw9EJ7m7tbx2MM4jE//qeiYsZFQPGuFj0enOpC73eDkVkHN
sOq57qvdj0ZCmauHMP8td5iSr22NZwOaYWffn5tMfR4J0ZWSHxy4VxoqXblc
LWt2M2zfveDNz58j4XRWyqMpy+6YxJoT30DEI8dzfmeRHzm/pAdZj6QfWb9U
L3K9XcifLsIffEb+SH4i++kXvbqJ/u6t1vPGz829j7zWdjwr2HRbki0OPlYL
yya/1VzOfdffsqaVb3pyUUVb9KX4biJe3/7/jtc5/sG20suSH5nBcVr95/cc
64PfmHWR+D4Wowf+tOH2FDMMs3v1k2Ud2Htq9bZrYo34wiIefSm+hTlmTKdd
4RDV0Lmn+8n6+Ee79Y/2rG+KUX8vLXoi6FjwkBvxpx4/PRL8qfEit2EzLqZF
0uuDxOtpH+l1ztNQ5IFUyiPpQdbTZ2vDT+MOPtA6Qy2fBavvay+u1/NcFJOt
S6/r/HrkSXP1Xa7h8CrP01YD6phha+iG1Iq1mqL0OvLrnb5bXbp88gMt1mXO
ye++rOEXsrYsqZitD6noOehDvmPBxau8adzhn7/TVnSsm+nW5WLaityBnqcn
hcOKFjfSXKeboVWhQnm7jmuKdUIdirlkm2HltC5ny2Wb0SW6zvLbNk1RyhPM
eaT31fl9pTzAeaT3RX7fXP/353/lz+OASqnOyQXwoVih38injgsqlsSNKxo5
b2tbEP37jcbLn/JBkQ49+ze4UBLXJGR8+T5SCGedi4ua2zEPrCvw55fvI6Xw
YtH7ZZNmF8LSDZ4mHh3+Ubve+dHr/fdK4f49ixb2s7PHDwfuujRzz9bahpac
VT7cGdPfmwvsi7PHt7/+Fr43NUubFggznSY447+fO3s/GWWPr2LuzPKYk6n9
qv9ctcgGZ6wYlVIlKsUeq27M97NlPibWnPhMEa9zPOfPEvl1zs96soUenfVc
Iv3FhH79BulfTfWminpxLdW7ifypI/xB9kfyE9nPJ9afS2OWWKG/9XU33GLN
UwYDrXlKQFFrHjdcb33fsjjH+r5O8Jf1faviZavOsljOqtMBbll1VsVD1rrK
4SdrXbbQ3lpXNTxt9aEcfrT68FH7w+pDNXxp9a0cvrX6lqWNsfpWDatYfS6H
HlZ/L5nEmhN/Q8TrHM/5n4n8OudnPa+FHmQ9V0h/CaEfb5P+tVTvDFEvrqd6
t5I/fsIfdCJ/JD+R/dyw6nIfy/x3vVih1KJNjSxz4LHDA2MLHK6M3eI7Rlvm
6hOjTl/aVsEL942sUuVuVBW8G/y5l2WuHjpuUFfLnPkHhydx1zZVwd8H1Dlh
mat3m/Ts7ZksL4xtMmj79HyuuKdYrwuWufrhDac2WubYGUNfjp2mueL7m/de
RnvaQs3qns9PJHrjq6TjS707uOKgjz1etPPJ1v6cMqONZU5+eWuvjK29XHGe
2WaGpV8Va058oojXOZ7zPxf5kfOznh1CD7KeDqQ/WehH1o9U7w1RL3K97E8X
4Q9OIn8kP5H9FP670353h1+s/vvhZuvn5YEB1s/LFRytn5cfrrN+vtVxtvXz
rQTi8/Wn/Vwdy1j3gwvctO4Hfzxo3T81aD+XhHbW/ROAp6z7rQa+t+43B/jd
ut8C8IV1f9bA19b9+VEbbd2fAVjZup9roLt1H983iTUn/pqI1zme8z8V+ZHz
sx6xn0si62H9Yj+74C3Sv5bqFfu5Eq6jereQP77CHyxK/kh+IvtZ9XD3nZb5
r6tY4fQP1c9b5sA/Pqjdx3uIJ+abutTTMlf/Y7Bdccvc+HjJv49o9z0RC6xq
ZZmrl5l0tLllzly1UN++U8ALo5ObjbDM1Vtod19t/tJHzy7Zuf6K0V5o6t++
s2Wu/upMqyTLHLvDnmPmt5u9cGhKyeOWuXp2RHSwZe79Wk+6du60F9ZtWnuh
Za7e6WnMv7GZwbjFsp0zvuyX7+xinmc9MYk1J95DxCPHc/5fRH7k/KzHR+hB
1sP6Gwn92JL0H6N6d4l60Znq7Uv+5Bb+IPsj+Yns50br/q6Df4mVzg3Acdbn
og52tz4XniCeixA6N3zwnvU5qg5h1ucohJ47H/zD+ty50bkRgk2tz6kvplmf
0wpwxPqchuJV63Ptix+sz3VJqGV9rkMx23oO+OJg6zlgC4ut50AoXrGeG744
33pePDeJNSe+i4hHjuf8L0R+5PysR5wbFZD1dCT9U4V+ZP17qV5xblRHrpf9
6Sr8wcnkj+Qnsp+n/h02yjL/TRcrhE87XcsyB55bLMz3upM/nrrdb7xlrp5+
fn5Vy9x42+OkpEmr/dGurgda5uqDjkyuYpkzzyvSI6B21QC82L5omX/T3cH1
bdZAy1zafuzkGmPGBmCbx+6DrXP1wS+WWubY8SaXI+5HA3BInR0uBW6Vhvbe
AWbL3PulVtoyJ8fty1eEW+bqv1cda52Tf/ps+ROAt6zz9FemWzRX5/g/RTxy
POfvK/Ij52c9zYUeZD3zSf8ZoR/dSD/Xm1fUiwO5XvInXfiDJ8kfyU9kP8V5
EkjnSSCdz+F0Ptel89mXzudwOp/r0fnsTedzBJ1v9eh8rknncwSdhyY6n93o
fI6k89NE57MLnc+RdN6a6Hx2AHHeRtL5bKLz+Q2dzznx4nx2QI7n/OJ8dkHO
z3rE+eyGrIf1i/O5Jp3PEXQ+16Pz2ZvO5wg6n+vS+exL53O47Ceyn/YjDi23
zH8LiBWW9HV4YZkDHwuKfz95VRAuzJ36xjJXb/ok8KBlbrxkn5/f5d7BWKtP
0hnLXP1ug61zLXPm4sU7f0530PCvWXcvW+bqC87c72+ZSw9/taV4h/Eazp+3
eK9lrr6mYOAkyxy74a7eDVpe0zD44dptlrn6IYh8ZJl7v23X4sPSAoDlPk3N
tszV+yd0tPc63FD0dU6AvbuOvel24b1JrDnxhUU8cjzn9xf5kfOznulCD7Ke
EqR/jdCPC0n/YqrXQ9SLd6je4+TPXOEPxpE/kp/Ifrpbz2uNzm8NzlrP7YZ0
zgPaWc/5epBqPecb4QnrvQC413ov+EE5673QGKtZ75EQjLHeI94g7pHGOMd6
74TQPVgdXlvvnSbY0XpPheAw6z1VCd5Y76km+MZ6r4VgPeu95gSJ1nutCVqP
54wQ3GS9/z6ZxJoTX0PEI8dzfnEPVkLOz3p8hR5kPay/idCPrUn/cap3j6gX
y1C97E8e4Q+yP5KfyH5WGTfurmX+W0mskCc2aptlDvxh0+brLhVDsfd3W7ta
5uoXbc93sMyNI4/3z3aaFYrNlpy7bZmrr0zsU9AyZzZPqt3R/10ovhh1wK16
hA/YX+i70zKXHuDdZ3h5cxhebeJS4PzAWrCosbbDMscu79I+0Tw4DPfUTbpu
maunVl1zxDL3flN+2b68s8Ow1YoTUZa5+uqwCj0sc/JIy7GxJAyHPtx/7Z88
uYPEGmPER4l45HjOv1nkR87Pes4KPch6wkn/E6EfWX8E1fu9qBdXUL3sTzfh
D7I/kp/Ifor7MYzuxzDqN6LpPg2jfgOo34ihfqM+9Rv1qN+IoX6jPvUbftRv
xND9bqZ+w5P6jVjqB8zUb7hRvxFL/YOZ+o2S1G/EUr9hpn4jT5BYc+JFv1ES
OZ7zi37DDTk/6xH9hieyno6kX/Qbfsj691K9ot+oh1wv+yP6DaB+I0b2E9nP
kPTqby3zX02sUHvWviDLHNgpKm3/y55mnDevx2PLXH1tkYARlrmxyf9MzI53
X3y47P7aMlf/Z/mvhyxz5hHJa8LH9QpHv55/9rPM1Q+H9gm0zKVrd//1ucOh
cHQY0bBaam5vyCrRYY1ljj3z6vjlmTYRaJoYXWBtgWpwpNbmspa596trz8f/
4BGBs2ILzrPM1edkFI62zMl7Wo4Nvwjcu7B+k1VlbILEGmfEjxHxyPGc31vk
R87PevILPch6WL+X0I9HSD/X20/Ui5lUL/szR/iD68gfyU9kP89Y+49wPClW
iLT2IU1xvrVvicAz1r4lDE5Z+5amuMPa50RgfmufAzDE2ufE4QJrX/Tl3rb2
RYFQ1doXxWFhax8Vie2sfVQdKGHto5phc2vfFYnDrX2XO3Sw9l3NMNvap0Xi
LmufVvrLeWLp05qhmHpFofh3EvmCxJoTv1TEI8dz/p9EfuT8rKeF0IOsZyHp
Pyf0I+vnevOJenEw10v+iL73Sz9H/kh+IvtZtOto593v3upblmStqn3ktXb8
7wITNyfZYi/HU/Pdd77Te/sfvjzW+6XW8/7olKGudrj0Yb1lzxLe64PmDZv8
S8oz7fcR++pWWGeHb6/MML05917Xdv44tMf5B9qo95/ndimTH1/ue+tr6/1B
//DP1Dm5h9zUnl1vbP+pe37s1L9E6a19PuhHWx0us9H7gla5s39g94X5scra
w+d/Sv6gr9/8bE3S3D3a0C1Zev5d+dGVXh8uXteH0eucJ03k0TkPv2+2eF+d
35d1BgqdOutcTnUNFHXpf1BdvcmH7sIHvRf5wL5tFL7p7JuYc77TxZzzlSbm
eLY053yviznnc030h3Y053yvizlnFs057Wiu+MU3a/95l+ac+WkO+UEXc85M
mnPmp7nlB13MOU/QnDM/zTk/6GK+uZ3mnDnxYs55Qud4zi/mnJk652c9Ys55
V2c9l0i/mHNm0ZzTjuac73Ux53yur6V6N5E/Ys75Smd/Tm9bvzn5kRnfjQoI
uO9YH8JDo5tZeErB6+f2WDiHnVihXokGfhbecYri34h45PiiGf1SO+0Kx++e
Tdli4S+pU1e8tXATJ3q9ongd+HUpP3L+WY7jA3e5hmOZK7WWWfhIt0EF/7Rw
kJn0urN4Hfn1/3ke/lYX89u3mpjf2mKFRrOXHK/5UO82/bTTo1t3tdWXB2/K
Wp2tq/IMaFqlb9Lkh3pEwcctCpS+oxV1nRiZ/ilbv54SmLTj9kO9ZtcJ09s2
vKVtvLB4bfMGr5V5vGya/TCrziO9ez2HEg2H3NACAje1Xp78Wv/4vet3psGP
dMc6zsMaxl7TBlS7OfDsMXWeWrHF0ndvf6T3uO3/YdCqDK2GTaNBL3O/0Yd8
WBTu8/SRXnZA75j1ny9qrfJuuVbe640yT6MmSWe2uzzWm0e+PNYj9py2ISb4
XdcWb/RQc61Xbeo/1sfUtvGqsviUFvGD6/rrg9V5jhSLCvTp+Fiv9XBu8XG3
/9bcK/0Vk5r6Rv/t8oD8UYMf647+02+2GLFPG3JtRFLKSnWeXZVbTFo24bE+
4cDh1q98tmrTv1uZ78bWN/rJ4XtmNJ32WL/Qe9W8c3PnaZ0cnh8fu0edh+P7
iXid4zl/X5Ff5/yqPKzfRujXWT/XW1HUq3O9qjzs53Dhp85+sv8xwn+d/Vfl
4c+3hPh8df58a9N+6CT2g877QZXnE+23QmK/6QNpv3nT/kwU+1MPpP2pynOD
9n91sf/1TbT/+Xkxi+dFd6LnRZWHn8cu4nnU+XmUnl+dn996tS/0HHnwgX7q
aQmvWavv67U87UfMicnWE7rV005PCscMrxcF3aabofqqgo4W/pjV1b2CS7YZ
H9IacnbyRguvlF4Hfj2e8lwWedCD8vD7nhXvq9Wm91XV9X9//v/+YQ73WOJx
xDUNzsn8jrimwTmZbxLX1JlzMt8krqkzV2SeSFxTZw7J/JG4ps7cknklcc3d
X3NOZ+aamhxPXFOT8xPX1GQ9xDU15pzMN4lrAnNO5pvENWGT5A9zYtlP5nBP
JB5HXNPgnMw35zDnI+7HfJO4psE5mW8S1zS4IvNE4po6c0jmj8Q1deaWzCuJ
a+7+mnNWY66pyfHENTU5P3FNkPUQ1wTmnMw3iWsCc07mm8Q1gTkn803mxLKf
zOE2SDyOuKbB8ZhvEtc0OCfzPuKaBudkPkhc0+CKzBOJaxockvkjcU2duSXz
SuKau7/mnN7MNTU5nrgmyPmJa4Ksh7gmdJD0E9cElOolrgnsD/NN5sSyn8zh
nkg8jrimwTmZb85mzkfcj/kmcU2DEzLfJK5pcEXmicQ1DQ7J/JG4ps7cknkl
cc3dX3POAOaamhxPXBP+W37irLIe4prA+plvEtcE5pzMN4lrAnNO5pvMiWU/
mcNVlXgccU2DczK/I65pcE7mm8Q1DU7IfJO4psEVmScS1zQ4JPNH4poGt2Re
SVxz99ecM5i5JsjxxDVBzk9cE2Q9xDWB9TPfJK4JzDmZbxLXhL6SP8yJZT+Z
w22UeBxxTYPjMd8krmlwTuZ9xDUNzsl8kLimwRWZJxLXNDgk80fimga3ZF5J
XHP315wzlLkmyPHENUHOT1wTZD3ENaGjpJ+4JuyV6iWuCewP803mxLKfzOFO
STyOuKbBOZlvEtc0uB/zTeKaBudkvklc0+CKzBOJaxockvkjcU2DWzKvJK65
+2vOaWauCXI8cU2Q8xPXBFkPcU1gzsl8k7gmcL3MN4lrAnNO5pvMiWU/mcM9
kXgccU2DczLfnM2cj7gf803imgYnZL5JXNPgiswTiWsaHJL5I3FNg1syrySu
uftrzhnJXBPkeOKa8N/yE2eV9RDXBNbPfJO4JjDnZL5JXBOYczLfZE4s+8kc
zl7iccQ1Dc7JfJO4psE5mW8S1zQ4J/NN4poGV2SeSFzT4JDMH4lrGtySeSVx
zd1fc86GzDVBjieuCXJ+4pog6yGuCcw5mW8S1wTmnMw3iWsCc07mm8yJZT+Z
w7lLPI64psHxmN8R1zQ4J/NN4poGJ2S+SVzT4IrME4lrGhyS+SNxTYNbMq8k
rrn7a87ZhLkmyPHENUHOT1wTZD3ENYH1M98krgnMOZlvEtcE2R/mxLKfzOGq
SDyOuKbB8ZjfEdc0OCfzTeKaBudkPkhc0+CKzBOJaxockvkjcU2DWzKvJK65
52vOGcNcE+R44pog5yeuCbIe4poQLuknrgnMOZlvEtcE2R/mxLKfzOE2SjyO
uKbB8ZhvEtc0OCfzPuKaBudkPkhc0+CKzBOJaxockvkjcU2DWzKvJK6552vO
GctcE+R44pog5yeuCbIe4prQUdJPXBP2SvUS1wT2h/kmc2LZT+ZwIRKPI65p
cDzmm8Q1De7HfJO4psEJmW8S1zS4IvNE4poGh2T+SFzT4JbMK4lr7vmac8Yx
1wQ5nrgmyPmJa4Ksh7gmsH7mm8Q1getlvklcE9gf5pvMiWU/mcOdkXgccU2D
czK/I65pcD/mm8Q1Dc7JfJC4psEVmScS1zQ4JPNH4poGt2ReSVxzj5h+Meds
xlwT5HjimiDnJ64Jsh7imrBQ0k9cE7he5pvENWGB5A9zYtnPTcTnHInXHSNO
15t5HvE95pvENXXmnMw3iWvqzA+ZGxLX1Jk3Mmckrqkzn2QuSVxTZ87JfJO4
psack/kmcU1NzkNcU5Pfl7imJuscQLxWrou4psack/kmcU2NOSfzTeKaOnNO
5nfENXXmnMw3iWvqzDmZbxLX1JkrMk8krqkzh2T+SFxTZ27JvJK45u6vOWd+
mnOe0OR44pqanJ+4pibrIa6pMedkvklcU2POyXyTuKa2SfLnLXFK5pZm4pXM
HQtK/JG4JnA8803imsCckzlmBeKdjvT6H/Q6c1M5P3FNg3MyxySuCTOl1//n
efhbg5MwHyGuqTNX+RbfJK5pcBvmm8Q1Dc75Lb5JXFNnzsl8k7imwTm/xTeJ
a+rMOZlnEdc0OOe3+CZxTYOzMV8jrmlwzm/xTeKaBvdj3kdc0+Cc3+KbxDUN
Dsn8kbimwTm/xTeJa2pyPHFNTc6vykNcU5P1E9fU5HpVeYhrarKfxDU12X9V
HuKamvz5EtfUakv7QZWHuKbGnJP5JnFNjTnnt/gmcU2NOSfzTeKaGj8v3+Kb
xDU1+Xnkf5cgP7/ENTXmjcw3iWsic07mm8wvsyS+ybxTfp24JjDnZL5JXFPn
9/0/vvm/+0fim6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dgm6Dg
m6Dgm6Dgm6Dgm5qCb2oKvqkp+Kam4Juagm9qCr6pKfimpuCbmoJvagq+qSn4
pqbgm5qCb2oKvqkp+Kam4Juagm9qCr6pKfimpuCbmoJvagq+qSn4pqbgm5qC
b2oKvqkp+CYo+CYo+CYo+CYo+CYo+CYo+CYo+Cb8h3xTU/DNb/7+psQ3NQXf
/Obvb0p8U1PwzW/+/qbENzUF3/zm729KfFNT8M1v/v6mxDc1Bd/85u9vSnxT
U/DNb/7+psQ3NQXf1P5Dvqkp+Kb2H/JNTcE3tf+Qb2oKvqn9h3xTU/BN7T/k
m5qCb2r/Id/UFHxTU/BNTcE3QcE3QcE3QcE3QcE3jd/fPE39Eq0QRff7WeqX
5lE/cFrql7ZK/UMG9UvzqN+oRv1Ge+qX7Kk/KUn9SRL1SwnUz3SkfmYn9Usv
pP7nLvVL1jHY50i4K/VLcvzP1C/J+VtSvyTrOU/90nzS7076balf2ib1h6ep
X5ov+cM+yn6Sj+yr0V/lqbfq5qm7YbzCpouXw/WVcfj90ashfqsBB+crPjX3
z/Wh2qWn1+JNX/q9045u+w7VxXObr7d6eLc+/LB3Ws2lm5qhf6k8W4ZV8cHh
rWuev/Hl+07CD+sL2zjGY/WijSete+CBE291CauTZIYtJoc1e2PiMcN14XKP
52WwdJEGM52XmqHF1H9rlRkUjwHXl3WqM9Z2T+30EaatG8wgfo7HgyIe5Pjy
Ij/I+b2FHpD1NBX64Tzp70D6G4l6YQjV6071fqorfMlN/mwkf3hfyn5up3+3
V4A+t6H0eZGP7Kvhp1vV9MZdq4XwCm4RN16fz2iGIfsfDfKdVQ8v5l0/Oy05
BMo8/VDYr208Fre/tqvNER8s29JucOg/IfDxWHubX/fH45zq9qttjlbHsF2V
K+QuFQp9qg5ZdaJQAo7YuvhFgQtl8eSYdjXsAkNh0tB3Jdz8E7BLw7RJM8x2
e6ILvh3Qpn4oiJ8TsKuIBzl+isgPcv4iQg/IeuoJ/XCJ9Jcl/ZW4TqneAeR7
NPnD/pOfIPtJzzk/98bzTp8rtqTPuSN9vuQj+2r4+fvaZT9nmk28wsuexcJc
H8bjoX8/TK3zvS8uyFt3So/jJpjRYGeVOgkJCCVH2X4cVQPn3E84vbJGEAxe
UCa7ztIEvNN7+t/uKeVwx5lNk35JDILWHmPmFDqXgO9fVRu66pbdngD3M6N2
DQoC8XMCnhDxIMf7iPwg50ehB2Q9k0n3H5L+c+R7KNXL/p+hfd+K/OlE/vC5
KftJ5xSfo8Z5Rc8VP/fG80X7gPepsR9IN/uao/+nUW3Gb/flFdwSn9RPOZqA
bUtsLbG7WE2M7HFRz2PjBylvIocHuzTHYjZ7Wox3dcGqx4dN6eTlB7bew3e9
aNIcW/aveXtCu/x7og+18JoAfiB+bo7v81rjQY6PFflBzj+OdMh6ZpHvh0n/
TNLvTPu+BNX7ieodQudOAPnTnPzhc1/2k+4JvpeM+4LONT5HYRudb/Qc8nNv
PI+0b3ifGvuH6mRfjXrDhgZEzhxSk1coV2vk4vb9muOpbtPqt57igk7Zw2qW
3lkTWrlv+NVveXPMvvC25+jt+fc8WDv5aHZ6TRA/N8dtIh7keH/KK+cPJd9l
Pam070NI/xDSD3TuzKV6f6R6x9O5X0Pyh+9d2c+X9O+2d9O9PZ3ua7pX+F4y
7hc6B/kcNc5Dem75uYdW9PzSPuN9Cvlov5Ev7Cu0JH8GFgsOKXHShVdo32DR
/FZXm6PnyPGbyjzJv+de5PaprW+7gPi5ObajODnelnyX81ekfS/r2UTnzl3S
z+fPMTr3R1K9k6neknTvZpI/Lckf8hNkP6lP4r4piPslutf5ng/i+53uIb6X
gvg+8hPnJr4T52jQOzo/6Tnn5z6In/d7Yl/iS7FPg17S/iQf2dcg9lN00QVo
DlYgSKwtMP0r33PiM2jfy/kbfHXu5Ojx/Orctwvi878x3btdqd6uVG8N6nsC
yZ9A8ufrvjPHT97Py6hvZf/L0n4+RH1WK2k/0z2P8n6mewnl/UznKMr7mZ57
lPcz7VPk/elN+/kUfQ7e0n6W43k/y/l5P8t6eD+nk355P3enenk/O9N+PkL+
tJb2s+wnn8/U1yOfJ5PpfK5Ifa58PlPfhHw+z6fz2Y/6iKHS+Uz3EsrnM52j
KJ/P5BPK5/NVeg7k81mO5/NZzs/ns6xnJp3P/qR/mHQ+T6N6+Xz+jc7nSuTP
dul8lv3kfoO+J6Hcb1Bfj3K/QX0oyv0G9U0o9xt0z6Pcb1DdKPcbtO9Q7jca
fHUO5fQbcjz3G3J+7jdkPdxv7CX9cr/hSPXK/UYd8kfuN2Q/6Xsmf+9Ed6l/
pu9JyN+PqI/nvh7LSv3zJFpfUP9JfRLXYeine53veeT7ne4hfo6xjdQ/0zmK
fH7Scw5yvC/1DXJ+8hFkPdw/04rcP5+n/tlE9ZaT+uc48oe/X/D3dtlP+t7O
3+ON31+j75n8vRPdpe+Dlfh7IX0/oj6e+3rDf+o7eV8Y+4H6JH4ujeeR7nU+
F43zkO6hPXQvId9HdG6CHE/POcj5aV+CrId8BPLV8LMyfQ+kFatSvQPp+2Bj
8seD/OE5iOwn/94gzUWQ5yH0vZ2/xyN/f6fvmfy90/CfvjfiaXoOeP9TH8/P
mfF8Ud/JfShupfON+iTum5D7JbrX99A9j3y/0z0NcnwF6mvl/PScg6yH9iXQ
PjX2J/kI5KvhJ8832B+e/xhzJclPaV6HinkdKuZ1qJjXoWJeh4p5HSrmdaiY
16FiXoeKeR0q5nWomNehYl6Hinmd7CfIfjbeEN9hlYeZV5j4ZPbxJrZxxu+5
VZL+f56NKK4JrZO+jgc5nuL476EUj+Wl/48o62Bdkyme4oD/3nSKp//fKBaR
eJYUD4p44305TtbjEFd6wr6DZl6hQLueBwdvbIr29HNhWgvS6/Qz/3fk1/nv
c75C9Hoz+v2cqzTPrkFz7Cv0M/1343Wen8dJvx/EcfT3jNeleJDj5fdlPXIe
SQ9y/H8BvYr+Nw==
   "], {
    {RGBColor[1, 1, 0], Opacity[0.5], EdgeForm[None], Specularity[
      GrayLevel[1], 40], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1: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
R/2zz3/o+6mxNoqLsW+sZ73218o39nGDmLYRLz0q9/lXcW80N3U2jMmqIdVC
tomCvg+9JqRKPK8P/Ul5lucPc1D0NzH2YUgxnr8NvRr/eN4Q+tOQGvG8MfRn
Ic3juVnI1/HcJPQvodeWZ2d8pWdoxxj/Kca+DNkknr8L/VFI7Xj+IfTnIQ3j
+efQX4XsELJFyJYhdWL8x9BfhGwez+tCfxyyPbbr6ri2SkjjkO1Cqoc0sm7s
Jo7V8LuyVcjWIfXpS8i2IQ3UVf3ubO0c9yd/9uXe2MkYNeGQ5q5bnu3Lb565
FuKjjlbOk7OpfrVCdnY++VcRU3P6oj93NfcN99KuYgLv7SFXhlwV0lYfcu4T
0kx79/Js7+nBHmp6s6eafuyrH1j2U1NTx5DWxugQspt2n5BDQw4LaV+efaPB
1cZ49GZ/Y1D3Ac7jf6A4yN/Oefz7Gq9LyF7GoE8HuZbYh+tDzm7mwD4kZG/r
PlTd1nhtre8I/cDSXU1NvUM6G6On+Q4OOcYx4vUI6ST2TvaDGo40Bn062vnk
38Y6jnK+k7Xta4/7aXcNGRUyKOTkkOOsE7z9nafWY9XMHe88dQw0Rw/7y7ng
/J7o2NHG7WWtpxmXeEPcS3o/2HnqHmBs6jvFMdadZDz6NNQaiHWqMbBHm494
JxgDfMOtDexnG5f8Y1yLfYY+1DRSTR1nqsl/jn7kPFcNlgtDRhhjXMjp2qeb
k5rGhgwTyzB7AKbzjEFvLnA++Q8Q0/nOD3NP2EPO30XmBO/FavBeYVz8LrMv
1DpBTQ8mqqlpkpqaJusH3ilqcF2ppr7rQy419tXiIP9VztOPy40HjqmOse4G
cZD/upDxxro25JJK9ihxTzMPPrNCbg65JeQO80117HLrvkVNHbeqqeM2NXXc
qR/Y7w65xvzT1eC6P+QmY98rDrDf4zw9uNE66N8Mx6bpN0lM97mOsZnGwH5A
rGB8UHx8U5eEPBnyVMjjxiX/Y+bGfsi19OBhNTU9GnKXNT2h30zjzRTLs+Yj
xvyQ2dr0/Sz7/oy9BuMc400X0332Zp7z+D8f8oj5n3Ye/7n6gXuBOcG70LXE
/p8+5FxqDuxljpHnBWPRgxftC/W9pKa+xc4zxz3Bd4i752VjUOsb5l4k7lvt
+6/W8FrIm86Tc7l+9Ox11yT/OWJ6xXnqm1ARZzLkgpC3xQTed8XK3v5XnvEa
eMNfIb8b4z3n6cH7anqzQk0/4ETwIPgGnAj+AueAB8Ff4AzwIzgRHIL7m7uV
uxieBeeCT3xgPHoDD4LLcPfDy+BW8A34DlwJ3gLfgaPBDeALOxt3pTHoE9wK
3lTdHPCExHHQ8At4GRytpvWDr7b17KBN7vr6Jz5UXx/u5MR90E30p75mYoVX
wDPgdPC1avalobGq68c6uN5a41XTr6E9rVOec6OW1sy9yv16kPjgFbtYWyvX
1XOslbh3c13iQNzffCd4j+8pz/nQHta0l3nwh1/sb6+5u9taJxxjb+tpbY7m
zu9jfW2M29IYiVvtZyz84RidrXl3Y4EVftK+POcxidccqg9r4RQdxZ24yZ72
5kBzdNGfnF218eFOTvwF3d0aOlTKDcc43F62r9SLbsZKXOoIcXfUv51+rKvi
3tQRXw9zg+9o7cRv+lsbfKO3tfbRpoa+2tTQT5s8x+kPjuO1wTVAm1hwjJPN
B5cYaN0nuK6r+fuJb6Bz5INvwE96GWOQ2E8yVmdz9BLrKeaDL3CPn2cseMII
8zA3VNzDtMGduAm4T9dOfOiM8pwPjRQHd8VZxiLPueaHV4wR72jX0a9TrWew
86OteahziVclnnWOscA01nrABceAi3DHcq/eWJ7zm8R30Jda84X6UMNF2okz
XVSe86EJ5TkfmqgPHCNxHzQcgjPe030AExzjCnvBPXqJdVxurMSlJpsP3jHV
nl3hulHiHS++qeYmFpzkmvKc3yS+c7P1J65zizH4vlxnPfCNadZzo/ZljiW+
Ak+YUZ7zpFvLcz7E3T/c+seKC65xhznucR29uV3/a/S7y3quM95V+rFuQHnO
kcE0UxyN/TP4Jq6DMzxonfCK+6x7ljY1P6AN7tnaiRs9JA74xiPimqNNLPjG
k9YPd3jMeua67jbzz7bWx5wjH/zk6fKcYyXO9YSx/g75rTzjF/e7lnzwBe78
5caCaywyD3Pzxb1AG9xwj+fEvVAbLIv1J9+L2okbvWgs8rxsfrjEUvEucR39
mmc9Tzm/xJrnOzfPGImXLTPWHLEnTPAkeBT3OFxiW+fhVW+I9S1t8L1TnnGl
xHveE9O7zi12Hh/uae7rmuU5N3pfXHAReM3vPlPzLnGW/i3P+NYSYxO3EOPl
hZxLobnzK2KsVMh41TLjrbC2N6yNdcxXUeBOcJzq4bddIeNe2PAleNDWMbZV
Iedea+xN1RjbtpD3CD94Sq0Yq1nI+RwabgJv+coe1Iv5uoWMn+0QevtCxnU2
C71pIcOED2Nwoi1jbItChqlB6PqFLBZzXxqb965RIetv09A7+XvaO+7TS8aH
L/5TlvX0G/tX8Pe6v8qyXn5bqZ88/12WYVpnb7b0N7R/yzJM6+0NPdho3VX9
nbDMHrLmv7Ks99/Ze3r5vf2kTz+kXvk7YblncIM9/rM8eyd/tc/kKoS0LGTj
r3q+fvGM1fN3v5J9+sleNfC3xAr35Gf3pam/PW5anr0L5HnOvDzzXuwca/4p
z7g/+g/PLPO/uX4Hf5MslmffCeaXu58/um8txPyn88RZWSkuY63Mtao8+92V
c1jmvvEb61/+1vqve8f7wp9P/izLxphL+1zwfaEvnIta7jO/z7K/m/jucDY4
g5v5zF5t4jPzFa4v+g7y/K1nhb1lrGiuzT3P/+q7SaU1BfF/57lM52tz16/3
3HBGqJtnzs/39oI+8E5sWWl9FdcwXsX3ZZ3nlWfuT+6Mmcbcxvi8x9V8l8G7
uXi+9xyn36v5PnDeqvnul3s2q/lcxfcUDMxXFSd+1Sutr17I35Uaxqzjd4Cz
WttvCOcHXcs1Gz336V2p7Rr8dvD5B89fOmt1jMn3Zke/OTzXcxzfOq4nV23j
7+g3ineE700Dn39yrsL49YzJeeP8cfYa+o3axLPMOeZ8831q4jeK+YZ+x5r4
7drUNY315b1s7PrmftM2K890U9f/4nvLmeZ94lvwm2uaO47w3xdqib+BeZu5
ZjNzNayEmfd8lTF5V181VxPz/me9vF99Qx8W0iVkn2L0J2TbkP1C6odUDekY
0jBku5AuIU1CaoYcFNIopHpI+5AGIdVCnopY94XcH3J42DuF1Ao5OqRZyPYh
vUOah+wQ0jekRUidkENCGofUCDki/NuHHBDSXd0h5Eh1R55jXdOQ2iFtQuqF
bBNylPOdQo4OOTDkoJB+1to1pFfIwSGdQ3qrDwk5Rn1oSB81PeqvX7eQ46it
kGE8Xg3GQSE9jT2wkOHoETLA+SO1O4npBMeO0u8gMZ0kbsZO1Af7ZGODd7Aa
vKeowXtqIdtXah2qBvuwkGPFPlwN9tPVYByhBtcZauoYqQbLmWownqWm7lFq
MJ4rDvKPESsYz1YPCTlHzbrzQ04T42hj4DPWMfBeEXKea8eJG7wXqsF7kRq8
F6vBe4kavOPV4L1UTc7L1OCdoAbvRDV4J6mp7ypxkH+yuMA7RX1ByJXqcerh
4h7iXrFPU40B9mvEDd4bzU3Oax0D+3VqsF+vBvs0NdhvDrncnt2iBuOtajDe
bT5i32E9YLnNebDfYDxw3O4Y6+4RB/nvCrnaWHcaA3u6sVk3w7XTnLvIOh80
H7Fnmo+6H3IMXHxHbrKmB6yHOmar8Z/lPHPHxft/bEjdkIeNAa4nQu41z1zx
Ucej1kA/HnEt9hzHpus3TXyPWw9jjxkDm7uSO5H78Wlxg2ueuMG70HzEnu8Y
PXhWTd0L1GB/Tg2uRfqB/QU1+RerwfWy+Yi9tJB9i8HyovP04HnjgWNJyJOu
e0Uc5F8W8oyx/mcM7E9C3gh5M2S5efD5OOR1594NecnYr5tvoXMLreNNNXW8
paaO9/QD+/tq8q9Qg+ujkNeMvUocYP/AeXrwqnXQv5WOLdfvOTGtdh1jHxoD
e434wPWp+u2Qv0PWhawP+VKsYPw85B3r/kLN3FfOg/0bcayyj5wLzsS3jn1o
7NXW95NxibfBvq8x90f2e62xqft7x1j3nfGI9WPIZ8baaAxq+lo/MP1sHmr6
RQ32f41L/n/Mjf2fY8T73VjU96f1kP8vNTX94fy39pF95jzuXMzwlYfeJOTX
eP6tkOmvrK9UzPCBa9NiNk/Ogr70qaKYzSf/tWIqFrN5/H/174jwR4vNilkM
cG1RzHCDt0ox22Nq3aqYaXqwWzy3KmZ17ym/gJfUkyvBS3aUK8FL6suD4B8N
5E3c9w3lStz7jeQ43PeN5VPc+83lQXCUneQ1cJGm8ia4SDN5E5ykhd85eEkT
eRY8BnxwEjgKc9z/8IDEn+Ai4DtKG3w9tMF3tDb4emqDr5d24kzYiTNhJ86E
Db6+2l3M39d88IoB4oOHHFvIudRx4hugnfgf81sWs736W6wDjQU+eMiJ5oBT
DBHrIOfAerJ24k8nF3L+NLiQc6ZTxQT3OK2Qc6ZhhZz3nFnIedKIQs6lhlvz
EOMmXnW6+eAYowo5l0rcaqSxEpc6S0xj9Omhz0BjJU6RuNTZhZwPjbOGc50D
N5zkfPFdoH2aY/CqzYvZO/FnIedSFxZyDjShkHOm8YWcVyWedbE+iWNdUsg5
35hCzqsSz7rMWIlXTRQHXOVycU3WTrwn8SD0NYWcY02x5qu0wT1VO/Gk6wo5
T7peH7hD4kRo+AP3PXfrHHHAK26ytquNSx03GCtxrJvNB9+43XpudB0c4THj
Xiz2FOtOfcgBZ7hPH3jKva6Fh9xl3dO1rzPudHPP0h8sD2jjwz2feA36Yf3n
OAdW+MaD9u72Sn2Zbaw79HtI3HcZ7zb9ZtvTGYWcDz1uzdy33LGvig8u8ZS1
PeG6+xx7UtzPuC5xI3hG/zif/fzeJZ70rDU9bx784Q8vFXKetMg6F7qOeuaZ
Y47zCws531ogJu6oxK0WGwv/161ntrjmiRV+srSQ85vEd97Qh7VwkJfF/Yr2
AnvzSiHnQ2+a821tfLirE8dBr7CGZZVywzfes5dLK/UCTvJOIedS74v7Zf2X
6Me6ae7NDPGtMjf4PtROXOdza4N7fGStn2hTwxrtxKXWmOdL/cHxlTa41moT
C76xznxwh2+s+2vXvWP+z8T3jXPkg5/AVVYbI3Gi74z1mjlWi/V788EX4A3w
C2LBE34zD3M/ivtn7cSZfhb3r9pg+UN/8v2pnbjRn8YiD/yH/HCNf8T7t+vo
10brWe/839aM/w8hrcO/ZTHjU6z7z1hggj8V5VZwrAp5Rk15QuI6ifugt5Rn
bSovowY406beD9wTm8mJ8CXXiaH3kBu1C9lfDgTfqCoXetV+sw/c6ds6Ty/g
YZvLq7aRU+0bum3iVYzJpfYO2UvuRY/Au4U5qsm1kO3kWtRZSx7VDa4kT+rO
b0xyLNZVl48hNezTYXAu+VlnxuRtt4ZMDpli3Npysz6hj5HDcQ7oN3vQK6Sn
vA0uVEfO1oPfquR28KU0fyB1yBeJm+bXFnKOjD/fwv//PcpvYzvrbmhN9A0O
uof93tGe7+tza/envv07UN897Ucje0K/dqrUQ7jm3vE8MPTuIVsXs17BZfcq
ZGeAmLsXsr4Rp43nrolnj541tb4a+tLzNp6l3dzPBu5pD9e3jeddPe+8O7wH
PPMu0Gf48b72srn97OPzfq5t6XrelVaeYWK2Nu4JPvM/M+5mjaw73vFdPT/0
ZJ9CNr+Lawa4fjf3tZl718o1W3k+WngGeHf4c8WuhWzPD7T//B67l3vEnzXa
2JM9fN7G+b0d5xmfbZ3Dh/eI33LbuhfsOXtf1b6292yg9/eZfdvP9fWMv60x
9tO3rXFau579rmaMdvo2tJbqnrV9XM/vyQdYI/UeVKx01jwn+HZ0zQE+b+d8
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
C0yvWg+44AnwCe5U7uW1pZzHJF6Dftea39CHGt7Upoa3tMmxQv9lxl2hD5wi
8Rc098r46Pc4vwdgglOsshfc2W9bx0pjJS71ofngHZ/Ys1Wue0m874jvE3MT
C17xaSnnMYnXfGP9xP3OOWLwffnceuAgX1rPWu33Sjl/4Z6Ac3D3gHGdscjJ
ff2D5+A16wAXHOR7c/zkOnqzXv9P9dtoPZ8b72P91psfzvCzuOAV8Ieelb4H
rIUjJI6D/tuaf9eHHvyhTf1/apObO/0/sXC3Y+MDl0icCA1/4J7nbuVuBhO8
Ai5BL/4ybuIxxAI7fqwjH5wFfkI/8Esco75x14k9xYLbbG4OuEHiL4mnsBZO
AbegbnhHFevZRryJA21nDTW08eFOThwKvb3+dZ0DK7wCnkHvsFNfahprc/1Y
B+4tjbepfqyDAzWwTu5R7ud0r6K5Z79yb+lZ4kONrLOh/tUca2gNTVyXOFAz
69jZ2KzbvSLnL6391jfRv4Z95x7fpSLnVU2tv6WxEpfa1VpbmK+efq2MtZOx
axpjJ/HuIQ784QmJy6DbGbuDc60c218siac0t0/7GJsxuEjipttocz8fbG7s
NvZoT3E0cSxxJtYe5Bw8JPEydMeKnGMdaP86ijX9nZKqvjdVxQE+eMUhFTnX
OdJ64B5dre9wbXpwhDb1d9cmfw/9yX20Nlh6ahMLvtHPfPCK3tbUy3UdzN/d
3vR2jnxwD7gKHAhelThRH2NxNrs438215IM7wCFGGAvOMMg8zA0Q90BtcCee
Au6TtBM3Orki50aDzT9Ee4B5Tjc/fAuexb8Lyr8JOtZ+HW89/Z0fas0DnEsc
K3Gu4cYC00jrARd8C950cUX2uww8YlLIpRUZj4BDwCXgLNQ8Sh9qGK2d+NNo
4xADHgI34JnfkSaGvrAivyPHWW9b+80+XGJ9Q50f4xpinG+csfaBMwCuiyoy
jtZf335iv8j5ceYl1uXWeLG5Juhzlc+nVmT3+ET9Jvs83l5caswrjXNv5J3i
+I2l7B3lXHLupup7tvNTxHSi/R5pzivMe5lxz3f9JGNOFMfZrp0g9sus517X
TLXO/wMxXA1W
       "]]]}, {}, {}, {}, {}},
   VertexNormals->CompressedData["
1:eJx9vGVcVtvz/40ioqIogoIKCgoGIlIWcK0NioSF3V0IFhbYYgcWChZ2oYKC
XVxrg52o2AkiFkiIhUrc7Flr9v+cde7v7zzZL8dx9qzZq9/X51iNnNxzTHkd
HZ21ejo6umXP5CT6afaZbClxeG6w3o5m1M10R0lpaZr0d/iNj4p90OIHU8dE
tCKNfH6XeadLSfpNwT9iyxu3GUlW5P62XmDfZ/cI7O/rvZy78K87XZbRE+LU
TD8BdrvaRzJi97nTUPdrYD88aj7Ya0Q7j37t7kQ3VJtbqthHD50GduP3290X
GrnSM657wX6kS3+wO68+VVpa25HowH/pUttWzJ7bs/PWClFntDuaMnsMj78y
uNmosvgkkscPqdIe7MWXZ9XPbWxOo9Y0Bn/jGUvAHr+/Z/f4w9ZkaKUA8H8X
8gXsSRc3Lz9P3Ei6tqQY8jndGez+/hc/FLYs0Y5JqQVx7q6bCXX7db+G7/Zf
bjR42eJyil3acA78r1Xb32jgsmbUeeEJqMNYx6pg/zBo8BWvT7akQupiiDNh
7WawR7lbJFveaUTt06whny3bXoH9ZXSz9balbrRBfCuI824ra6/LMK9jLtkO
9HSPOeA/Zb0p2EdWXnhef1ojktsgGOLX9x4A9nEbgwzOJFjS17uKwN9p+3Cw
L6pmYLEk25FUaP0O7E9Du4B987atm0+9r06N55tAnASfZaw+1m91tPs7kj9n
h4P/zJbdwd5hLem0J78cuVfNEPzpJF2wh1u+d+x/vzUNKNkA9n7hJWDXeXRy
guUTdzLRPAnqrDtiA9iXT68esMrbmixLaQ3xr/fLgTpPf3ogycu3GTXzPA9x
mu+fDf77C1u+GVfNmvatvBL8WxVGgb+RTnrp1ndtyYtN3eG7xHdg3zFsefFJ
t20V6aONtSFO7oXeYE8xXDQlcLABOWBfEexXd0eAvVvuc8tJrRvRWePaQfzt
izRgH+25stuwqk3I4rH24N9tkzvYgx/PmTsswoXcLm0JdrKA1dPzU/eTSp3b
T2H1DErsB/Y1BlOcqvrXJs9+s/6coL8G7Iu/tDnxY7UrqdjXD947sPUosCev
H3opxseEBji9APvjnGHse+VUmT5562dtlQ3vWd0qN/ms2FuNXbM/ZGdHUuWJ
M9R5S8BF8J8i7f86pZ4tWZZwCPrVl4q1wH706vLtOwL06Ncl0yGfkddCIc7h
5Yfqvtf3omlNzIsU/8Kk6uDf59OiDr3L2tsgZh74VwmwhPpv3HgqsmiohsS3
NS+v2GfpNgf/3T2svCzT6hGd4G6s//f8C/7Ll0d9XP/QkJyosof1nzdJ4P/2
jGGU39RmVE6OgjxLCnYze6P3AeP29qBz+lSA9i4sZvXU4f/VX8nqOapJM7Af
SFnjWCnIm0Yf6gH2xMPr2PdtklXpYZwNNWzjAXHyD1QE+7Cuk/fVD3yg3TJh
DfhfWhEO9o3Pp7Q46tqSrFjSDfytfxwGu2Pdj9N2L+hILlu+hzz37JoO9l+j
3O0mjHCmeW93gH//3E3QXr97oy61MXChK750g/7Za9EP8D8z/WhAy8gm9Nu4
NPhec7Ojwb97967hT7Y2JzN8vcH/yTUr+C7XDz/4W8HMnhZW9wb/wkA2b7z4
XWnW2mXN6aZ+rdm8ob8R7Mtsx9TsGupA56x2gXwCJtQHe2l4pk4DjwLtMjIa
2ttTy+b/nh8Tbs9Otqc9hvcEe/CJamDvRHuUKP25bpuFYI+rUYfNz/6uA5pZ
pGomLJsI9sdnzNg8pjFq92Hub22VhpPAHrJjNNhTt59qp91bpAns+xjyqbKX
jdNBTj3yxpq70IB8Nt8OGfkE7Ps27vQ6nFegue7aGdp1fQjrP+3Hrp5o88KW
Vvy1G/wN49l86F9nc+je9JY0K2sy2Mt96AZ213T72JdvW9BQ3xpgr1jC5p+9
rY0sbe590Rw8xuozYeJ6sB/caHDK87U5sY3QgH1GenN478M/ktli83bkS/9K
0M+99vYAf4s7U/KHkHRNVLgBxK/wqBN8r4/5jx3sXH1pvZdnYRxV+d4R/LvG
0V/+5c3I7WsNwD/Cd++/+rPnmVJor25Df7Bf2NGjUqVTFcmK9Orgb5OQA/Yt
R3SXrXxtSE6F/YH+8PPab8jT1sxs3FI/dxpzdh/4Px3chs1Lxe7xXRLbk35V
24F92IMMsP+udnPi2sQGJKypJbzXduNptk/otK+maRMX+ulZHeiH5eaydS0m
c8jHM2vrkjvd2brWbnsw2Mude+OVO32KpvBGLNQtfIwB1OHS8AbOA27Wo082
bYQ8B/Vldfv0s7qtlUc5Uq16VYjTMacI3kvSNG2POVaiph12gn3bpmLw79/t
7bjt9zyo64TLEKcoJAvsx47pvkrp4UGtY/Ugf8NWbL2787PFqVwfZ+ofnQn5
4PyMdcb5Ges890aeiVLn5bzOLsFhYN+afNYpytKJzv8+HeLsnBsC9p81A245
ODak0RM3gz3lpQHY8yYeeNaqZl3SfuwSiLPfivknnanyp0FwTaI9tAX8Z983
ZP08otzmW/0dSazPAvB/2+Az1CHQYMeKvfkOdMW6JLBfuLCAzW/NDr3a4/pD
0zgwFOLUbMv6j+OXBtnDzZqRUXms/5zxvgtxam5uuSw22JVE386HOMfTLFi7
ajXvv7uLA3V3GsPWxyZ5YH/m4Bw46GArmh/0A+o8bd8zsPsN2rp2bd22NG58
B4hv5cnGVw33IUmFb0q1lccaQRwNr/POQQd83s52UdfB0etYP3Eb2rOXdrEn
mfiD9ZNaFqmsDl9dKl7940J0Kw6E+OfGJoB9V7PlHbZmFWnmpKSAfVirpdAu
17tDl/uNd6Z3dk6E/hl8lO3Hjn70tt39zIHoNWL7seOv2f5kXUqVgEpPLakb
YfuTGe5HwO71ZP2IoMzq5GKzTDZ/dklj+yXd79uKDjenb/rZgT3hJNufbFv6
5Of+OU3Iuz3n2Pry1Bn6eU7xRI/ABDP6erY+1K329v0Qp1rW9pxTpnVoj5hf
EOfol1tg14942sRhlDUdmjMV7PPOsXXZsZNdtU+kOR3dYxr7LkZsX3dvwfL5
5+83pbG9i6FuWOdM4+rWS8vmZ09e5wMdmP38yYT5Uzqd1Mx9xuyGk+qBvcji
4lCvQQ7kzcRAsO/QjQT71Nwox7Vx5jTU2hHil6TEg73CroTiITetSM1X9yFP
/ZgXYP9YUnVV5nRremyKO9j3Ji5i60tmpyMLD9qRBiUT2H7mFVvX9v7a1sl4
qyuNHcnWNbk6m682elee1fV9C1L6fT/ks/S5PsSZ5R9fR9upAXnSLxzsppaX
wB57atfXYVFONGJcBLw3YBl7r15J7jT/dn81hecnwnvr3P8NdvPW85bea+1B
u4Tdh+9i5DkL3jtUpyjX8pM1Dey1CPKpOiocvuPFjFU5Lja/NXfbPPv7zzqL
80aHNWfYfunP5phDpR3IuYT24J/ZYjrE/xEa8FS3qiWJsQiH+JM2tmbr0eZq
CWldNbRVoCvEaTB5E9iprfGW0oP6JOhSU8jf3JyN9wq1b6w5V6UO2bF2Fth/
3mbnqT9Tivu7nrYkTeTdYN/jFQ/vvXclYE4Vu7Z0yFVreG/iwGywP+9gOeJF
UA1640QiG6chNmC/lmowM2qXI+k9wxjWNdNt7SB+3LLO7s+m6ZDpzVuxef6j
K/hXtmjhP8YrS9OwZy7Ed5rM9lEJk72rmbSoQQJus32UN10B/juOzHh/2qQe
nbUgAPxL17ix+TwuYGrcETO65aYj+Ev/o87PHNuyuu0yahE1taw+0W3Anhy9
AOKvaRe68W5zXfKpRyjEf7/xGNhL/hw69DRVonN+2YA9YqYLxJnfMOLp2xtd
yCpDAnHWz/jO3tsx7fXDxh4k3+Ad9JOdv6zB3rZwcrmBV8zpr0/9wX9NEdtv
BP3O2P12SCMSP5rtN1r07An9oUTXYdPbG61o0IcdsO4v7OUG9uE1e4/9behG
J6/NAbvdEj+w39z16bX+tdp08dhEsD/e/gvsYwb8GLVxVyXSuPuIPzDPT5oI
7dIbP6KE6urTHimboF0N77h8UOwjLznMG1euGWnW9ZSuYl9ysR74f1rTcPuh
ze5klL81fF/fmbP/Veehe9h56lrbDuBvtjiywp60huTA5zS2X50dBPFrVgsN
HjjWlhT37AfxV2U1A3/nJ3XeTJ3pRL2pAcSPvmgC+b/LPDNplkkXOlaaxvYn
UUPA7rGjcPXSKw3JsfQQaK/xLy3ESV0T8D5jVzuyo7sBvFfv7BHW307Uvr/Y
VqIeh+zA3mbhNcj/iP6PXkahNvS1+yKYB6LLp4N9qHuLp9NCXmlHZzQD+5hX
uyCOy4vAr6UXTcmf6RLEGZ3M9sl1jpzPz8qsTF5VdmLzxhK2vsim30e4F1nT
abXZ+lLM9xsDbM5+VfYbjfh+o+V7c/DXZmvbJ2Y60JTODcv/8zwo9mfrVAPw
vzJhg9ueh680x95I4D/l4UzwP2xy2iz2aivautc6yGfH0/Xgv6CP3u2nNnak
38wBkE9OPFv3H00rvRg56b7GqXsJ5PNpPrufqTjVLHeTrzcxWHMd7F0aWkL9
TyWOfxx3tgJJSuoM3yX8PjtPBZY8eBjwqBL9+4Sdp270vAj+O64cWVPX8qbG
o5kTzG8LLzTOUuzu09a+Wa6pQ7zr0N+K3WbWCPCXMyxX/67oTDsGBsL39ShY
zfb5F7ucuN3DmHTczc653qMng/3NpgZDHhxtTLaVS2D3Ek+eg736+uiDiUfb
0lftJcjfaOxjeO+14IMLZ03TUL2KI379X/u66/ePgb/Wz7fl1NT6tPDoh1//
jL9evrW/LD55yePLz2aBffYZtwJPI0ta4VZ46T/zz7lWquRPfXj+Z45VgPb+
/Hvq1u9JpZoqz49APake6yf1e+xJGtegVBPkrA/xrZ2Swd73j79NnxCJPt4d
CfYPQ9h+r+pDx429nJyouTXb75199ovN/w8vXTWJMiA1uj+F+Pk+Z+G9i7Jf
RUamt6MGth5s3ckoD+PUquHqleOOF2vKJVWpoMS5k3UsW7F/brUhQRpJ6Iwl
k78r/i739oM9JTQl7OQ9T9p4xQawy/vdIZ+kh74nA+9XoqHdssv9c97Y4tlz
uLKvG8bnjYbl7cG/y5njU6sX2dAbMRWgPzdxrQPxYws2NMtsJdEa1UN+Kv5N
Ygrgu2x2ian/xFpDTeL/gr2GnAL5n984N2hDtjeZFHMY4gQO6AHtHdcg7e+3
Feakkdce6FcOvdPhvV1zjm5/eMmabLx9D+rW5EU2xLn2oOYovyJbekUTCnFq
F7J93YKoxWYR25xoakVbqP+1eB2wO7cwbhs1sREpkjezc2g02//X7eXbvXLv
2qRwKNv//4ln+9KpNy57zdzQlJy+f5fdA5gsgvd293h1wvqwJRk7xR7myfCC
upDnycLgpAbvCzRzYm0gn+fXU1idLZ/Flr6yoysccuG9+h/HQvz7fR/4XR1c
h3wNvAvvNTRn+5/0ftN+rX9vR8ND2P7HzTaArdfd34530OiQhgvvgH/y63jI
592qFqafflqRh43S4L1d9X3YOnJrybg6PYzIqR7P4ftefTcF4vSYUytqf83q
1H9gDMSpMdkZ7GYzPQak1zKiQS8kyHNDjiHE//Ejt9uW8N+aA5k/oL3Gb7qC
/XD4vOc/5tYlv9JXgP1Gogt8xwoLrKaFPHOlASMqQH/edJrVv8T+mn9JWmP6
+TSr//tdu8F/avPLWzcPdqK6B9dCP//0ewLEd3tf8/bYnNa0dWlPiN/k8FCI
kzH4ybXTkVnapJ+f2b3ZyTfQ3lEd/Ex7PGhJz29PZfvkOpPB3sxBiml4tCFN
/LwR6vDwgA3E+VFriGVxA4m6XezHzk38vvpQwNKBBx0L3JXoZfHleG6vnnq5
Tot5GYn53H6Q2/uH1O6SJqe6V4bZKV317+N4z2PY9C/uBdwf78NxHtPl/rGC
XUewn4y57DO400P3ctyOcZK67TMfOuSdakf/510mtV458r/+dmTUr4nkYSK+
d7/wXgMh/5uWq8KkwoJEzP8oty+7MnWOeUJGYiG3n+H2NYs6GT/U+5X4Uqgb
xv/G7TdmsXt7g7t54dLd8qRW4Viwb0g2B/sX/x+nL1lb0VSrAMjnuxc7V07c
2pjqnkvXeP6KA/8raxezc9OB7uGzzukRu8ZBYLe87Aj2GcFjLux4YEp3ye0h
jvk09t4NQcv7xvo4EefqwAvkjF6ML3yy6F4jL9CSBhgCX5Cd+b36oePa+mXn
L8rv1eWdNXzB3n3Trnq9puuRefXNwf/6Y3aOG+07O3pBiQ5xPfYH/Lu6Dwb7
JNvYkZM/WNDgIQVgf/+rJdjfHh6QtPKpA9F/2RHibPJh83DHzGOGR9+a0qqd
VoH/m9UO7H4m7tK1HLuGpNxzL/Bf8ord++2Z7f1B55Q16TN3FNhzy92G/m89
Lb6mibcNXXf+O9jHTGScIj1/u1uiQyOyo4cNxDf4ze4xVq2uceFDz2eatTQK
7Et12f3J4Jj5nS20VUnfWnDPJqd9j2X3TovXeJdLtCWmLm+U+UoOWci+V1pI
uXU9pziRwzbse4Wnse/1+3T2o0ehTclIw0Cw4/rePCEB6szXd/mdE7t33b/k
RcS3jIpk58Bd4N8wk92zZYVcvxg+slQzIAPu2eSDO9k+Z/f+nVH+W23JuBbl
WP8ZVpet+9cW9K+6+4/2tOd4sH8YVwns76/ar86f2YyEDVvFxkURuz+JHvAi
umUrK2KmA/cn8uxdbP/ZQmf2iZgaben3S02gvTZ2bD633dOwuPa0hrTX13uQ
57LX7Bw93+rwpxzjb9oPp9zA/9jD4zDvZVo/fmZY05U8M+ylzHvy83cxH9l3
qRtT3sCKPl7tqMxX8v2PSxifank4denXsn2pzSSwx407BPErhQ5Y5jOlPbGd
nwXxb37rCfYHgZu3u3atSX+3rwz5/497dXmSqyu7/5nXznXfSHeireUCdov1
emwemJPezDrci9zsug7sli8Y14iMCT63+qsv1ZvnDe3deiQP8qz+Y8vPDcGN
yBPX06z+Y9g+MGRF392RW5vSa3/jwX9tm7ZQh0FzA9t4vmpLE3oVFkF/M2D2
lx277Rle3pG6fmF25/67IE68delAm84uZHlmZdavdt1k5+ux95492mBJhk8O
hTp8CZwLdm3Qk5hWOfc1i94vAv9pY9j5wmZAlZZ7qDOpugPOF/K8N4ls3LUO
8tHvYUte7dgH9otbF4J909B2h3Z2dSLPcoIhju4qdu8dvWL904/nmpJrW+He
W63zxfrnoD9jnQe/ZnzqUau+i2Pe6BGdb3psPBb1BbtRyala71N0SLB3ebB7
rRjHxuml5lF+FZqTTVeuQ/xH+oy/vAva6VqxxU9tyDjgL/JSwu5JWja6fdno
oD35c2IS+E9MYvc/NfSbVXca24SM2WQP9i9Lktk9RsSpfYZaC3K+qR70q1G+
G8D+ss0Zz6qZLei2333BXsOYvXfFjUa5SacKtTp92Hv1frP+uWi4aasNKYT2
1mf98/ZiG/iOVRc/PxfQrhX5a95O2Q/IHfi9ej+L9iVDSLo2kt2ry7WP+IJ/
SNr+wY+atic/B8jw3Vtlsvnz/pnnKzeNMKMPTPPZ/D9n1L/XF8/nYHeYM4Ld
nxT7fD9+949mtWM62OVJrJ+MHfLw4PWtbclYs5nwfRNNWf8P3/sp5fvdBuRx
D9b/Q/aye8uHb6eEHIhuTX+36Q/+/bpkgn3ppyYlGb01VNavB/bobqz+3S+c
Gj21twNpP4fVf78Hu+eZv9nljO7AFtS4BtzzqPOGy5tu/5o3bpiw/mbXd+6g
kiEFmrEXpoK9m84Q9n3vrp6z4rEVCTmTB/Ytt6LBXj5jeK3T8fZkoXNtsAfs
Yfdg2rHb5x1P86Cr4xbCd0k2LgD/70cXXh1g3Z4EdsmG7+KYZwv281kOX56U
96CWG9n3/R/3NvKAS/ZgD/DfE3Shrztp+c0H7I5ubL0YuEs3y+iZF/l8Cu7b
5bMbWX3uhU+oOkLXjz4Ph3s8efOBkWz9Ddhf8/rNDuRVk1dgD93L1tOU0/3u
dFrWjP4d9hfsLV5vZeM3c/bynCJ3ejndHOypvxhPd3OXB/cLMyO9q84Ge3CT
ILAX+kXaFRnWpsMaX2Jx7jpAfYrPLwkb98KddnlQCvUZnfIL7HaFs6q38+5A
t1nFQP42Uyygf5rbBfj7LKpBqpr0gbrV7MrWtT2tp6ePyCpPrlceD/FTht4A
e+UuHXcWBLqR4GtzoJ+MXcH6/9Npt2PObjEhQ8+x/o/r4C52r66ug7UaNwF7
I9t1R2c/9iTHrPqwOv9i/Ud3YdXewe2cSYEjnCPkFVkN2fm3zumHW8zdydSQ
weDfmOcfdfRYt7L8Kea/xXse+Hfe9evT3/J2xPjzAjY/72Z88Kx7H8sNVT2o
cV/gg3KVLMZJLXsFjd69X5dKPsBJZbtl9hB//Y95jcbva0mCP9aB+PcusXuz
1HtpUzXPaxLN8O0wrtsns/NOkH7VLa2OftN2cF0HcQoK+oC/8etxr2oMcCTV
+0SA//a93cBuat83tcLZxkQ/9gjYU7xuszxrb2x8+aQjqZU4BeIM82Xn9231
LPIbT2xC1rvFFf9f+42z0eyecF192Sm2mgG5tTwD/GfFME5ddHuFRfIOPVJ/
kB7UZ0SXP+w7Fsyq1WWnPUl+kAL+nw0YlzGQ0y9Z7Nen0x2/sv3h4FDw913V
7+iZlvak1phIiGPYk91XxD/caNH1ty1JNfSE/DNPsN9jyD+9v4x90ITY21aD
OI8qPmDn2XP39zRbXoNk3RwC/mbH89k5y6a/rlFhI1pslg/5DLx+mp1TPj8/
3j+nKk1okQj+6Xls/n/zqnZpwbUnmpmTK0D/n3+P/e5iu+N1rwFP2tIRr+F3
F/IFY8ZTzuZu/zn/QTPy+AzwFHlRiQ9bZ6URrSbbOJGXGrYf/h/36nKEGePL
ReNPHdxcwY1cmgl8WR7Ug53vCscaV5oypA151zgb6nMyNZPxsmU2zS4duaR9
VP4G+GP+qz6uKi7LX4v5p3VLYePIrbjXj91ftNddAiDPpn7sd1NXruf3Tt9n
TVed3gn2nJNs39v/eLm1fnvNSfHRTfBei/PzIP6z7Mg002g7+jJqNsS3rjwG
/C+87H5xeXAlOubtQzbuWrHzpsGmtpZt+hM6+TycN+U1213gPuSi/LTo/QUP
cqLcWuU+Tf6kYb9b8NBaOB/r8l0bEefJ5qVqrJ8vrfy1ZHycMzmaEAf9PF2X
nRem9yiIqLzPlMYv9PnXvCHW+dU2dq4/uDBMf/7DX5o1a+FcL3f5zPrJgj0d
B7p9aUs69c2DfiJPYN+36OvzUOtuFjR00TuoT5GfMbu/0smY2/5UvrZjnpNy
zyAPvMp43IHlvVts9SS06f3j4L/S8SP41zqVvuPZcA258vEyvLcwgt2/3Whi
NXFdC0fqJK+G9rYf9RT8G9+YMzm8HtXU901j/t2qQR0OXKrcNrJZazL212rI
M9ftBNirWeUe6/egBT1zoAfsn0df+Av3Bv2eLE+ISzOi3eggyHNZHJuvEuvq
Ev1B5qSv+QfI88YkNj/r9vDe16i/A6m1js3P341mQfyN3q3PxzdpRzrFmhb9
c94Q67yriw/412vm83HVtdYkwuQK+MdOXcX6YfTxL11jbclLn57QXrMlU9l+
plPgUL2y81qO/QGwJ+8PgTi9KmkOXSi0IS7GlhDHrjy7V+xW6F5/y/1Cja4P
/H5GnjM5AOqm8ZoyavwRF9LFYQ/0t2OjnrJ5IOLRWpPqHnSc7AP+g0ZXYfvw
4k9nXSbWoRH5yyD/covZOc7C4o72yewDmpU0Dfx/tKoF+SzbcT35p64JWb95
CtTfLOgNO/fNaljVKcSOLAlsCf71gkqg/ssjk1Y9N/eg1qb9oP5mfb2h/wd1
fdy2UrIHcYjuDv1/UJonxDF9te2ibOhBNc/YuVvkF8PZPaS8+AQ7990xSam8
epI76dTWEvxXztsHebr29p02ys2bbDu3BPrDhMGMMz6s0qR8u2t+dInDavCf
sKgU6tbzZXTtrB/tSc7NrWBvTxiv77vNr7LfBTv6xSuM3atM6grxZwzqXxTf
rS299PgYfJdKDo3APz/R1z7RsAoxKhkE/vZDrzKu4ZrcoI1JOeoyvwTsLd6w
3x19dRm5PMqiItk1uCu0662DKfiHlo6s/b5ha9qohR3U7e8BC6jbcmd/66Da
7uTwmtdQt3sNCPifGrbh6PZMPfJZ+4mdE0csyoR5ePj63bbdPKjJxf0VFfvU
KHY/GdqlU325TwuS2KVx+f9r3vh1SRf86159urYfsSCtHnUF/9NxRu8V+8u9
BT/SSj3p9FVxerCfrNQL/I+Pm6TrfaIh7bPsCuTTN4Kwc9nWebHxRk3J5gg7
Nl/ZNQX/Kub9debpOhO/y4YQ36MP+x2U4Sedw3ebtaNTtvpAf/tl/Q38HTfm
rd5woio94hIPcXw2svPy6+GTHHzMMzQjzJzgvdMn9IF+uLOb9ZFvAa50+a05
unB+yToBdulyL6foAxLt/Oo5vLd7ZBi8V9fM9xa9pkuqHSqG/jPHdz3Yh/Vd
u2N7XK422fM62P+msXvj/meSEyc1MCKdp0yD7zi4eSbEt0h+1N53WV0yePUS
iO+yjN3POI9cDPu6x0bwuyx5lmcq+DfZlztokcaG9N+4D/zt7Ni6P6/PzFuP
KzuTpcbwO0x5xuCZjEc/un5omYEVKW9ZF/rhjKqsbkPNtIv/pjuTXVG+ULef
5uPBXsO51fpPhs5kUQVf8KeOLcE+v92rqL/lW5F6Uabgn9aHzdu1x52MC6pp
Re8fYvN2r5lXIB+9kxWHDCiwJ95+K2G8h2bIYJ9Yo2nHP7H25GDzrWD/1JeN
o7PnUkebv7an7nXZONp8jt0Hti4tH95z/DeN9aoStv95tILtP4cUXE8Pak4a
ZvYD+61ots7OfvO4YfxfKzL6/QOwu1Vj58GLBZ93RrZxoovgZjFNXs3tm+af
zw59pEvHlrJ7tjofA8G+eVDLfrlzmlBfvctgt03uBfackkPN1zSqS6Q0/f+/
PLWY5zfXR+w+7ajHB+8LGtI0KRP8qx+YyM7Xj8IbPj77V3vb8Az4V8q6A/aE
wae3xYbY0w+VJkB9OmWw/fyJSNemHc9b0fiX8Hts+cBi9t7s6X+rFk3K16zz
ZPelVXNZ/pMDIq5fsa5M7HLY+eVdKRtfGhtrf+NZZrR+anOI09VpOdjNQoxO
5Xo6kY7hQ8B/nSmbP0//TqRxky1pvJcV+DscYu+tt4bdV3y7xNrb+VEnsI+/
6/PcL1yPXOltytblSFbn74eHxo22K0e62H4F/+qzWJ5DfJIu/yYWdMqiK2w/
06822Fd6Le2vE+RAlpGp7D7WnN3v9cp5Me1dgBldcZjd72F9tr7NbVxWH4L1
GWqbAfWfVdJpT+wLK+K44w7Yc5qy3yE3XLKtMO2vDR04JRn6s1sNPejndTsa
0Ma1a1DN8sOsnxv0gDj2e8/mkJ5eVP51HeaNtdP8WPxhraUDtU3o2AaPwX71
Cjtfex8rlz29Uxty1Iedr1dOYfNGl/N3wgbMdCNLLUtgfmjlf5nxoFF+C3z0
nGmeYXmIg7yg/CWD4UH9CxIr6rB7Iffd7Fxw8vvduXt1K5JxczZC/EkB7HdH
B06OPDC2AyGZpZUg/908jmV29MgzCRnuNXmc8KOG7HcIUzuEuBq5k6K2K8B/
fn+2/7fyMznx28KenD2qLflnnM85r08UpWS4m/A4QQ7sdxT302s6bgysQ5eG
w+8oZO0tK7bu28RWaK1pSrPHDQV7HN7zP3JcW9MuwP0Pv+c/H8b2n6sMPdc7
6ZvTBxfZ/jO6Mft9tUnpyPwvVnVp+2QHnX/yi/6zbp271vqbuw7P51MK6w9h
vxf+GOztSL2KWX/wPMJ+D9zyQJ1O3+Kdaf7V7v/KJ2PhhQeenb+5F/N86vVn
v8/RNekyqsMSZ/rjHvw+Rza4wO5/krxuFv881Y6eauv8r3xwfUSeMugZs58r
3eE+olaBxtScjZfh3dl5XBviun7bzrbk3jR2n4Nx2pz0L70y8Fsixrl9hN0T
Zu701Mz9IJFhZuy++pxJV7A3W961rfZ3czJwkrHOPzlOOmuXynHO7WHjMSvY
zN8u6ZnWooTdj20ZyMb7imSXGikbG5MN99l+CbmML6uzyrNqLmP3LQnai9Oc
FmVqB15i9y2jl7D7w1EhXjtH9XKhw8e2BLv63ePguyfid59ofxXsM2r+dHga
60FnpS5j+2otOydmhQY67TepSWKPsnNiglDnHB4n5t0OsEd+jtG/42hPa+UZ
Mm6ykP0usY7BiopW8jfNqx81/lUfjIP1qW3C7HLYNrOuNb5pyo1kdt/gKLC/
e+nRYsS6RrR1K7t/fS8TNk7V/mM18yWb/wvHPDz10YkMaP0M4vwuX5P1nxv+
NuM+NCIl2llg7zmH5bk383PBzsgijUc5+P2kbHqfnUcC3zVe6baoGbHcw+5P
tnZm6+8HrwHp87yNyM4LbP29+Z7V7fSnUabbKjYgR8exuoX9ZPu0xK0Dpg82
+aAtmM32aVl1vdn+P7zHLLcNhdqZixkfSWVcMzGGt0+f16edU9j4r/0zEk9y
+zve3t6ca+J3/s3tm2wsP1S6kup+TLBrm/YIKa77zR2/A/Zzv7Qac9p3/JaI
dvwuCSa1My7bFqr+5bn9CuOaibFCnJ/2xnq1Sr8kYj4l/L3jGwT/6Zr9xV30
f87ySUTOiXyTc83/5Ln02b2VOaZF7v8e9+ny+Z4TsvJNf7kj/0Tuif0MxxPy
Tc41KXJO5JucaxLknMg3OdfUIudEvsm5JkXOiXyTc02CnBP5JueaFDkn8k3O
NQlyTuSbmm95j1a0qEiQcyLf5FyTIudEvsm5JkXOiXyTc02CnBP5JueaFDkn
8k3ONQlyTuSbnGtS5JzINznXpMg5kW9yrkmQcyLf5FyTIudEvsm5phY5J/JN
zjUpck7km5xrUuScyDc516TIOZFvcq5JkXMi3+wzIemJUmc8b+E5i3NNipwT
+SbnmlrknMg3OdekyDmRb3KuqUHOiXyTc02KnBP5JueaFDkn8k3ONQlyTuSb
nGsS5BXIKTjX1CDnRL7JuSZFzol8k3NNgpwT+SbnmgQ5J/JNzjUpck7km5xr
EuScyDcPPuw0/3hmGxrG+ZsF526ca1LknMg3OdekKufkfJNzTYKcE/km55oU
OSfyTc41CXJO5JucaxLknMg3OdckyDmRb3KuSZFzIt/kXJMi50S+ybmmFjkn
8k3ONSlyTuSbnGtS5JzINznXpMg5kW9yrkmRcyLfXF/+7GOlPyPnRL7JuSZF
zol8k3NNipwT+SbnmhQ5J/JNzjU1yDmRb3KuSZFzIt/kXJMi50S+ybkmRc6J
fJNzTYKcE/km55oa5JzINznXJMg5kW9yrkmRcyLf5FxTg5wT+SbnmhQ5J/JN
zjUJck7km0svV5+4zL0pvcw551fONznX1CLnRL7JuSZVOSfnm5xrUuScyDc5
1yTIOZFvcq5JkHMi3+RckyLnRL7JuSZBzol8k3PN/8wbnGtqkXMi3+RckyLn
RL7JuSZFzol8k3NNgpwT+SbnmhQ5J/JNzjUJck7km8HrdW4abKhGkFdwnYXM
uSZFzol8k3NNipwT+SbnmgQ5J/JNzjUpck7km5xrEuScyDc51yTIOZFvcq5J
kXMi3+RckyDnRL7JuSZBzol8k3NNgpwT+SbnmhQ5J/JBzjUpck7km5xrUuSc
yDc516TIOZFv1jW0GbW9f+X/rIOca1LknMg3OdekyDmRb3KuSZFzIt/kXJM0
FvLnXJMi50S+ybkmQc6JfJNzTYKcE/km55oUOSfyTc41KXJO5Juca2qQcyLf
5FyTIudEvsm5JkXOiXyTc02KnBP5JueaFDkn8s2+/2O/wbkmRc6JfJNzTYqc
E/km55oUOSfyTc41CXJO5Juca1LknMg3OdekyDmRb3KuSZFzIt/kXJMi50S+
ybkmQc6JfJNzTYKcE/km55pa5ITIBznXJMg5kW9yrkmRcyLf5FyTIudEvmll
tfB4Vo4tFevMuSZFzol8k3NNipwT+SbnmhrknMg3OdfUiPlzrqlBzol8k3NN
gpwT+SbnmhQ5J/JNzjUJck7km5xrEuScyDc51yTIOZFvcq5JkXMi3+RcU4Oc
E/km55oUOSfyTc41CXJO5JtvVjrX1KdG/+nPnGtqkXMi3+RckyLnRL7JuSZB
zol8k3NNDXJO5JucaxLknMg3OdekyDmRb3KuSZBzIt/kXFOLnBP5JueaFDkn
8k3ONQlyTuSbnGsS5JzINznXpMg5kW9yrkmRcyLf5FyTIudEvvk2dvpJC6sa
/6kz55oUOSfyTc41KXJO5Juca1LknMg3OdekyDmRb3KuqUXOiXyTc02KnBP5
JueaBDkn8k3ONQlyTuSbnGtqkXMi3+RckyLnRL7JuSZFzol8k3NNgpwT+Sbn
mhQ5J/JNzjUJck7km6UVZ11W9hvIOZFvcq5JkXMi3+RckyLnRL7JuSZBzol8
k3NNipwT+SbnmgQ5J/JNzjUJck7km5xrUuScyDc51yTIOZFvcq5JkXMi3+Rc
kyDnRL7JuSZFzol8k3NNipwT+SbnmgQ5J/JNzjUpck7km32X6pgndjZQ+3MH
3p8516TIOZFvcq5JkHMi3+RckyDnRL7JuSZFzol8k3NNipwT+SbnmgQ5J/JN
zjUJck7km5xrapFzIt/kXJMg50S+ybkmQc6JfJNzTYqcE/km55oa5JzINznX
pMg5kW9yrkmRcyLf7D8sI0DZ17XmnBP5JueaFDkn8k3ONSlyTuSbnGtS5JzI
NznXpMg5kW9yrkmRcyLf5FyTIudEvsm5JkHOiXwzOXl58PgdjjRjCBvvjzay
8c65JkXOiXyTc02CnBP5JvJC5IfIDTnXpMg5kW9yrkmRcyLf5FyTIOdEvsm5
JkHOiXyTc02CnBP5JueaFDkn8k3kr2Keb2Kdhyu8VmwX55oa5JzINznXJMg5
kW9yrkmQ4yG/41xTi5wT+SbnmhQ5J/JNzjUJck7km5xrUuScyDc51yTIOZFv
Pt8eA/cVyDkLON/kXJMi50S+ybkmRc6JfJNzTYKcE/km55oUOSfyTc41CXJO
5Juca1KxPoPHDZUVTtmOc0s3zis51yTIOZFvcq5JkHMi3+RckyDnRL5Z5Dik
U2SdVmSbV0X2u4m5fjAeOdekyDmRb3KuSZFzIt/kXJMg50S+2YTzkm38Prw+
vz/nXJMi50S+2bz1hMHNa+Rojg1i51+HPvD/s5Lbcq55gce5ze/VOdekyDmR
b056M21I8G136tySnYPoBnYOSgeuWeCOui7Uc3GuSZBzIt/kXJMg50S+OTo0
Ysi0DUX/4RGcaxLknMg3OdckyDmRb1bu/miuv/3/4yAYh3NNgpwT+SbnmgQ5
J/LNkWO3Pw7s/k3Np5S3i3NNgpwT+SbnmgQ5J/JN5BdiPhu7Nzw/aXVbGmY0
HuyRfym7b2FckyLnRL6JceKEfDjXpMg5kW9yrkmRcyLf5O1SeVMRj3MsMLrm
0I/2JN+F3bcn2R8FO+eaFDkn8s3/1a5uGzZ9/DLAjOT0Z/k378vy51yTIOdE
vqmfndP/0Ooid+Q733k+Ef6LL6wPtSHb57L+fOsn68+ca1LknMg3bcd5eU9+
XeAucqvLIXqjA241IrHN2f+PrXKdEWDnXFOLnBP5Znze9XHatQWJh3icCrxd
lmcrHc9/0YIO01QG+/y8FWDnXJMg50S++X58hQYdOxYk7kNdI4/DuSZFzol8
k3NNipwT+SbnmlrknMg3OdekyDmRb3KuSZFzIt/kXJMi50S+ybmmBjkn8k3O
NTXIOQW+6S7wTYnzTXeBb0qcbyYKfFPifDNR4JsS55vi+JU433QX+KbE+Wai
wDclzjdFXilxvin2E4nzTXH+kTjfdBf4pqrbFPPkfDNR4JsS55uJAt9UObrA
N1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Jc43qcA3Vd2m
wDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2mwDdV3abAN1XdpsA3Vd2m
wDdV3abAN1XdpsA3Vd2mwDdV3abANyXON8V7MFW3KfBNVbcp8E1VtynwTVW3
KfBNVbcp8E1VtynwTVW3KfBNVbcpcApVtynwTVW3KfBNVbcp8E1VtynwTVW3
KfBNVbcp8E2J800i8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1V
tynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNifNNKvBN
Vbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTVW3KfBN
Vbcp8E1VtynwTVW3KfBNVbcp8E1VtynwTYnzTSLwTVW3KfBNVbcp8E1Vtynw
TVW3KfBNVbcp8E1VtynwTVW3KfBNVbcpzhuo2xT4pqrbFPimqtsU+Kaq2xT4
pqrbFPimqtsU+KbE+SYV+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU
+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimxPnm
f9ZB1G0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U9Vt
CnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPVbQp8U+r7P/YbqNsU+Kaq2xT4pqrb
FPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4oKrb
FPimqtsU+Kaq2xT4psT5psiDVN2mwDdV3abAN1XdpsA3Vd2mmD/qNgW+qeo2
Bb6p6jYFvqnqNgW+qeo2Bb6p6jYFvqnqNgW+qeo2Bb6p6jYFvqnqNgW+KXG+
+Z/+jLpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6
TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb0qcb/6nzqjbFPimqtsU+Kaq
2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq
2xT4pqrbFPimqtsU+KbE+SYV+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPim
qtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPim
xPkmFfimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq2xT4
pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Ob/023+m29KnG9SgW+quk2Bb6q6
TYFvqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb0qcbxKBb6q6TYFvqrpNgQNK
/4MbqrpNgW+quk2Bb6q6TYFvqrpNgW+quk2Bb6q6TYFvSv+Dw0qcb4rcVtVt
CnxT1W0KfFPVbQr8TtVtCnxT1W0KfFPVbQp8U9VtCnxT1W0KfFPifJMKfFPV
bQp8U9VtCnxT1W0KfFPVbQp8U9VtCnxT1W2K9eF8kwh8U9VtCnxT1W0KfFPV
bQp8U+J8kwp8U9VtCnxT1W0KfFPVbQp8U+J8M1Hgm6puU+CbEuebWoFvSpxv
Jgp8U9VtCnxT4nyTCHxT4nwzUeCbqm5T4JuqblPgmxLnm//hEajbFPimqtsU
+KbE+aaoq1J1mwLfVHWbAt+UkAMKfFPVbQp8U9VtCnxT5RdiPpxvEoFvqrpN
gW+qcQS+qeo2Bb6p6jYFvontShT4psT5JhX4pqrbFPjm/2wX55tU4JuqblPg
mxLnm4kC35Q436QC31R1mwLflDjfFHV5EuebVOCbqm5T4JsS55vuAt+UON8k
At9UdZsC35Q433QX+Kaq2xT4pqrbFPimqtsU+Kaq2xT4pqrbFPimqtsU+Kaq
2xT4pqrbFPim9HL85zM2u17J/CkZLrlfNP/mJzn2cErImr3P5Nn1KhjfXfFa
ivK3Xfps42f5scGWGsu2PJK/Ruh+a9vljVTr8qWCWpos+c/HEWOmLLkvX456
lzEr641UqeRRk0bXsuTpvnZnrFJvyPXWBE5YOLps3U2/GPagZbZ8v3fhzK4R
SbJx6LOrtS+mSS3uvLe+OztbXu0VN6hPZILcq+2EEXdz06R2HbeZbIrJlr0t
3s8dOroTqb/2Jvz/uGu3O6vsf+U/3e82LvOXenP/n4Z1ain+tWIWBpfFlzB+
bnAbGyX+Qf33Jg1Tb0i3Ep9DPkOfOM9R8nHd4z+oLH/pCs9/5b6RzZT8H7H2
SoOSF35V2mvRyOmb0t5fo/esLauPNC5hYDmlPumVli9R6tOs77ZHSh1f83rW
6km+K/XkdcS6qvXMsKvqOGTWc3xK/e3cAtKnZsmvk+IqV+r7WI5IqbGqtv0L
adS+vEOL7bPl9OaLNxs0eiB3WqT91jz5hXTyy/In7a5ny8P097ztduOmPIzU
WVvV+aXUpfvVZzM0X+Sq8X3WjWmXLLfZmnHWbMlLafyqN+eiI77IsS+aJz8k
x+V9aU/6bDv1UnLw6Lyu8PIX+XmK3cougX4kfG6QT9KVl9K5fBKb+OiL/LDv
3iVl/hL6d5rwCvwfnu09oiy+lJRQ5ZwS/++h9ReU+N3H5hn537gpjeD5LD2q
+0TJp361uD1l+UuYf/Ktn4+U/B+U5OqXtVeqvCllmtLeO833HVPaezryqJ9S
l60P4joqzwFj+wxW6jOwZXodpe5Yzz/DWi5W6jll9pnXZd9JNjr399fSsu/m
6KstVr4XryPWVa3n0c7XSnx+PsandC/MelHsn2w52nbOtYuHH8iN1oxJ7zjr
iZTieDNj9Z4v8sbdORuMtt2SO2r7j6+W9kRa2jGkeptGOfLCe9EHC28ky7l/
iifEN3kq3fDVbJEX5Mg3Br/OOHz/uOzju62He6+nUsmIQeXczubI1Zve9H07
24vEzkjwk0c8lfILSuWzN3Nkq7ZNNx25f1z6mr0f/LP7xpa6lvkX6YdnlcWX
8nh87x9Ho5T4Xez2RZXlI81u8DRIyeer1TjIp/w4q1dl+Us2PP+HQVPTlPy7
jp9r6lvWzgWDrAyUp9+oN7OV9r7SObFSqXvTVnd1lPr4tLtyRKnPoqLD5dqV
9fvavJ5+MwZD/+fjRM5vU2mwMm5CmnvDeJlievNT2XeVxz95slD5zp8+LXql
fF9eR6yrWs9zP/1vuJmlyg6BzU+VPaUZN05tOdI7R273nE4/5H1brjuhgeeA
SalSzS0zZnqm58jdwup7DJQuyclu925+jU2VhrhFranjlSsP/fFtcQ2/E/LS
HssM8+6nSvfmm78yDMuVp4dpSu2re5M7eTnnvF6nSvOGG02uFpkrh5/SWVjm
L6H/j4hG4N+ihZ1tWXwpicd3zx+3Vok//EbDGWX5SJiPd+ZkyGdB1RvpSt6a
Oku1ynPbgnkblfwjF5T8VOq+jbd31t8Bb5T25vc7WNmurN9bT1y3SKlP/t65
0P87+bulK/NOHq/nsNVVbJV61mXzpny33Om9ZfOo5OT6bKEyX/FxJet0M/tR
Nu6lhJ+HnirjK9v53LCyfiBHsn4qnRhGjZT+wPOWow87d1baMWHqo9lK/i2O
Dfafc/c2PqUHle5NzJ2WK/v8jRlcHH1J1uie+GJqf0dK+1J+f9LrXLle8ohy
I2JOyA8HkPP24+5IL5t6FQy3yJNPGF02MTjYkQwILbqzfs4dyWL7torbnfLk
DbWmpZb5S2fKNwH/Uqvu+Yq/U/DV6LL4EuHx79Xeu0eJr3eo6hglj5Y8nzS3
DROUfGaOaN5bqfuz4Sf9lPzDB/0JVfLHfs/HpfTr1Dro/32HvtumzDtYn7Vb
Ih8p9Zlr1H+TMu+/4fWcGKydodSTrxO4Lqnr0dRDG+LL5jX52HPfAGWeG9dh
RKIyvx1c9npG2TiUb42O2qCMyyknPDYr4/FOdtOHZf1G7sL6qZRXzXq10n94
HbGuaj1f9rmcNuPNJXxKHZdGpOp0yZPnTDwZaJ59Qu5pGDE0pOJlaeDzwR0G
rs2TK+0KNu4Y15vcOaSXcd/4sjTqk/7asP158oIWE8eX+Us9uL/Omf7gX2ja
5YcSt1QeCfGDJ119oMQfEVSuvFlZ3X15Prv33t6r5LMz9MB1pd935flH7cuC
8eUbtGiHMu8c+PMD2ms+d8Y6pb0VXtfZp8z7w7z85yj1WZS+myr1mfPGNFFZ
dx/yep4JO9NEqef2Wtf8y9ZpOciiZknvsnXbtPzGusp6zdcVXJfU9ciPzZvy
zImFxsq8eGHXex1l/uTjVs5qGh+njOMjDy68VMZvyO7Td8r6mbzW3nS+0u8+
yEV5Sn+rMGvz1LK6yDntCj2UOt0cWNxeqU+1/dN3ZRqfxKf0/KL17eGpebJb
F9u4yRu9SECsWZXFVielfUcu5Zl+zpM3P215Q/Ez4P4nDS/fUvxzTNYtV+qO
8SeaOUN8fe91b5V+38/pyhwln81JD3KVfFoPtKymzDuYfxP9Asjfwt1qkjLv
h+34WU9p78pB7f4q83/mdYehyrqbYjHkrFIfx+Jha5T63PevOETZ9wTzeh5O
lmsr9bRk+yT83WKYKd8v8XUd13mK6ztfh3Bdorgeed89d7ls3pQrBOkr8yjN
bh8wUZk/+TjHcU9xvGcdfljlgfFleXf4yNeHXnvRCL/5q5X+2XSzx7lFVifl
iq0kpa60cd6yfKWec0yO+SjrIH9Slm6+jHXn34Fi/W1reTqXxZeKQ9pA/OBu
hauU+C2H6v9Q5p1jsR8hn7bxPSoo+RzadPKxMu9HdDtaouTfePieICV/g9vH
ByjrbutBu72V9xp/epmotLe1lcFgZd8TNcQf6nN0os9BpT56+45V+Oc5ydpr
v3LfKZfvfA/6c9HEObBvTemXUEep/+wOdp5Kf3Yz/PhZ2WcFz323UflefF3H
dV7G9R37c3FYx/7KOlZHWgrrUW+/ndCf9TLOHlbm3RUzoqA/6/L+bDCiaaQy
T9i8bgX9jfdLuaFBdr7yXDNiBPTP8aNqldWxN9kj5w8qq6tcZ2xJrlJP+2lh
O5V+jP6NYkeB/xfen689/gLx4y4HeirxK/L+7PqmSpySz8G/Q/7Vn/NvWy9R
8m8p9YL8r6Y1h/4cZzgA2rvwhtEfpb16o19OVfrzKc+9NR+V1WedS/hypT73
eH/+w+v5Xk6D/byBW4v7yvx8w2jFEuXc8OzWbCtlPrl9NzBWmZ/r7b8wXtnn
6t9urVXmnxg+P3faseSJsi8rGHo8Upmv/kZ+1Srzc7HN9n7KPiKrwXJY3yU+
P4fpycuVdW9Z+1EwH5aweVMefsy4SkjZs/vfovvK/DmLz8+5rE6y3/gHUJ97
5U8ZKfPz2LBjg5Rx0LnX1JVK/4w5luipzAt8npC7eTq2/+f8jPGNdzSD+E+7
DoP5eSHP5/b2xrA+Tkh59UqZn6V3LSYq+Sd1Lljxz/m5kfN7aO/2ph9WK+2d
ztYvKcUweYFSH8O2My7+c36+yuuZ9Nsb5md+LsJzkoznI9xvuL+OLVTOGZHn
psN+g6+/uA+Vcf+J+w2+b5Jxv2TP9xu7cxfPVJ6eGTPG/3O/8SdhZq2ydsvl
/eKhvbdLKvVS+tnu1RV/KOOggYkp9Dc+zgkf9zKO92CD5co4kXZx/1+HfXIU
fwe+35ga+QTizzD126XEr8D3G3t4Pv612gX9c78xkuefk7Zgxj/3G2J7x90a
HK3sNwivzx2LDrDfmMn3Gzt5PT0mt5us1BP3z/zcKeN503hatSJl/2wypOcW
5Zy3a1MA7A/5Ph739TLu568cPPxA2T9XaVn8WHm27Fl1g7L/DI2xHaLkPYu1
Q84r9yZEyX+X3dVaSr/h67yc1mTxOqX/VDsQ3UMZt3wcy4Mm34Hxm3M9TZk3
yUf/PbeVdeCgXssJyvzJx7mE/jje5QVnmyv7BoyvMy0exhevo8Trqtaz9xYv
JW+JP+V3U7ZFKPlH8f0ztneei+5Lpb0XbvTVVfbPxrw+YcEHU5X6vF53LkvZ
P7fj9TR60QDuHwayc7u8anNoHeXeosaI6V+V80vqsvpzlfMgP3fK5NbeOOW8
w89FeE6S8XzE9/G4r5dxP4/nQYfYM9OUcZBd8KAa7D/HFMF5kI9LOaD7qbXK
eExd/TJLOQ8+uK4TqqwDSYO+/lbmQ74OEb4uybgeHWbzpjRrvAH4T6/Yu1Dx
v7cjG86D3jx+ZpE1jPfO/DzYkueTOexItX+eB3ld1XoOauFaRzkH8qfcLfFS
qNLechNrrFDOg/d5fTbPvXRYqY/1rdU/lHsQrKftZr98pZ6frlSqrNxvVH63
ZKFyb9ThWCjcb2xh53Z5/tLiHsrzdoU+A5Xz+yt+v8HPnbJraEWIH3XJDb6r
TmqnqmXfWfaptOi+8n1H8vsNC3/nfco8tH19wkNlfBnx+w2+D5Vvn0qD+f8u
2yfJcefCxirr8L7oYeHK+sLXdcLXeRnXdxI2Be43nJNDwL9z/Vfg/4jfb8y5
+nWvEl+34QFZid+T32/YX4yDfOyPP7j/z/uNhecPGij5L3nrck/Jn9dR4nVV
69nY+aiPcq+R06jYX6nPLV6fDZvP11PuNyrxer4YXzNMqSe/V8J7Jhnvl/C+
jt+LyHgfwu+v5NrvB39RxoGL77Hvyvf6ze/rXrFxI6932WCjjJc5/L6uYvHh
tco6cP3AsxBlvuL7eFw3ZNzPr+X3dVGehr2UfdCDcklmynqduHA03NdVYPsm
GfdLRfy+riTEFPyrNHKH/VJNfl+H8UNtKjVV4u/h93W6PJ9WJcFTlHz4OJf4
uFfHO97XNWL9VG49QB/uJwv5fV2dxQYmSn1Cr1ktUOrThN/X8adc1zIuW6nn
h+AOgzJNX+JTerb10PK4PZ/lxCeX96aavZY7HF1/9creF1L95E8Jb5w+y3az
KvVT/NA/6sa1FYq/1oVcKPOXPLj/z9NWRxT/uoNut1fil47R91eeB7YOilD8
T0aeS1DiX6rlcbHMX57tEB2v+Ff6YTNAicufciSPn8z8pGoVehxT/p3mXRfI
Z+bR4pvKv/9WUD5GeX+n5YuPKXb0bx1W5bBinyCnHv+nvyGPczs+IE6x87gS
/3dq/Iy0S4cD37yUw/O3HS97SnZ5gxKGtf4sZ7qb7lH+zP9e+tDmyynF/tsk
KFrxb/hrc4zyjLE0PavYb+kHxyt+/CmPPzMqXrGPMci55PK67Hs8+NZn5p6X
Ut6JBas0pZ/kZ+Ynhyh//vapw/Wyv5c2fK+7XLG/WVEzqMwuN98VdEv5d/tv
XVuk2G3ZnyW7qi+VOPL+osErFPtr7j+p+GuK8veDzWcuVOyHDli8Uf5cn793
S/+DEGfq3NNJSlyM4z7SNlyxP+X5HDhplqr8/dclfxYr9v8PgS06+w==
    "]],
  AutomaticImageSize->True,
  ImageSize->{343.0755553265699, 344.25226017561164`},
  ViewPoint->{-2.882717837549886, -1.1678757566240692`, 1.3326680329930178`},
  ViewVertical->{-0.17322552112109676`, -0.13022461753317885`, 
   0.9762348425561659}]], "Output",
 CellChangeTimes->{
  3.599967968636574*^9, 3.599968001371841*^9, 3.60012941618822*^9, 
   3.600129487830714*^9, 3.600169386184565*^9, {3.600377133675747*^9, 
   3.600377162866898*^9}, 3.600469721208282*^9, 3.6005364600247517`*^9, 
   3.600565635158139*^9, 3.60070185521732*^9, 3.600726991947473*^9, 
   3.600727584116074*^9, 3.605000006726667*^9, 3.605273189605987*^9, 
   3.607946261463538*^9, 3.614098459662738*^9, 3.614503188137774*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindDivisions", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", ".5"}], ",", "1"}], "}"}], ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.600187656732573*^9, 3.600187711205761*^9}, {
  3.6001877452134933`*^9, 3.600187771643107*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", "0", ",", 
   FractionBox["1", "2"], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6001876672996063`*^9, 3.600187680825757*^9}, 
   3.6001877114757223`*^9, {3.600187746196392*^9, 3.6001877719020042`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "zvIn", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"angRange", " ", "=", " ", 
   RowBox[{"\[Pi]", "/", "6"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lvlSets", " ", "=", " ", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"zv", " ", "=", " ", 
             RowBox[{
              FractionBox["zvIn", 
               RowBox[{"2", "angRange"}]], "+", 
              FractionBox["1", "2"]}]}], ";", " ", 
            RowBox[{"100", "zv", " ", 
             FractionBox[
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
               RowBox[{"Sin", "[", "\[Theta]y", "]"}]}], 
              SqrtBox[
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
                RowBox[{
                 SuperscriptBox[
                  RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}]}], ",", 
           RowBox[{
            RowBox[{"-", "100"}], "zv", " ", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]y", "]"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]x", "]"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}], ",", 
           RowBox[{
            RowBox[{"-", "100"}], "zv", " ", 
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]]}]}], 
          "}"}], "/.", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[Theta]y", "\[Rule]", "p1"}], ",", 
           RowBox[{"\[Theta]x", "\[Rule]", "p2"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"zvIn", ",", 
          RowBox[{"angRange", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             FractionBox["1", "4"], ",", 
             FractionBox["1", "2"], ",", 
             FractionBox["3", "4"], ",", "1"}], "}"}]}]}], " ", "}"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"p1", ",", 
        RowBox[{"-", "angRange"}], ",", "angRange"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p2", ",", 
        RowBox[{"-", "angRange"}], ",", "angRange"}], "}"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Specularity", "[", 
          RowBox[{"White", ",", " ", "40"}], "]"}], ",", "Gray", ",", 
         RowBox[{"Opacity", "[", "0.5", "]"}]}], "]"}]}], ",", 
      RowBox[{"Mesh", "\[Rule]", "None"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"Graphics3D", "[", "lvlSets", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.599966578201754*^9, 3.599966613306287*^9}, {
   3.5999666548431892`*^9, 3.599966697635215*^9}, {3.5999667459712877`*^9, 
   3.599966750201412*^9}, {3.599966800178604*^9, 3.5999668040189466`*^9}, {
   3.599966871937748*^9, 3.599966928623825*^9}, {3.5999669904130983`*^9, 
   3.5999670045444717`*^9}, {3.599967039779744*^9, 3.599967189584064*^9}, {
   3.5999674101089497`*^9, 3.599967431081604*^9}, {3.599967545662589*^9, 
   3.599967570045042*^9}, {3.599967657457685*^9, 3.599967831186286*^9}, {
   3.599967897682706*^9, 3.599967931943676*^9}, 3.5999679963934917`*^9, {
   3.600128890304698*^9, 3.600128973019534*^9}, {3.600129019557437*^9, 
   3.600129111846857*^9}, {3.6001292475653887`*^9, 3.600129329706409*^9}, {
   3.600187580406145*^9, 3.600187597586302*^9}, {3.600187629827289*^9, 
   3.600187633050879*^9}, 3.600187690727735*^9, {3.600187721661518*^9, 
   3.600187738307626*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1fGdUVtfztQV7r1iCEawUlQ4iZUBQLCDV3jVGo9HEEnvDriio0diNMTaS
KPbGY8YaY++918QUa0x+Nv6+nj2XxbzryZez7nWeYWbfmT17zoc4dx+Q8Em+
PHnyXHfIkyf/+/PRq8Udkjv6M07aMToyqm+nxtzRM/DTd6E+/PuTIkVvlQ2g
eUsqB49/3ZhvPlvwfV1HT27vlRWX+kMA3VzyVcDOsZFcbIPn309OuPLLXpcL
NqgTSD07L59+9NH79/F927n1rMGZO679N3FyIO0+ZNvWISSKExeGPCt8tzJX
OvZkjuuRQCo7tkfyk6FRXDiyedWDD4vwl72K+6c/C6SuKUkJfy2K4uMHfCuk
rz6fNeP3tb9mZweSeY7ifMaetH2c8U/afxETD+l4ipr4Scd/w+RLOt8OBh96
BHzmAx/BUeMJHAVXC0/n0HDbqQc+clLHW9fb/rwuknvHjXLx/8GT+1Tz+zTv
YF8aPeDx49bBUVzDfe3zvYfceMnxIM9HD3wp8/N/G63aHMUJl6qmja5Zk+fM
+HTN7TA/ej32RlWH0k14gePmdut/r8ITlruU9xnrR52ce+zYG9+Ei819O9jt
WVG+fKx670qr/Ghc3l+CqgxvwvtOx3/hM/lC1uAHxYpv2+hH5rkJFzD2pO3n
G/+k/cebeEjH42LiJx0/8iWdb3Xg4oKzE/CRutR44jtJndINfC/4tf6O+G82
upF777peclLgbwMLXLgaxYtdXoX7LXTnqcMnDtkzy4scByyo4t+5Cb/eNnt2
p8M1+Zu4awkRN7xoWo8RJSfsb8K9XJMHOhypyn2upP6bx9Gbyu2fsPl4saZ8
oPueXUUuFOPSTR/nK9TQm4727VqtdkBTruH999ffRF3MqjmOYjtFepN5bsp7
jD1p+x7GP2n/r0w8pONZaOInHX808tT59gbufYDPGOBj1b3CE30ifW/1C76r
1Kn1fRGH4EqVEE8ht3qB16M85KT/nD9tWetREz61r2QPn1a12GFGUKu+xzxo
8YpoD582Tdmnyu7Db1I+4npjzs1a51GPvlzzyRufVU25f/kxM1znFOcqQeuj
h/SqR85DS64odu49Pru+HJ9x92JWmVstQncPr0fmuSn3Nvak7T2Nf9L+T5p4
SMdTEHHr+KcAd53vItS94LMB+AjvaDzBU8KjtAt8hb6Svrf6C3UgdWrVA+IW
XGkR4v/4gc1j6o5aclJk3bHN5xxpyrvn/3N2dzkn7l6k6Mx8DrVppW+/lFCn
aB7gMtNxaq0SfKDm0A49vd6/n3Jwz/PYaL7Ty/3htC6XsprPefRmKtUm8xzN
fYw9afsdxj9p/06IQ8eTH7jr+Oej7nW+s8E7icDnDfAR3td4Yk7IXLLmxXjD
a/wNeK4j+O1T04fcE31ZFv2IupE6teoHeQquVr49ay7Jv2Ckk5y0tJDj6q6D
orn35v7ZHdJKcPS4ug8r7XKici3aTPJfE80fX2nVf+KOS1lXL30/4eUJJzLP
0dzd2JO27wa/2n834K7jcUfd6/h7gXd0vuPA+5gzFv/L3NV4Yk7LnLfm9UUz
V7go5swYzBfwoPCoxYeVTN9yP/RxNfQv6kzq1Ko34CK4Wvj0O5P4qvzJEnLS
5HYtlne4Fs0dw25srvL3pSzHPX7NOt4rQeY5mnvBTttHAXftfx/qXsfjCN7R
8ZcC7+t8L2DuYm7TWOAjukfjCZ0kuilY9NIgM9d5r5nzwXsx3zGHZC4FyzwC
bwqPBgt/os+l74Ol31GXUqfBUp/AUXANFjzzfPjvchbOYHM24zK5cM+xv5Sr
7nP8R+finZx4SuXi/Zz4a+Sauzn5Dsyley4Ei/7JrTtz8JR6hg5lXc8O0Fm6
njHnWddzL8wxXc/gUdb1jL5nXc+oU9b1XCbXd8ipZ20v9az9Sz3reKSedfxS
zzpfqWfoStb1rPEUfoauZ83PX0PnCj9DJ4lu4vKKnzHnWfMz5hJrfgaPsuZn
4MSany/l6oMcftb2ws/av/Czjkf4WcffG/ys8xV+ngd8ND9rPEVvYE9irTeg
61nrDehQ1noDuom13sCcZ603kDdrvYG6Y603onPxUI7e0PaiN7R/0Rs6HtEb
On7RGzpf0RuCj9YbGk/Rz9g7Wetn7Ems9TN0PWv9DB3KWj8jD9b6GXXEWj8L
D2n9XCrXHMjRz9pe9LP2L/pZxyP6Wccv+lnnuzi3fuaNSj9rPGUfxB7PdvZB
1vsg9iTW+yDiYr0Poi5Y74PoS9b7IHjR4sOaufdBPOfsg9pe9kHtX/ZBHY/s
gzp+2Qd1vmofZL0PajxxDyL3Iiz3IdjbZY9n2d/FL/6O5V++K/Ykq/6h46XP
rP5aBF5LwRzorO43MGes+SL3G5jzrO83tL3ofu1f7jd0PHK/oeOXvVrnK/c+
cg/UGfjIvZLGU93XsZ37OrZzX8d27uvYzn0d27mvYzv3dWznvo7t3Nexnfs6
tnNfx3bu69jOfR3bua/TeJLG88pXhYMz3PzkpO9/vHwrtmAkr1rfol/P3f78
zydjZ7ue9KXZ18uU2rOhMV+G3VWcq3Lbk7aHnfyOlT0/N/Ys9hKHxLUa9rAj
+Z3Yy++/x99Pz/1e7MmOPYu92Ol4Ng8a2n3fQT856WmrQ1dGbLLek5331mnH
3nrffGYDx9Op/ly59fD7teb7UWzzf2r1ntLYesa/6/fW7+S92Mm/27EnO/b6
PdvxQ/rvRvZ3uvvZ80Zy0qJ/Jr066BvNhW+ku+0pGcgTL82NWHAxmCJnTP6y
26tonn7Y98mzj3z53sMuywfMD6GFQRs/X7O8GU+91jyztbMnTzw7qeBrz1Aa
ONS1zZhazXnop1sq+YXU5fSHmUNrrw2lxW2/SNuU2pwb8NxN9+tV574zagZt
eRNKr0Mnt/7zfHM+19u15VXP0vw47eMpvg3CaPjGOnPX5m3BN4MeFPQt/Tor
+//9FxZG5rkF/2LsSdvXNf5J+//SxEM6nkkmfpqk4p9i8qX7Kl8Hgw9NAj5R
wEdw1HgCR8HVwnPfr0lVJ90KlJOWx6RXanCuGd99k3gm/wVfvlyw8ou8sxuS
94k/vuk3ozlfTDnSpmGWJxe+c+nZ99WDaJfXy2GzqrfgAksjXJbWc+Wlm4c1
v5IWRD817FC2wNcteLdbpmOJM9X582vh5fPcDKK7M0o7ej9owescD6xtf7E0
35rTcU/nko1owIufdnV1bMlNFpwK4TpvsnblXXG0RrVGZJ5b8mJjT9p+i/FP
2v+7JR/iIR3PORM/FUH8uxH/TZMvXUG+PsjXBlz2KnykLjWeD8x34hn4bovx
vYCj4Gr5f5wZ3i1loJ+c9GTB5SFHE1pwkfY+/faGefGxA+3D+z/zo9tuWXP2
/9OCq5y84DbklSt/5zmt0tlkf3r7btjBHoNbcvjih48iOjtzuQyP3nuX+FOL
p5Ur7D3RkksnNAk89EkZjvh06L/Rv/jThqrDFz92iOHwG38NeFvxbdb9lv+e
H3zen8xzDOc19qTtg4x/0v7LmnhIx1PAxE/HVfx/IE+d73ngfg/4+AIf4Eka
T/S59L3VL/iufAnfWb4vcBRc6RbiGeXxW++MH7zkJM/oS3PXf9+SA+oHD8mz
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
ArrHHfi4A5/cujMHT6nnLOhWwT8J9ZwMnRWp6hlznnU9Yy6xrmfwKOt6Rt+z
rmfUKUt93kc9L8F3uK/qWdtLPWv/Us86HqnnKip+qeeTKt8E1HNr4BOl6lnj
KfwMXc/CJxng58vQuZqfoZtY+Hko+HktdMRSxc+YS6z5GTzKmp+BE2t+/gR9
oPlZ2ws/a//CzzqegeDndYh/meLnH5Gv8PMa8PMV4DNd8bPGU/QG9iTWegO6
nrXegA5lrTegm1jrDcx51noDebPWG6g71npjey4eytEb2l70hvYvekPHI3pj
BeLXesMR+Wq9cUzhI3pD44k9U/ZOtkHvYS+SPYllv4OOF13PSUo/18Up+hk6
SfKw8MdclznPMt8xh6SP+ZDSz+BRFv5En5O2R1+R9g8cSccj+hkni37+Gfr5
c+SbrPRzNvAR/Sx7u8ZT9kHs8Wzt79gHsXdyqNoHsSdxJ+xH0PGi6y38oTul
Lqx6gE6SvrT6EXNdeJE/Ax9iDtkwl1jmEXiTtD36nLR/1CXpeIAjAVcLzy3Y
A7eofH2xDw4GPmFqH9R44h5E7kVY7kOwt8sez3K/gT1T9k4Lf+yN3BB9IN8X
Ol76zOov6E7RoRb/QyeJbrLmL+a6DXOeZb5jTpO2x1wh7R99Tjoe1CWhTrkY
4geOBFwtPMfgXgMnzwQ+cq+k8VT3dWznvo7t3Nexnfs6tnNfx3bu69jOfR3b
ua9jO/d1bOe+ju3c17Gd+zq2c1/Hdu7rNJ6k8XxRJGVu9s9hctKZT37z/qpI
LMfcq/jFjOLh7P1bm/Q9/mF0+9Kol0umxPAz2In92dz2pO3FP37H4r8l/Nc3
9nxL+Rd78Q87kt+JvSd+j/d0E++VPdmxZ7EXOx1P0ewzD+KTSE6aNcul7o4Z
MVwEz8VwpuE9nuXfOR3v5ffibzbe50nr93jJ78Q9P/GfusSTKCK7VKWPWsRw
Dzzj3yk893vOnmV+R3gvdvLvduxJ2+u/K/HY8SPxWO/n+9Q/cyS9sZz0cZd/
D9uexnHD3p9sr3aR2HXjovoTPSOp4uuMfGVGvef/+83iptQN5uqP0x5X2RZJ
fUu9yd77+P0c9D35suw8f874qVN8M5coyh90qsjAmAQ+t/6e26p/PbnF+deT
twyJorNF/bwy573XSyXyvVqzujYf/bpy2r3MKHL0mB387HAC759zdumxjIr8
wnF+59BzUfRdd79FaQ8TuE/Hcw57nuYzfXozisxzAmcae9L2BYx/0v5PmnhI
x7PLxE86/mkmX3JGvv2Qr7/Bh9yAjyPwERw1nsBRcLXw/O550qGXfcLlpKwl
7zpNKZ/ARbtHPF/mHsJHJ5bpPP5+ONW4/jT/sa8TuP722Nu/fx7AQct6li7R
PIL8pt2c4vk2gePOdXv313Iv/jtzyqL77/Wyx5DLqfljE7nAgP27hqXW4coP
X11peTKCPp4346tpUxK5uvOPCffnOrL/cZo05EkExXYu9/vLdYns5VD2v35b
89v6bHkyeOzrCDLPiVzc2JO2f93/g3/S/luYeEjH42riJ4nfH/EXMPmS5FsT
+S4DLisUPlKXGk98J07Dd5PvBb+Cq4Xn+AN1p24rGConhVe7H9iheiJfbr7+
SMna73VDk02zju8MJf94p5gBcxJ5jlsPh4QG3px5PTX5RWQYjdl0bmXZPxK5
zuqMCgfi6vLWKaH/ha8No/H73P9JdEviDWENtkZ3qMSubmtmHrsbRq88GiWG
xyXxq/G1F9/r6GArceb57JX/vn//4TmJFxt70vZOxj9p/zNNPKTjOWfiJ4k/
APGPRJ4pKt/DwL048BH8pe41nugT6XurX/BduQG+cwC+L+IQXK14bl8sc8jZ
Figntc7OXHSreBLPSrxeLWaVN7vvT3C64d2QovLW4Jb9knjY2Y2fLH1Wl6f8
4fFN+SkNaUaLNkNnZiZx4RU90u9lV+LubZ2urt7ZkMpMKl93+uWk93pjpYff
QwdbmXtDy0480pDMcxI///aDPWn7/sY/af/TTDyk47mGuHX8m4H7FeQbiHwD
UfeeCh/hHY0neEp41OIr9JX0vdVfqAOpUxqNekDcgqsVf3DNM/FD8/rISd0W
xr0JO53EmxKy50R+6co3R1/7NKWxD427PHb9/MrJPLvHpNiL4yrzd2VnvQ3o
60MH+5aMrBCVzGm/rFmzILGAbfLM+sWGDfMh85zMo4w9afu1xj9p//6IQ8dT
G7jr+DNQ93ORr9T/H+CdeOBTD/gI72s8MSdkLlnzArwmPGrxG/pQ+p7GoR9R
N1KnVv0gT8GVxiLfXf28wmodc5WT2hYuk/aiZzLPC87e/cX1yhwXcKLQhXxu
1MCh0eZWc5K54pL2NwetKGDz+K/RU8cKbmSek3mcsSdtvwF+tf/LwF3Hk4K6
1/FvAO+4Il/hH0fwfkHgUx34yNzVeL40c5oPYG6vxLzGXJG5ZM0X8KDwqMWH
6FvpeyqN/kWdSZ1a9QZcBFcLnyLxFRd6V6giJ5V3Pu52ipO56JeOndqcKmA7
Erbi3ak6Vcg8J/PzOGOn7aOAu/a/FHWv4+kI3pH4hX9qgvc3It/XyNcHc9cZ
+LQCPsCTNJ7QSaKbQkQvYa7LnA+R+Y45JHMpROZRacOb3MjwaEgj8Cf6XPo+
RPrd3dQlVzB1GlIB9QkcBdcQwfPDPfqtAjac5l79VjJvyYV7jn111L32Py4X
7+TEUxS8r+MvhLn7Gvm+Rr69oHu8gY838MmtO3PwlHreCN0q+AeinktCZ8Wp
esacZ13PmEus6xk8yrqe0fes6xl1ylKfxVDP2/Adiql61vZSz9q/1LOOR+pZ
4tf1vAT5Sj37oZ5LKXyknjWews/Q9Sx8UhX8/NboUK6u+Bm6iYWfp4OfB0BH
pCp+xlxizc/gUdb8DJxY87Mz+kDzs7YXftb+hZ91PBPBzxL/TMXPHyNf4edK
4Od3wMdZ8bPGU/QG9iTWegO6nrXegA5lrTegm1jrDcx51noDebPWG6g71npj
XC4eytEb2l70hvYvekPHI3pDxy96Yxby1XqjJfDRekPjKfoZeydr/Yw9if2U
foauZ9HPt6Cfr+BMUvoZebDWz5jzrPUz+tjqX/CmrWiuOZCjn7W96GftX/Sz
jgdxk8SfrPTzeeQr+jkA+tkN+Pgr/azxlH0QezzrfRB7J8u+g71I9iSW/Qg6
XuKy8IfulLrgsagH6CTpS05BP2KuCy9afIg5ZMNcYplH4E3S9uhz0v5Rl6Tj
AY4k8Queo7EH4uQI5Psr9sFCwKeW2gc1nrgHkXsRlvsQ7O2yx7Ps79gzZe+0
8MfeKN/Z+r7Q8dJnVn9Bd4oOtfgfOkl0E4tewly3Yc6zzHfMadL2mCuk/aPP
ScfjJnsd4pf9DjgScLXwXI57DZxsAz5yr6TxVPd1bOe+ju3c17Gd+zq2c1/H
du7r2M59Hdu5r2M793Vs576O7dzXsZ37OrZzX8d27us0nqTxrHm1WMXkSRFy
0u70Qs8nTornDV0O5vvvbmOu9uz6mEi/CJowZlDQoYbxXAN2duxJ24t//I7F
fj38VzX2rP1re9iR/E7sP8Lv8Z5S8F7Zkx17Fnux0/Gkur4MKFqisZzkenZP
P/fgeJ6BZ/1e7PHvrO31e/c3iY4Buxvzt0e/btbtbgQ9TCpScmTFeF6GZzfz
7/QA75eb94z3fB/vxQ6/s94re5L3+Luk/6741X5UPCzxnH46OiW5YxM5qdns
0/X7dkrks/cGTX0X2piXlmvsd6tsUzp9flmd8a8TuXCQG9d1JN7259ixqT80
pRGHZ9bcOTaJr3YtU+XpiYa8tFTfwAZ1oqnu//4advRREnf903WEW08fLj55
psekydFUccTzVR1Cknmsz06nIndduU2w02HXI9HUwzsw6snQ9zp2zdomBx9W
5udhlfulP4umeXUmR/y1KJkfvJ5YIH11AdOn2dFknpN5lbEnbT/Y+Cftv72J
h3Q85038tAzxuyL+giZf2o58RyLf0wYfWqbwERw1nsBRcKVTsM/XKOPOqQeN
5aTNFy83+XldErc6ci3c/wfiEQXKp+cdHEl1Lz2+2To4mdudLl1736EgPrfl
VodHDyKp297Z9VZtTuYAx3xbR9f05TEd652/HRZFbbptKOlQujW7l4lJXf+7
G8+4+2ljn7FRtDW4xI9741vz1VrfrnF7VoUrl2q+oNKqKGqX/rR+leGtOfDW
6p4+kwvaGpwYF7xtYxSZ59Z80NiTtv/Y+Cft39vEQzqeRBM/nUf83RF/S5Mv
jUS+rsj3XZDBJS/w2QR8pC41njvMd+Ii+G6j8L2Ao+Bq4Vm7zomY3nXD5aTa
TW//e/5qMofv/2O438JGfDH/hkV7ZoVTlcdvSvp3bs3li9/c3emwL1dtX2hE
xI1wenu0q8OE/a15sXvxHxyOuHPj3TWq53WMoAF1RmYcL9aGx21b+bzIhap8
clIXj0INIyh11KsKtQPa8Kct9qR+E1XIFlf0f0M7RUaQeW7DvY09afs045+0
/1ImHtLxNDLx0yXEXxXxu0ieKt+hwD0O+Aj+wJM0nuhz6Xur3/FduT2+cw98
X+AouFp4zv1p9eDrUcFy0ot+5RrXetSaDz19k+7Tyo+X5w9K63ssmL5pvqum
T5s2TBVTCr5N8eDFv7U5vc4jhEYsr/LSZ1Ubvt9//q+ucz7inWc2pw7pFUId
3SYtLnauDb/+p+6ojLuFbIGuZ1J2Dw8h89yGjxt70va+xj9p/2ziIR3PTMT9
tYr/HHCPQL6C/xnUfQfg0xP4CG9qPMFTwqMWX6GvpO+t/kIdSJ1a9YC4Bdec
+AemdJq6w09Oqt3r78g5R9pw5wrbKmSVq8fRfS/+nM/Bn+b8Fz0m1Kktl3Ow
tZtay4nrHBud1tPLnwp6j9n9PLYtt/+q3r1pXQrb4g6185pG/mSe2/Lr/B/s
SdsnGP+k/U9BHDqehcD9F8S/APFXQt1XQL7vkO9I8E4g8GkLfIT3NZ6YEzKX
rHkBXhMepe3gN/Sh9L3Vj6gbqVOrfpCn4Grl23hUYPSCkfXkpI/qj1/ZdVBb
PtVndmTHNCcu+3J0vcq76lEH140T/Ne05ZcX/tdv4o7Ctt9/mnnk5Yl6ZJ7b
8nZjT9o+AH61/wjgruOZh7oPR/wjET+Bd5Yg3y+Q71TwvofCR+auxvOFmdOc
hbk9H/Mac0XmkjVfwIPCoxYfom+l76kD+hd1JnVKBVBvwEVwpfbAZ1i50PAK
J53kpK7NVyzrcK0te46furnK34VtD6N3pHe850TmuS13gZ22LwjctX9n1L2O
ZzN45wHiF/45Ct4fj3xnIt+KmLvXgU974AM8SeMJnSS6KUT0Eua6zPkQme+Y
QzKXQmQe+Rve5FeGR0NegT/R59L3IdLvD01d8gtTpyEvUJ/AUXANETzN/0+9
iA2nuVfP045P5MI9x/4q6l77b56Ld3Li8czF+4VChP9jMHd7I9/eyNcDuqch
8GkIfHLrzhw8pZ5XQ7cK/lVRz4egszqoesacZ13PmEus6xk8yrqe0fes6xl1
ylKf3qjnU/gO3qqetb3Us/Yv9azjkXo+gfh1PX+GfKWeK6GeDwOfjqqeNZ7C
z9D1LHwyE/zsDJ2r+Rm6iYWfl4Gf/aEjRil+xlxizc/gUdb8DJxY8/M19IHm
Z20v/Kz9Cz/reBaAnwMQ/2jFz7ORr/DzdPCzC/DZofhZ4yl6A3sSa70BXc9a
b0CHstYb0E2s9QbmPGu9gbxZ6w3UHWu90TwXD+XoDW0vekP7F72h4xG9sRfx
a71RGvlqveEDfLTe0Hhiz5S9k12VfsaexLIfQceLrueqSj+n4nwO/QmdJHlY
8WOuy5xnme+YQ9LH3EnpZ/AoC3+iz0nb+0E3aP/AkXQ8op9xsujn89DPwcj3
I6Wfk4CP7Beyt2s8sbfLHs+yv2PPlL2TXdU+6CJ7IfYj6HjR9Rb+0J1SF1Y9
QCdJX1r9iLkuvGjxIeaQDXOJZR6BN0nbo89J+0ddko4HOBJwtfCsgT0QJ9dB
vsOwD8YAHzfgI/cgGk/cg8i9CMt9CPZ22eNZ9nfsmbJ3Wvhjb+TT6AOpf+h4
6TOrv6A7RYfyNvAbdJLoJha9hLluw5xnme+Y06Ttq0PXav/oc9LxoC4JdWrV
J3Ak4GrhKfcbgo/c/1j3SgpPdV/Hdu7r2M59Hdu5r2M793Vs576O7dzXsZ37
OrZzX8d27uvYzn0d27mvYzv3dWznvk7jSRrPmI2tu2e4RclJM/5edCy2YBKX
vjpoXs/dTdjlSdpW15ORNC997f9sGxK5JexicabmtidtDzv5HSt7/tjYs9hL
HBLXTNjDjuR382HvjN+Xwt8XP8qe7Nhbf1fsdDwlkipP23cwSk4q0qXfwRGb
Erk4nkviLIr3eJZ/Z3kvvxd/xfA+uU+jsNOpTfia1/Oitee/3y8zipbuPSWR
r+AZ/269v2recxJ+5473YoffWe+VPWl7/XclHu1HxcNi/3/8jtF/
   "], {
    {GrayLevel[0.5], Opacity[0.5], EdgeForm[None], Specularity[
      GrayLevel[1], 40], GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJxNnHW8ldWzh88+exuYCKiogEhKGpQISIiUoIBII6nSSCndiCgtKYKUoIJB
SSqpCIKCjd35M6+FedfzeZ/12f4xd+1Zs2bmmfWefd4v597rJd0GtOyfm5OT
0+jUnJx0WD8Ohn9OsPODnRIshHIKuuYJlj8nOZsJVsD1pGD5zCV2XrCTzb/A
vNOCFQ52ZrCzgl0R7JJgxYJ9H+yzYJ8Gu9CzpwcrFOwMcy5yD/9ce9KjaLC8
Ml/iCktJz8FSXG54S7gSu9TZYCzlWeYu4x4s5ewNy+X2i9z5rFvB2YoEK+9Z
/MuCXWxOWetR6+Zg1wVrEKy0PeG40rrwNgl2dbAarmVlqeFKn6pyU6OaKzNV
cX5i1Z2H/JrmwVvXZ0DPSvbkbur9Z++aYBWdo47zk1PbPfyr7EmPa82rHKy+
KyyNPFfdmavK29CV2PXOBmNjzzJ3s2C1ZLnR3rDcZL/63mUV67ZwNuZo7ln8
lu6Rc4P1astYwvt6MNi0YNODtfpP7cXB7jN2i/mwdHalTzu5eW7tXZmprfMT
6+Q85HcxD94e9uPn4q5gtwfrGexW91oH6+pZ5uju/OR0cw+/Y7Cm9rjNvDbW
ayNLX8/B0ktuePsE62BsgLPB2M+zzH2He7AMsjcsd9ovcre17hBnY47BnsUf
6h45A63XTcaG3hfsDfSHWRfe2cHGB5vgOlCWCa70GS13/2BjXJlplPMTG+c8
5E80D94pPgN6jgjW27uZGmy4e5M8yxx3Oz85k93DH2tPetxr3sic5OdopCwz
PQfLdLnhneFKbI6zwTjLs8x9v3uwzLM3LA/YL/68jrLuwmD3OMd8zzLrIvfI
mWu9yTL28b6WyAfXUlfY+X3G7xW++w/LQe01wRbYc5V1iT1kHnMsc+V5Lndl
1nU5yfeQno85D9+/XcGeDPZUsLXuce7ZYE8Ye9R5yHnE/vgrvS84VtgH/3H7
LLXuMlm2OAM1NphDjY2uzLTes8S22RveZ6wL01ZrPKq/1Dt40pV+O5yHubdb
A3+ne9TaLR89nw62Wr497sF4PNjBYIeCvWDvbe5ts/Y+Z9gU7Llgm6231xrE
Djj/Vmttl/El75rncMze5L3sHowvehb2I94FOYfdw3/envQ4ah61XrEejG/b
m3rvuFLjDfNhfNOVWV93HmLvepb+3wb70tof2g92fr/wO4rfN5+b+1qw98xj
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
I2t/Y/2f3H/7P3f3jnvfuf+FTNR9Lczyc1jTuUn9H70Xzv/kzCfnJrP+Fizj
eeY/JTfZ+z1YnvD5BAzBzgyf/w7rP87yg8/p9LD/Z1j/4k5zk7P4Z+Qme+Sc
mpvUO+EdfOkdtw77DYI1DHZWblKb53Rz+HydMf4tTn4e/03OSp8CuQk3z+1c
V2bKn5vMTez83GQe8i80D94i9uPn4spgxYIVD3axe3mDXeRZ5iicm8xPTiH3
8M+zJz0uCXZOsHzWyydLKc/BUkJueEu6EivjbDCW9ixzl3UPlvL2huUK+0Xu
/Nat6GzMUcGz+JcHK2pOOesVkjHX+/oo2JvB3ghWybrwXh+sRrCaruVkqelK
n2py87eTq1yZqarzE7vaecivZR689XwG9KxsT+7m2v/s1Q52mXPUdX5y6riH
X92e9KhvXpXc5OeoiiyNPQdLQ7nhbeRKrKmzwdjEs8x9Q7BrZGlub1ha2S/+
vFa1bktnY44WnsW/yT1ybrReHRlLel9t5IOrrSvsW4KtCfZIsC5yULurKz07
W5dYO/OYo70rz7ODK7Pelpt8D+nZw3n4/g0P1itY72C3use5YcF6GuvuPOR0
sz/+Ld4XHJ2CNdO/3T5trdteloHOQI1+5lCjvysz9Q3W0dhge8N7l3VhGmSN
7vptvYNervQb6jzMPcQa+He6R62RwfrY8w7vGr5R7sF4f7CJwSYFm2Dvwe4N
tvYYZxgQbKwr9UZbg9h45x9krSEy3uNd8xym2Zu8e4ONkHGyZ2Gf4l2Qc7d7
+OPsSY/7zKPWdOvBONfe1JvnSo1Z5sM425VZZzoPsfmepf+DslJ7sf3w49+D
0A4z7En+AvOYdVGwqc73gCv5c+w50fvr7PNYYh/qLXWFa7VM1OZ7stDaK6zF
c1vpytzLnY3Yw85P/qPmwfK4/eizO9hTwdYHe8K9h4I95lnmXuddkLPWPfxV
9qTHk+Yts94yWTZ5DpYNcsO70ZXYVmeDcbNnmXube7DssDcsu+wXuZdb9xln
Y46dnsV/1j1ytltvrYyzvK891oJxn3yw/+77nnfiIfNhedGVPm/lJr/Lng92
wM/MtN8azHTYszAes9/eYEd9Bnu8v5ky7ZUFjiPmMcdLrtzBy67kH/S+4OPf
AGhi9PILshD7INjbcv2qZkJn/Kxm4r35i9oR/4Saifl/U0uR84faiNhfaiO0
Be9a9Aa69PXcRLfxPkYHoTWi5mIl51+1LLE/1V7UfcX595nPe/0c+fLrw1dA
Hy40xnlyoAculJW9c63L3gXOU9CcqMMKylTIfOqiGYrJh+6Iuqmw52C/2FjU
SVE3sRaVsYS1ok4qIVcpfXqjMUrLUkYf3rL6MJXTp3d5/fPNKyVXBWP0Rktc
Jhf6IuqsK4zBVMkYM1Q0H77KxuCroh/f37zzeA+30486qZp8aIzq9kYPXOMM
1T1HD/RITWeoYU7UYTXkq2M+GgQtcp2s6I6om+p6DtZrjUWdFHVTfWPwNbRW
1EkN5WqsT2+0RBNZmuozA+/8ZjLdqE/v5vpXm9dYrhbG6I2OaCkX2iPqrFbG
YGptrJ5nW8jXxlgp76KKz7yaftRDPA/ewbyPRsuH3uhkPbREV2dgr2NuVm91
cYbO5jR3r7N83c2P+qOnrGiNqLN6eA7W24y19WzUSrcbg7e3teBAh/SRq58+
vQc4Eyx36MM7UB+mQfr0Hqwf9VY/uYYYozdaYqhc6Iuoue4yBtNwY7d6doh8
6I0R8o3S53c2v7t5d0Y92j43q5PGyIfeGGc9NMkkZxjnuSHuTXSGCeZEHTZB
vrvN5xmjGabJiu6IummK52BFe0yVl7NRN91nDL4Z1hrrPDPkmqVPbzTFbFnu
14d3rn7UW3PtPV8/6q1Zci0wFrXRIrnQFFFnLTYG0xJjUz27MDerk5b4jEc7
Hz2W+TzouVwf1hX61EBXPGKPx/ThRo+slPth/aixVtibvDUyrjWffugLdAbv
bd5fe3KzeuhJZ1hnzlLPRi32uDHuZbW9YV1v/grrrrc3GuNp+dAYG83ZrA8T
WmCbvFvNofcOY/REV+y0Lry7c7P6bIPcaIyooZ415ynP7pJ7p3XJ2+f8j9p/
q0z7jb2fm2im542hUQ5YA530oqwHPBP11iHrHTRnu3sHZTpiPhrnFXtFnRR1
00ueg/2osb2ej7rsmLEPg72bm+iYT/XRNZXS4d0ZrEQ60Tz8nSGv871tX7TB
G+4z63Gf1xZ9Pn8S7B1z3vYzHF/a6//4m511cuSAB732WW7yNw7inwf72Hv9
wrofuHfcfq9bkxpfmZsy/yN7fGDu2+ZS9znrfmwdzn5m7jeef9Xan8r8iRzs
/x3s22DfmfuV9/Whc75r7a9lPZJOzv9l7W+8l3+s8X2wf11/4F7SyfpjsNzw
+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
       "]]]}, {}, {}, {}, {}},
   VertexNormals->CompressedData["
1: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
0lXVN1mZ+rZM1UP5h6qH8i/qIfVTPlf1U+r6Sb2V1Fup661n6zE5eV+ykdoH
AeTnMerOj9QhHU/qv1hLH9D1vwR9dyF9eBj9Quse+ovcQn9Zie7sjQ7V+tMK
3W/loHzAYvrXVnxXID7MhX7XTPVH+UH1R5lFf/xN9VO5QPVT6U4/PaH6r3RQ
/Vc2oP9+UP1avlP9WnalX49XfV16sC6lv6MH5DbuwwHiX4m8v6jqqHxA/s99
oerOcerQNvZ7I+r+cvrATvJzLn23IX14KPFchu45hw7qgv4Zj+6MRIe+Ri9F
o/ur4gNqoa988F1d8WGX0GPO+N5r+OAr6Le/ld6TF5Xek2PQe69dc/ShvKH0
oQxDHy5QelLWVXpSPkFPojtlAqvWn8+Iezz3oRfxP0fe12EfWJP/fak7Y6lD
h6g/1Zeouj+LPqDrZ0n6bgx9WOvtaHTPc5WncjP5+QzdOQsdmkE8y6L76+AD
tqL/K+G7/vuqfNhU/EJ+fO8gfPDf+Ivv4Q7OcIiJ+JFGyr9IB+Vf5Fn8S7Dy
O3Kf8jtyEn5nlfJFcimrC/6oJnFfwX1IJP4VyPvt7IMfyP9bSifJStQhrZfO
Ufef0AdqUv/PZub4QfmIPqz7bxi6JxQdtIT62QbduRQd6sp+L4/uv4IPcCA/
S+G7quDDJhHPTfje3fjgifjfd8ovi6dwCCv8sg/cpzQc6D3+OlX5cdlA+XHZ
Cz9eSPn2b2t+/PtJ4n6D+6D9/jPyvobySdKf/J9M3RlOHVpG/UlT/OFbH3Ck
/g9UOklOpQ+70H+//1PpHvq81P09L7rzADq0Pf0oHd3/GR+g9X87fNdtfJg3
+x0+IwqqPP2Wn//CHV7DIQoTT2+4TwAcqA/85xDcbQ8crha8yFZxJbmZ1Re+
1IW4l1c8SrYl/tbkfQn2gR/5H0fdCaAO/Ub9aaX4mGxJH/hE/f+LvhtNH/al
/55B9yQrHSpron+GxirdmYwOvYZeWoXuh+9JG/p7lLvyXePwYavpR4H43kn4
YEn9nAl3GKQ5BPv9O7hPGBwonfzcBHc7B4ezIZ7j4XTuxPME8RzjZ/PO4Nfz
1CpmThrnbnDs0tbioMGdd48dOtXg05UqBowyOLM+bwSrM+e/LZdzvnDnfAfO
78T1XVjnc/5Krn9JnS9ff6fOn8B123L+Ys7vwXUn8nfluX4ifz9dHRcZXOcv
znfiuBXnn+f8YK6TwPl7OG8Jv//M8fley62sImJl6fM5q3D06ehs8PBT6riI
Z+3M8XDOr6jOz64TuY6LGH7fluNDVuR7anDqfJ/vVHTeFysS+4VaGbz6l0/q
5z/V70WB/ur4eXVcdlip/u4852/ivOrqOvIWxwXne/P7LI7X4+cQ/p3/OF6W
6/ryd/4c38B5R/i8aRw/ClfvSH5lklcn2c8x7O/S5OHn+qqe3qG+viNv59PP
utHffifP09ETg9EX/uwLd/TcKPTdSvbR3MpKT89AX1dj3/XEz2Tib/zYp72e
KD+Zhr+swb5+iJ/3w9/7UQeawNXbwlc+UjeC4VmP4Fuaa9WHJ9rCF89Tl36B
536B7zpSx5oRx2GsQcRzB/t5LfvbgXjeoZ4Gmri6L/0sD1y9iImrW5q4+m8m
rn6eOv8Crv5V9YVvXAh+Iffhb3QfKT1HcXXtL3XfmYCfd8Hfz6VPPYCr09eE
7muD4VkD4VvL6YNh8MRS8MUb9E36rPCD72qdYwFPL8xakL5chucZ5bkP3Yl/
EPW0OvX1FfmZRj+7T3/TfQ2eLtejLyahK9Ahsg76bgI6pCl6+hL62h7dMgQ/
g875xtkOw9Uj8Zdu6KJ5dxVXf46/T0VH+cJTYkxc/TY8qyJ8S/vEz9cUTzwC
X2yMrmsFz90H341BB6IbxUrW+ehGH+J+kPswjfjnIe+rsA/8yf/V9LNp9Le+
7PcEuPpU9MUZ8tMBPVcefTeeeNZHT7dEX69DVx/Gz2zD36Shw6/jJzPxlxvR
7a3g6s/w963Q+c/6K56yFr6iuZALPGs1fGsPPsIfntgMrl4G33EEnvvUxNVT
4elfWPPha9YR90Hch/vEX+d9BvvgGvl/jboTQx0aRP2Zh54o+K/SFxeonxI9
54i+u8h+v4yebmvi6qfwM/hE8Zx4PsZPvsBftsNXuuPnR+Dvf8OHdoGrn4Sv
bMe3dhnqnsOzzsK3/sTnflyjeOI9+GI8vngWPPcBfHcfPnokPN2b1Q3ffYm4
h3AfBhB/fL1oBVevT/73o+64UYc0B9B1vxF9QNf/zui5bnD1jfSjWPR0LPp6
NfVzEX6mJ/7Ghf3+Dj95AX+pn/u0xs//YeLqo+EpG+ErLnCVcfCs4vCtLDjM
w+uKJ96HL2qu6AnPTYXvpsN5bsLTb7NeggsFE/ep3Af9XKMpeT+CfVCe/Leh
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
WfLzJ/ScFfpOz//boad/RF9vRFdL07y65uqJ+MkU07z6Krh6gomrr2qneMoK
07z6I3jWMhNXD4EnOpjm1XfDc8PguwNM8+rprPnxNXuJe3vuQzTxz1TzSOIJ
++A2+X+FuvP4f3D1RJ7b+5q4ujX67gr7/Sp6+l2o0tf1yM/1+JkNpnn1nfjJ
zfjLrvjK0/j5eqZ59bfwlJXwFe1bh+1VPGsFfGsHPvcQPPGciat76Tlp07x6
ADxdz60vwndL4r6X+zCI+Ou8f8vzJe1rulF3BlGHVlJ/WlD3XzGv/h/1X2g9
B1ffTD9Kgas/hKsvp36uxs/0w99oX/MJPynxl/q5Ty38vBv+Xs/L+cBT1sFX
5sJVBsCz6prm1WtWVjwxzTSv7g3Pzfo797x6aebVk+HqPnChU8R9q4mr1yTv
/zRx9XzUnefUoSLUn6HUff29pW7U/2D9PJs+LOm/tdDT15hb+ZH+Ph0/U525
oR70o5v4yXxq3lXoea33+Pmf8fct2e8T4Ck14Sua+42AZ/0K3/pMPI/CEy+b
uLqNSw7/Fe1M8+pT4enNTfPq6cR9mGlePYi8H8U+0Pk/gbrjaeLquu5n0gd0
/f+ZvmtDH16un2uje2aZ5tU1Vy9g4url8JNnBil/mQeunoifb5+h/L1+zrsc
ntJ+ouIrun4yHy7/8VRcXc+Hn4Unzvii+OJ18jMEnnu8SO559QeJDzsd9wu9
9PDV7alWTW5+4+rdibvLjNxc/TV575hndC6u7krdKeOVe17dg7pfb4LqA/rz
wy/EwWKKq2uO4YDuKdFMcfUv6J+L6M54uPpd4vkaru6Pv9RzHb3w86lw9WXc
rwh4iquJq/OcRfaGb+l8eAxPnA9XjyV/isHVneC7muuSn7I3q87POfPV84z2
pnl1e+bV95vm1dkvwpE6pPfLeOq+Va3cXP0jfTcErq73oy+65zE6SH/fZCO6
Mwiu3pn9Pg/dHwJX13M1mfj5+/j7M/r7L/CUliauXgqeldc0r94KnugCX9T9
fS08l+/vyEPUw9fw9BTWi9TPWcQ9z4ncXH3R3py8lAUb5ebqW6g7zUzz6nHU
feq/nE39L0nf3UUf1v0iDt0TgQ7aSn9Zju4cYppXT0T3l4Kr6/41Gd+1GR+m
v59lC0/5Dr6St7Lqj3pO9C/4luZai+CJ9vDFZvTfLHjuS+amu9Cv6e9yPqvu
71uI+2HTvPrv5D3fd5O6fha1UVz9kImr87xHrDRx9X303fr04cHE8wq65yA6
SH9fbwy6M9o0r665ej0TV/fFd00zcfVZ+N5qcHUf9NtOeBbfT5Rj0Xv4IhkO
X9RzR3z/UTaB78ab5tVfmObV3xP3O9yHPiau/h37oAL5/xN1ZzJ1SNef8YdU
3Z9pmle3pe9G0ocF+z0S3ROLDtL5+RTdOcnE1Sug+yvjA7ah/5mrFh9N8+p6
nqwzPvgU/qIz3GEKHEJ/X/6j8u36e+cyEP9yAp67E747E7+zTPN0zdfxR11M
XD2W+Dcn7/ewD/T3Jb2YVy9KHSpK/TlK3Y82cfVhWarv3jdx9fVw9SATV2+H
7lxkmle3gatfMnF1C3xXWXzYdOK5Ed+7BR88Bf+bDHe4B4fQc32BcJ9XzFd+
xF/jx2VD+G4X/HgJPafOqv37XuKun2/o5xr3yHvmj77lfzR1ZzB1aDH1J4h5
9ZmmefUacPVJ9OEF9N+Ba5Tuoc9L3d/PwdW3oUP196ceoPv191Y1P6mP74o0
cfU++N4CcHU99/gI7pAOh9A85xbcJwQOpPkP7zcQJ+Bw1eFF9vDfYqyP4Ust
iLsl90HPebYn7yvA1c+R/7ruhFKHBlN/HKn7zUzz6qfou6H0Yf1cewq65wk6
yBb9M0rxOvkIHRqEXgpD9w/HB9jS3yvgu8aa5tVLwtVHmObVB+t5PjiE3u/M
/Yq7cCA996vnWa/D4aoSz5twumNw0FDiWQ1+vQSevRSOnQFXZ35b1IU/T+e8
0ayzOD8/XFrz7Jqc76h5Outczt8N134Kx06EY8/QvJ7zp3D+cK7rzN+V5Por
+Xsv/v03XOcU50/juObkHpy/jutkcfwg533k93EcHwQHt2devQs8fA2cXPP2
rhyP4Pw01pYcz+K8EI4343gkXL0kfDs/3PsWHHsg/PsNHHs9vHs1fPstxy3V
nLlI4fcX++Xi85qXi2CO+6p/Vzjw71rx79ZhXj1Ez7lz/iE+T0P+3cKc70M+
sYoKjiqvAtjPPuxva/KwGFzdz8TVt9DPWtDfRpHnqXD1fiau3hM91xN9t559
lMX3P7ujrx3Yd2H4mfv4mxvs02pw9dv4Swf29QH8vDf+PpA6cB2ewlyGsEI3
noJnXYJvjdQ6B55YBL54lbpUDJ77Dq4+kDqWQBy9WYsTT1/2M88rRCXiGUY9
vU997UxdvWWaV9cceDF64hNc/Rh1ewF6LsA0rx5qmlfXfeE//MwW/I3uI3w/
XNiZuPpQ/PwkE1d/Ck+ZAF/pQl+bBc/qCd9aQR8MNnF1PY/hZZpXn0Cf/aqe
dwu+RyYK0Zd13H80zauTl7IqXP01+RlPP0swvQdmP3riEPpCP6/PQs8J03tg
BqCnr6Gvta5uhp9ZZZpXv42ffGB6D8yagvh503tg9Lx6AnylFrqLuSthB9+y
RKdlwhMPwxf19xDbwHN3wHe1DlwPT9/KOhvd6E3cfU3vgXnL86Ta7IMA8n8s
/Wwo/U1/D4u8lE7oi3/Iz+am98DoefXG6OkaJq5+Cz+zzsTVP+Enk03z6uJ/
vAfGtq/iKUvgK3re8jI8awF8ay8+wgeeyPdkhZ7nOQPP5Xu1oi8+5T48/Rlr
IdN7YJr+j/fAaK4eSP7zfTzxiDqkv5fnip54Ff5/z6t3Mc2rH9V6Gn1dn/wk
jvIQ/kZ/D/c0fvI6/rIzvnILfr6Hiav/AU/xhq9sw7dej1A8y980r14enhhj
eg/MdnhusGlevSc8/TCr/p74FeJ+n/vQn/hvI+/teL6k81/XnaEmrj7dxNVf
ohv1nISt6T0whZhTCUNf6/dojcbPTMXfLGa/v8JPBpjm1bvi56fg77Wv32Hi
6vPgKnvhWVVMXH3nO8XVX5q4ejw818L0HpgX8PQ4Vs2FPIj7Yu6D5kgVyfs1
7IPvyP+W1J0kuLqFiaszL/qNq7+j756hD5+j//6Inr6Ivm5Ef9+An8nA32jO
dg4/eQJ/uZz6+RA/3wx/39o0r/7ZNK8+BJ5V0/QemAh4oruJq892VVz9df3c
8+oH4elFTFy9GnH/zTSvfpO8b2ri6nzfXvShDun55Cjq/jb6gOauw03z6nr+
+V90zxi4utY/6CRZKUr5m2D0kg1+cmtH5S//o78n4Oejk9NzvQdGzykOW6z4
ip5X9IJnFT2iuLre71lwdf+U3PPqk+C51aYqvqu5btycOT5TN95o9f3nsE5R
CVHfuPpkuLpXndxc/Qt5n5Kk9oG+/jLqzoWTvI+Kz8PnFzcXqD6gP388ffd1
C9WH9f8v78kRCzsrrv7V9B6YptG53wPzHj95DX9ZnfhPwM8Hw9X1e3vC4Smt
4St1uL9j4FnvmVc/TD58gieSPzKG/GkOzx1gmlePgqc3N70H5nJr9TzjTf3c
8+o/wtV/M3H1wdSdmqb3wCyj7t/m+armllH03VC4elvTe2DuoINWs383oTv5
fso3jrEI3R8FV9fzbF/w8/H4+1Om98C0Mr0Hpio8yxqurvVSBXjiOs0XTfPq
o03z6vr9L/GmefUTxD2v6T0wrX9TXL0SXN2f/Ayl7vxg4urbTO+B0fW/HH1X
f29Mz1c/QfcEmd4Dw9yqgLdJ/f2p5+j+oiau7oHv2oUPW0y/a2B6D0we/NEI
eNZy07z6mv8xr54Az82C73anX4+Dp+9i1e95O6OfZ5jm1Z8wr37d9B4Y0UZx
dR/qkK4/43ieupU+oN9Tt+B/vAfGC93jgw7qbHoPTJyJq8eh+xvhA2zQV0H4
Lid8mA96bDG+1wKu7q31GzzrlmlePa9pXv0W+tATnlsfvvsIPfkanh7FWhD9
mUjc75q4+kXyvryJq6OH9fPeb/PqNdxV3Xc2cfVi9N1w+rDe74/RPTEmrr4L
3TkbHfqGeBZG98PX5Q70f3181wd82GT8QhG4+gDTvHpjuMM8OMQE/EhZeGJl
+OJl/MtdeO4/8N2x+B13ePoaVv19XuaU5DYTV69pmlfX3xfWz/NqUYd0/elO
3ec9n1J/H7lU5P/9HhgL5gki0EGLqZ/d0J0r0KHab9qj+3lPqaxj4uq18GE6
nvvwvQdM8+q8r0QkwyH0fPUFuE8hOJB+z+oz3gPzk+k9MPh3mQeuXgT/vou4
B3EfJhP/9+Q974mVV8n/sdSdfroOUX/i4eoT6QNdqf8ecPUppvfA3Dryf3P1
t+jOrSauzlyiyOeU+z0wel79Oj7Ml/0+Cd9rAVc/Tn6mwR1ewiH0e3XOwn38
4ED94D/ecLcjcLgq8KKN8LoU1nLwpQ7EPYP70JX45yHvLdkHQeQ/7z3W35OW
eo6rF1z9R/qA/j7vDvpusH4fG/23sOJv8i46SOvPzUonyVgTVw9kXr03PqA2
/X07vqsHPmwd/Wg7vrc/PvgG9XMc3IE5Xjme/f4Frn7LxNVXw90umt4DMxau
vpJ4voOrb4Rfu8Gzx8Cxf4U7u8Cn9Xx4f84bwOrG+WPh0sM4v0zu8/X7XaQL
52/Lff1vfFvPq/fjfP2emRZc18M0r+7F3zfg3y+Wey5dtOB4FY5v5/yuXEef
z/tlxFR+X5zjzKXLpXDx8fDwPfw8iXUix3dz/nLWURzfxHlzOK7PbwCnHgi3
rgavrsvPSfDvNhzvBu925u+KcXwh3Pxnfl+c4z35+QnX+ZHj/pzfnn/nE/z8
Odf9/FH9nSXnX1c/i078vi3H/x8BnPOi
    "]],
  AutomaticImageSize->True,
  ImageSize->{379.2459625548885, 310.98882461311115`},
  ViewPoint->{1.919522264469687, -2.629165784109297, 0.923537522721254},
  ViewVertical->{0.22136863720771066`, -0.26990944256016974`, 
   1.162141580541032}]], "Output",
 CellChangeTimes->{{3.600129318212965*^9, 3.600129330919929*^9}, {
   3.600187581538432*^9, 3.600187598476519*^9}, 3.600187634406336*^9, 
   3.600187694290365*^9, {3.600187724527227*^9, 3.600187740349264*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What gear system do I need?  What force?  For axis my max torque is 100 Nmm \
(page 93)\
\>", "Subsection",
 CellChangeTimes->{{3.600123791753174*^9, 3.6001238187566843`*^9}, 
   3.600124053963189*^9, {3.6001246574790783`*^9, 3.600124728780047*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxGravityTorque", "[", 
     RowBox[{"hoopRad_", 
      RowBox[{"(*", 
       RowBox[{"in", " ", "m"}], "*)"}], ",", "gearboxlength_", 
      RowBox[{"(*", 
       RowBox[{"in", " ", "m"}], "*)"}], ",", " ", "maxAngle_", 
      RowBox[{"(*", 
       RowBox[{"in", " ", "Rad"}], "*)"}], ",", "massMotor_"}], 
     RowBox[{"(*", 
      RowBox[{"in", " ", "Kg"}], "*)"}], "]"}], ":=", 
    RowBox[{"(*", 
     RowBox[{"in", " ", "Nm"}], "*)"}], 
    RowBox[{
     RowBox[{"Sin", "[", "maxAngle", "]"}], 
     RowBox[{"(", 
      RowBox[{"hoopRad", "+", "gearboxlength"}], ")"}], "massMotor", " ", 
     "9.801"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"massCarriage", " ", "=", " ", "0.1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"kg", ",", " ", 
    RowBox[{"page", " ", "93"}]}], "*)"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "mass", " ", "of", " ", "bearing", " ", "is", " ", "0.007", " ", "Kg"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxGravityTorque", "[", 
   RowBox[{"0.050", ",", "0.00", ",", 
    RowBox[{"\[Pi]", "/", "6"}], ",", "massCarriage"}], "]"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaxGravityTorque", "[", 
   RowBox[{"0.050", ",", "0.00", ",", 
    RowBox[{"\[Pi]", "/", "6"}], ",", "massCarriage"}], "]"}], " ", "/", 
  "250"}]}], "Input",
 CellChangeTimes->{{3.600123822222456*^9, 3.600123884715514*^9}, {
   3.600123918714979*^9, 3.600124089113646*^9}, {3.6001241627229757`*^9, 
   3.6001242031707706`*^9}, {3.600124379542346*^9, 3.6001244029940157`*^9}, {
   3.600124508173874*^9, 3.600124515670465*^9}, 3.60012458024646*^9, {
   3.600124613782826*^9, 3.600124621371406*^9}, {3.600126793803162*^9, 
   3.6001268465163803`*^9}, {3.6001305144028263`*^9, 3.600130514780634*^9}, {
   3.60018309735662*^9, 3.600183099250454*^9}}],

Cell[BoxData["0.024502500000000003`"], "Output",
 CellChangeTimes->{{3.6001240272952213`*^9, 3.600124047373824*^9}, 
   3.600124204781889*^9, {3.600124379983062*^9, 3.600124406500608*^9}, {
   3.600124509185493*^9, 3.600124515976283*^9}, 3.6001245808988*^9, {
   3.600124614365118*^9, 3.6001246217154417`*^9}, 3.600126847633202*^9, 
   3.600130515337117*^9, 3.600183100144712*^9, 3.605000007021739*^9}],

Cell[BoxData["0.00009801000000000002`"], "Output",
 CellChangeTimes->{{3.6001240272952213`*^9, 3.600124047373824*^9}, 
   3.600124204781889*^9, {3.600124379983062*^9, 3.600124406500608*^9}, {
   3.600124509185493*^9, 3.600124515976283*^9}, 3.6001245808988*^9, {
   3.600124614365118*^9, 3.6001246217154417`*^9}, 3.600126847633202*^9, 
   3.600130515337117*^9, 3.600183100144712*^9, 3.605000007025428*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"10", "*", 
  RowBox[{"0.005", "/", "250"}]}]], "Input",
 CellChangeTimes->{{3.60019002133494*^9, 3.600190114640894*^9}, {
   3.600194137732304*^9, 3.600194165378004*^9}, 3.60019421369796*^9, {
   3.60019426155969*^9, 3.600194262718337*^9}}],

Cell[BoxData["0.0002`"], "Output",
 CellChangeTimes->{
  3.600190046937344*^9, 3.600190092418398*^9, {3.600194152769709*^9, 
   3.600194171581975*^9}, 3.60019421411518*^9, 3.600194263555834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ForceMag", "[", 
  RowBox[{"0.005", ",", "0.04"}], "]"}]], "Input",
 CellChangeTimes->{{3.605613595852008*^9, 3.6056136016491003`*^9}, {
  3.605613738335824*^9, 3.605613739183125*^9}}],

Cell[BoxData["0.02848377339254746`"], "Output",
 CellChangeTimes->{3.6056136020943403`*^9, 3.605613739843409*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Msat", " ", "=", " ", 
    RowBox[{"1.36", " ", 
     SuperscriptBox["10", "6"]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"A", "/", "m"}], ",", " ", 
    RowBox[{"from", " ", 
     ButtonBox[
      RowBox[{
       RowBox[{"An", " ", "MRI"}], "-", 
       RowBox[{
       "powered", " ", "and", " ", "controlled", " ", "actuator", " ", 
        "technology", " ", "for", " ", "tetherless", " ", "robotic", " ", 
        "interventions", " "}]}],
      BaseStyle->"Hyperlink",
      ButtonData->{
        URL[
        "http://robotics.tch.harvard.edu/publications/pdfs/\
vartholomeos2013MRI.pdf"], None},
      ButtonNote->
       "http://robotics.tch.harvard.edu/publications/pdfs/vartholomeos2013MRI.\
pdf"]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ForceMag", "[", 
   RowBox[{"sphereRad_", ",", "grad_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["4", "3"], "\[Pi]", " ", 
   SuperscriptBox["sphereRad", "3"], "Msat", " ", 
   "grad"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"massCapsule", "[", "rad_", "]"}], ":=", 
   RowBox[{
    FractionBox["4", "3"], "\[Pi]", " ", 
    SuperscriptBox["rad", "3"], "DensityFerrous"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DensityFerrous", " ", "=", " ", "7850"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"kg", "/", 
    SuperscriptBox["m", "3"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TorqueMotor", "[", 
    RowBox[{"sphereRad_", ",", "grad_", ",", "rotorLen_"}], "]"}], ":=", 
   RowBox[{"rotorLen", " ", 
    RowBox[{"ForceMag", "[", 
     RowBox[{"sphereRad", ",", "grad"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"outputTorqueDesign", "[", 
    RowBox[{
    "efficiency_", ",", "sphereRad_", ",", "GearRatio_", ",", "MaxGrad_", ",",
      "RotorRad_"}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TorqueMotor", "[", 
     RowBox[{"sphereRad", ",", "MaxGrad", ",", "RotorRad"}], "]"}], 
    "GearRatio", " ", "*", " ", "efficiency"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"outputForceDesign", "[", 
   RowBox[{
   "efficiency_", ",", "pinionRad_", ",", "sphereRad_", ",", "GearRatio_", 
    ",", "MaxGrad_", ",", "RotorRad_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TorqueMotor", "[", 
    RowBox[{"sphereRad", ",", "MaxGrad", ",", "RotorRad"}], "]"}], 
   "GearRatio", " ", "*", " ", 
   RowBox[{"efficiency", " ", "/", "pinionRad"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TorqueOrientation", "[", "depthM_", "]"}], ":=", 
  RowBox[{"depthM", " ", 
   FractionBox["60", "100"]}]}]}], "Input",
 CellChangeTimes->{{3.600124746599341*^9, 3.6001248553063517`*^9}, {
  3.6001251715311213`*^9, 3.600125284007918*^9}, {3.600125319005642*^9, 
  3.6001255830317497`*^9}, {3.600125882255693*^9, 3.600125884385518*^9}, {
  3.600125948917297*^9, 3.6001259671632757`*^9}, {3.600126662257435*^9, 
  3.600126692609715*^9}, {3.600126766449255*^9, 3.6001267668099747`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pierre wants 20 N", "Subsection",
 CellChangeTimes->{{3.60527320601545*^9, 3.605273213752173*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"outputForceDesign", "[", 
    RowBox[{
    "efficiency_", ",", "pinionRad_", ",", "sphereRad_", ",", "GearRatio_", 
     ",", "MaxGrad_", ",", "RotorRad_"}], "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"outputForceDesign", "[", 
    RowBox[{
    "1", ",", "0.005", ",", " ", "0.005", ",", "125", ",", " ", "0.023", ",", 
     " ", "0.0325"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{"9.4", " ", "==", " ", 
     RowBox[{"outputForceDesign", "[", 
      RowBox[{
      "efficiency", ",", "0.005", ",", " ", "0.005", ",", "125", ",", " ", 
       "0.023", ",", " ", "0.0325"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.614503201460881*^9, 3.61450322662812*^9}, {
   3.614503308723274*^9, 3.6145033201929913`*^9}, 3.614503351547564*^9, {
   3.6145036138996887`*^9, 3.614503622858839*^9}}],

Cell[BoxData["13.307262881830766`"], "Output",
 CellChangeTimes->{{3.614503619908819*^9, 3.614503623391966*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"efficiency", "\[Rule]", "0.706381175713783`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.614503619908819*^9, 3.614503623395998*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"40", "*", "5"}]], "Input",
 CellChangeTimes->{{3.6052734932188387`*^9, 3.605273493881814*^9}}],

Cell[BoxData["200"], "Output",
 CellChangeTimes->{3.6052734948459177`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"outputForceDesign", "[", 
      RowBox[{
      "efficiency_", ",", "pinionRad_", ",", "sphereRad_", ",", "GearRatio_", 
       ",", "MaxGrad_", ",", "RotorRad_"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{"gears", ".", "sariel", ".", "pl"}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Design20NForce", " ", "=", " ", 
   RowBox[{"outputForceDesign", "[", 
    RowBox[{"0.5", ",", "0.005", ",", " ", "0.006", ",", 
     RowBox[{"3", "*", "3", "*", "36"}], ",", " ", "0.023", ",", " ", 
     "0.032"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.605273219652125*^9, 3.605273220146645*^9}, {
  3.6052732524677763`*^9, 3.605273268234047*^9}, {3.605273425294683*^9, 
  3.605273479004405*^9}, {3.605273586010891*^9, 3.605273611489517*^9}, {
  3.605273670369356*^9, 3.605273671158465*^9}}],

Cell[BoxData["29.34297160537149`"], "Output",
 CellChangeTimes->{
  3.605273252847484*^9, {3.6052734611567583`*^9, 3.605273479337962*^9}, {
   3.605273596031077*^9, 3.605273612055924*^9}, 3.605273671648424*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"outputForceDesign", "[", 
      RowBox[{
      "efficiency_", ",", "pinionRad_", ",", "sphereRad_", ",", "GearRatio_", 
       ",", "MaxGrad_", ",", "RotorRad_"}], "]"}], " ", "\[IndentingNewLine]", 
     RowBox[{"http", ":"}]}], "//", 
    RowBox[{"gears", ".", "sariel", ".", "pl"}]}], "\[IndentingNewLine]", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Design20NForce", " ", "=", " ", 
   RowBox[{"outputForceDesign", "[", 
    RowBox[{"0.5", ",", "0.005", ",", " ", "0.006", ",", 
     RowBox[{"5", "*", "5", "*", "5", "*", "5"}], ",", " ", "0.023", ",", " ",
      "0.032"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.605273219652125*^9, 3.605273220146645*^9}, {
  3.6052732524677763`*^9, 3.605273268234047*^9}, {3.605273425294683*^9, 
  3.605273479004405*^9}, {3.605273586010891*^9, 3.605273611489517*^9}, {
  3.605273670369356*^9, 3.605273671158465*^9}, {3.605281206655932*^9, 
  3.605281226220996*^9}}],

Cell[BoxData["56.60295448567031`"], "Output",
 CellChangeTimes->{{3.605281209731666*^9, 3.605281226718067*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What is Reasonable friction values? 
  Keep the same torque, change parameter values to match, and add gravity \
torque and needle depth torque.
   My torque output is :\
\>", "Subsection",
 CellChangeTimes->{{3.600130338352396*^9, 3.60013035702903*^9}, {
   3.600130559269958*^9, 3.6001305958069973`*^9}, 3.600187516704792*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TorqueMotor", "[", 
  RowBox[{"0.006", ",", "0.04", ",", "0.02"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"7", "*", 
   SuperscriptBox["10", 
    RowBox[{"-", "5"}]]}], "]"}]}], "Input",
 CellChangeTimes->{{3.600130367702754*^9, 3.6001303763564796`*^9}, {
  3.600130460019309*^9, 3.600130490738001*^9}}],

Cell[BoxData["0.0009843992084464402`"], "Output",
 CellChangeTimes->{
  3.600130380805472*^9, {3.6001304663026047`*^9, 3.60013049110966*^9}}],

Cell[BoxData["0.00007`"], "Output",
 CellChangeTimes->{
  3.600130380805472*^9, {3.6001304663026047`*^9, 3.600130491112958*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "I", " ", "need", " ", "100", "Nmm", " ", "of", " ", "torque", " ", "for", 
    " ", "carriage", " ", 
    RowBox[{"motors", ".", "  ", "3"}], " ", "rotors", " ", "produce", " ", 
    "0.81", " ", "torque", " ", "on", " ", "average", " ", "per", " ", 
    "rotor"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"0.81", "*", 
   RowBox[{"outputTorqueDesign", "[", 
    RowBox[{"0.5", ",", "0.006", ",", "250", ",", "0.04", ",", "0.02"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600125886458671*^9, 3.600125935670629*^9}, {
  3.600125974816448*^9, 3.600126032427726*^9}, {3.6001262594490232`*^9, 
  3.600126352364452*^9}}],

Cell[BoxData["0.09967041985520207`"], "Output",
 CellChangeTimes->{{3.6001260036518784`*^9, 3.600126064935348*^9}, {
  3.600126282043021*^9, 3.600126301607896*^9}, {3.6001263489168863`*^9, 
  3.6001263527432623`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "I", " ", "need", " ", "50", "Nmm", " ", "of", " ", "torque", " ", "for", 
     " ", "needle"}], "-", 
    RowBox[{"insertion", " ", 
     RowBox[{"motor", ".", "  ", "3"}], " ", "rotors", " ", "produce", " ", 
     "0.81", " ", "torque", " ", "on", " ", "average", " ", "per", " ", 
     "rotor"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"0.81", "*", 
   RowBox[{"outputTorqueDesign", "[", 
    RowBox[{"0.5", ",", "0.006", ",", "125", ",", "0.04", ",", "0.02"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.600125886458671*^9, 3.600125935670629*^9}, {
  3.600125974816448*^9, 3.600126032427726*^9}, {3.6001262594490232`*^9, 
  3.600126352364452*^9}, {3.6001272690391283`*^9, 3.600127333306912*^9}, {
  3.600128477593626*^9, 3.6001284956696177`*^9}, {3.600447315750435*^9, 
  3.600447319644101*^9}}],

Cell[BoxData["0.049835209927601036`"], "Output",
 CellChangeTimes->{{3.6001260036518784`*^9, 3.600126064935348*^9}, {
   3.600126282043021*^9, 3.600126301607896*^9}, {3.6001263489168863`*^9, 
   3.6001263527432623`*^9}, {3.6001272856265993`*^9, 3.600127334363614*^9}, {
   3.600128478559161*^9, 3.600128496065407*^9}, 3.600447320076481*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massCapsule", "[", "0.006", "]"}]], "Input",
 CellChangeTimes->{{3.6001267758025627`*^9, 3.6001267788404408`*^9}}],

Cell[BoxData["0.007102512671235804`"], "Output",
 CellChangeTimes->{3.60012677914225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"IJRR", " ", "designs"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Design1Force", " ", "=", " ", 
    RowBox[{"outputForceDesign", "[", 
     RowBox[{
     "0.2", ",", "0.005", ",", " ", "0.003", ",", " ", "125", ",", " ", 
      "0.04", ",", " ", "0.018"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "I", " ", "think", " ", "they", " ", "want", " ", "to", " ", "halve", " ",
      "the", " ", "pinion", " ", "radius"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Design2Force", " ", "=", " ", 
    RowBox[{"outputForceDesign", "[", 
     RowBox[{
     "0.5", ",", "0.0025", ",", " ", "0.006", ",", " ", "125", ",", " ", 
      "0.04", ",", " ", "0.018"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6001255663855*^9, 3.600125715331463*^9}, 
   3.6001257744943523`*^9, {3.600125827101008*^9, 3.600125852400429*^9}, {
   3.600125889001218*^9, 3.600125894211018*^9}}],

Cell[BoxData["0.5537245547511225`"], "Output",
 CellChangeTimes->{{3.6001256405924883`*^9, 3.600125716074037*^9}, 
   3.600125775684318*^9, 3.600125853075468*^9, 3.605273244797373*^9}],

Cell[BoxData["22.1489821900449`"], "Output",
 CellChangeTimes->{{3.6001256405924883`*^9, 3.600125716074037*^9}, 
   3.600125775684318*^9, 3.600125853075468*^9, 3.605273244800301*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find a Scan plane", "Subsection",
 CellChangeTimes->{{3.60043709591271*^9, 3.600437101193143*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CircleEq", "[", 
   RowBox[{"C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"n", ",", "u", ",", "v"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "long", "]"}], " ", 
         RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "long", "]"}], " ", 
         RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
        RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"u", " ", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "long", "]"}]}], ",", 
        RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "long", "]"}], " ", 
         RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "lat", "]"}], " ", 
         RowBox[{"Sin", "[", "long", "]"}]}], ",", 
        RowBox[{"-", 
         RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"v", " ", "=", "  ", 
       RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"C3", "+", 
      RowBox[{"rad", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
      RowBox[{"rad", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hoopRad", " ", "=", " ", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gearboxLength", " ", "=", "75"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"baseHingeHeight", " ", "=", " ", "8"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rotorLength", " ", "=", " ", "20"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gearbox3Length", " ", "=", " ", "60"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markerOffset", " ", "=", 
   RowBox[{"-", "25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markerOffset3", " ", "=", 
   RowBox[{"-", "25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tipAng", " ", "=", 
    RowBox[{
     RowBox[{"1", "/", "4"}], " ", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pV1", " ", "=", 
   RowBox[{
    RowBox[{"RotationMatrix", "[", 
     RowBox[{"tipAng", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pV2", " ", "=", 
    RowBox[{
     RowBox[{"RotationMatrix", "[", 
      RowBox[{"tipAng", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ".", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"pV1", " ", "=", 
     RowBox[{"Normalize", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1"}], "}"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"pV2", " ", "=", " ", 
     RowBox[{"Normalize", "[", "  ", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"hoopRad", "+", "gearboxLength", "+", "markerOffset"}], ",", 
     "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"long1", " ", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lat1", " ", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hoopRad", "+", "gearboxLength", "+", "markerOffset"}], ",", "0",
      ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"long2", " ", "=", 
   RowBox[{"-", "\[Pi]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lat2", " ", "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cm3", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", 
       RowBox[{"\[Sqrt]", "2"}]}], 
      RowBox[{"(", 
       RowBox[{"gearbox3Length", "+", "markerOffset3"}], ")"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", 
       RowBox[{"\[Sqrt]", "2"}]}], 
      RowBox[{"(", 
       RowBox[{"gearbox3Length", "+", "markerOffset3"}], ")"}]}], ",", 
     RowBox[{"baseHingeHeight", "+", "hoopRad"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircleEq3", "[", 
   RowBox[{
   "C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_", ",", 
    "\[Theta]x_", ",", "\[Theta]y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "n", ",", "u", ",", "v", ",", "RotM", ",", "C3rot", ",", "xyzNorm", ",", 
      "x", ",", "y", ",", "z"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xyzNorm", " ", "=", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RotM", " ", "=", " ", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{"z", ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
           FractionBox[
            RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"n", " ", "=", 
      RowBox[{"RotM", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "long", "]"}], " ", 
          RowBox[{"Sin", "[", "lat", "]"}]}], ",", 
         RowBox[{"Cos", "[", "lat", "]"}]}], "}"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"normal", " ", "to", " ", "circle"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"u", " ", "=", 
      RowBox[{"RotM", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"Cos", "[", "long", "]"}], ",", "0"}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"v", " ", "=", " ", 
      RowBox[{"RotM", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "long", "]"}], " ", 
          RowBox[{"Cos", "[", "lat", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Cos", "[", "lat", "]"}], " ", 
          RowBox[{"Sin", "[", "long", "]"}]}], ",", 
         RowBox[{"-", 
          RowBox[{"Sin", "[", "lat", "]"}]}]}], "}"}]}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"v", " ", "=", "  ", 
       RowBox[{"n", "\[Cross]", "u"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"C3rot", " ", "=", " ", 
      RowBox[{"RotM", ".", "C3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"C3rot", "+", 
      RowBox[{"rad", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}], "u"}], "+", 
      RowBox[{"rad", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", "v"}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CenterCircleEq3", "[", 
   RowBox[{
   "C3_", ",", "lat_", ",", "long_", ",", "rad_", ",", "\[Theta]_", ",", 
    "\[Theta]x_", ",", "\[Theta]y_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"RotM", ",", "xyzNorm", ",", "x", ",", "y", ",", "z"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"x", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]y", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"y", "=", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "\[Theta]y", "]"}]}], " ", 
       RowBox[{"Sin", "[", "\[Theta]x", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"z", "=", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]x", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]y", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xyzNorm", " ", "=", " ", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]x", "]"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Cos", "[", "\[Theta]y", "]"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"Sin", "[", "\[Theta]x", "]"}], "2"]}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RotM", " ", "=", " ", 
      RowBox[{
       RowBox[{"RotationMatrix", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{"z", ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
       RowBox[{"RotationMatrix", "[", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              SuperscriptBox[
               RowBox[{"(", 
                FractionBox["y", "xyzNorm"], ")"}], "2"]}], ")"}]}], ",", 
           FractionBox[
            RowBox[{"-", "y"}], "xyzNorm"]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", " ", 
     RowBox[{"RotM", ".", "C3"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"long3", " ", "=", 
   RowBox[{
    RowBox[{"-", "3"}], 
    RowBox[{"\[Pi]", "/", "4"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lat3", " ", "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Evaluate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Ceq1", " ", "=", " ", 
      RowBox[{"CircleEq", "[", 
       RowBox[{
       "Cm1", ",", "lat1", ",", "long1", ",", "rotorLength", ",", 
        "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Ceq2", " ", "=", " ", 
      RowBox[{"CircleEq", "[", 
       RowBox[{
       "Cm2", ",", "lat2", ",", "long2", ",", "rotorLength", ",", 
        "\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ceq1", ".", "pV1"}], ",", 
         RowBox[{"Ceq1", ".", "pV2"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Ceq2", ".", "pV1"}], ",", 
         RowBox[{"Ceq2", ".", "pV2"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Ceq3", " ", "=", " ", 
           RowBox[{"CircleEq3", "[", 
            RowBox[{
            "Cm3", ",", "lat3", ",", "long3", ",", "rotorLength", ",", 
             "\[Theta]", ",", "\[Theta]xV", ",", "\[Theta]yV"}], "]"}]}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Ceq3", ".", "pV1"}], ",", 
            RowBox[{"Ceq3", ".", "pV2"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]xV", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
             RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Theta]yV", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
             RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}]}], "]"}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", " ", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Red", ",", "Green"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Ceq3", " ", "=", " ", 
         RowBox[{"CenterCircleEq3", "[", 
          RowBox[{
          "Cm3", ",", "lat3", ",", "long3", ",", "rotorLength", ",", 
           "\[Theta]", ",", "\[Theta]xV", ",", "\[Theta]yV"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"StringForm", "[", 
           RowBox[{"\"\<``,``\>\"", ",", "\[Theta]xV", ",", "\[Theta]yV"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Ceq3", ".", "pV1"}], ",", 
            RowBox[{"Ceq3", ".", "pV2"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]xV", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
           RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]yV", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Pi]"}], "/", "6"}], ",", "0", ",", 
           RowBox[{"\[Pi]", "/", "6"}]}], "}"}]}], "}"}]}], "]"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.600429033782542*^9, 3.600429076324144*^9}, {
   3.600429108149291*^9, 3.600429248023603*^9}, {3.60042931726195*^9, 
   3.600429351758708*^9}, {3.600429393006126*^9, 3.6004294475733757`*^9}, {
   3.600429478346616*^9, 3.600429548722989*^9}, {3.600429582458461*^9, 
   3.600429747849485*^9}, {3.6004298008383007`*^9, 3.600429809226335*^9}, {
   3.600429866549399*^9, 3.600430170361867*^9}, {3.600430308027652*^9, 
   3.6004303296827374`*^9}, {3.600430410079809*^9, 3.600430530724023*^9}, {
   3.600430587843623*^9, 3.600430593508651*^9}, {3.600430641049747*^9, 
   3.6004306542716513`*^9}, {3.600430693842339*^9, 3.600430847434518*^9}, 
   3.600430907089522*^9, {3.6004309708783627`*^9, 3.600430985727438*^9}, {
   3.600431071028945*^9, 3.600431087343184*^9}, {3.6004313694546824`*^9, 
   3.6004314092282257`*^9}, {3.600432117055952*^9, 3.600432135836075*^9}, {
   3.600432440361042*^9, 3.6004324879395723`*^9}, {3.600432549567829*^9, 
   3.600432555222971*^9}, {3.600432766543318*^9, 3.600432784913801*^9}, {
   3.6004333842484417`*^9, 3.60043360784761*^9}, {3.600433661570362*^9, 
   3.600433699403351*^9}, 3.6004338473343077`*^9, {3.600433911443714*^9, 
   3.600434011224807*^9}, {3.600434058714025*^9, 3.6004341354960613`*^9}, {
   3.60043417385785*^9, 3.600434270247114*^9}, {3.6004343015952272`*^9, 
   3.600434306646597*^9}, {3.600434354741343*^9, 3.600434374299932*^9}, {
   3.6004351900454073`*^9, 3.600435195229342*^9}, {3.60043529968256*^9, 
   3.600435375680417*^9}, 3.600435437856529*^9, {3.600435476679077*^9, 
   3.600435558804822*^9}, {3.600435761197551*^9, 3.600435958657071*^9}, {
   3.6004359981258698`*^9, 3.6004360057323723`*^9}, {3.600436036255583*^9, 
   3.60043604678137*^9}, {3.600436106686105*^9, 3.600436112862957*^9}, {
   3.600436347941555*^9, 3.600436660378755*^9}, {3.600436696781073*^9, 
   3.600436754865447*^9}, {3.600436792303604*^9, 3.6004368709129753`*^9}, {
   3.600436919054468*^9, 3.600437135850955*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1: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
w/Pl/+TOz3/jUx4eAS78PTXa6T/YgrmddjOMuL+quxiY8XyaX3pw4fovTQQ2
t+w2Y4d4Hz1nPKeJqkR1DgtiF1nsL44b1EQKds51StiP/ov5rdyliUgD4+y6
2OLVZ/m7WjRRhnuJkDk2aTmwhq9UE928xXP64L/1M4zZU5anid7lpVd7YNte
N6q1S9dEh7IONwf+e19Ignp8rCbSGAgj3camUsVNZEM1kV3X6wOF2PO9lmoN
ZzTRfjkr1zpsnQnLrjknTeTOlFQ0ji0oU7Rvu7Ymqtf8qmOA46Ern1TFqqSJ
ZlJNWe2w16/birdv1UQFaWnJx7Gt1APZd3FoIgHNAy9TsHuZNUu3f9RA6R9U
RhlxvNb4eNxkGNBAOeX8PhLYbWKSqU9faaCx8PZqE2zNz8c2qlVroLDD8WeC
sAUTxx9zJGsgng1HI9awRcOye1C0BvLKHu8Ux/nEUiNT0S9YA61/mO0xw16f
rQgectNA70yCWeOxs5QleTJNNFDCKydmaZyvoq6OBDDNqCMF2fr9/jj/WS9l
aj0aVUd6mt9Ec7EPdlrb0fvU0fyWnzfeYkfYVdXcb1RHW8YdizSbHIC/TT/H
LEUdCfxec/+FfV1YxPagpTpSXHAXeIDzs+rX8uA/huoob+Cu6UfshGxW4wx1
dRS585WYaAs+X/bb+78XUUdr15/+uYKdmZppXz6hhuwMFc1j8HkQt5+8dN5U
DY1lkTuT8XmSN8aQunWbGmKh6BR2YdPZ2F/UCqnh8yZQlvcFjo+026NL86rI
xrho4Rp2quUe7yP3VNEElWUqC59Xj7X45dXZVNHxy+p6A/h8y8ltuVPSrYzu
HHj//Sk+PwXFvvbsqFdGFTuL9nHj89YlrUxlrEAZrX1OcjyCLZbyksYXpYy8
yWbKm9/i+Gh8v8lfVxndtBXhd+9xAL+USbY9adtQyAatHkN8vs8zcPBSjimh
0j+tcRRcL2xcmj5MtVNCTnwdw03YzGzUuH1GSqidND+uieuLsdkUPxdeJfRs
TIBD4ANeH0cO77A6RVR0nqgeG3UAr09XBb4IKKL8Pf0B6RMO4OEUfrv0uTza
feb0tZu4/hmxNds3WCaPLiwJsIvieunZGaZCpgx5lBodqZaNrW0mLe/sK48s
m0ViSr7h/PqzRlxWUh7539/s3DuP89e3MA22YDm0sKXuJhnXXz8WiVVbdVn0
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
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1: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
     "]]}, 
   {RGBColor[0, 1, 0], LineBox[CompressedData["
1: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
ibVO3RsiyXpYzx46ebiAifskllwYJ9YLv+nhfJ+JfnvoPG2y3n7xJ3isR0zU
flJw9QVxtlRDg8pLJg7/GFSOJfHh4+w5NPiBiXWbOpljJH7M67WiW7uY6L+K
1vCIxNcC7ooLT/rJeti6784i8feam1l/7R8Tz88OlQwl8frQ4875uZKGWLle
ZOr0nMTXvuLGOGlD1N6xXRdekHxSaV/nqWyIqgX9riYk3qvtd/ZqmBnitnDt
qgMkPyy2fco/zTNEmF/zt4TkT3PX2lp5W0OcnXd+rKeJBkYdFsMSboZYLf3N
MJTkX96lbPE/Ww2RWd5wuqWNBjtre2B7rCEeYF2sX07yW8kk8tFYoiHOE5/3
8OEnGox9bc4WP26Iz4N9vjR8oUFC0B0vlSJDbDFoHXYj9WOHvrMord8Qz3WI
iUmSeiR8kL9Ic9QQ9+aafZxC6lX93bUKFX8N8cRuk61Sf2mQmMJK6p5thEHt
4Q/o4nTwlVafdFhqhM2/vVo+kXpopGp53zXQCC/Njd/WTerr0d4yq4lNRjit
8098OKm/z3a5vM2OMsLyHXS2OJUOuaYu834kGaH/TqNCCy06eFiLMOuyEc4Y
DrqyiEmHm5o1xtpfjLB7SYnidls6WCxovl3SY0TOcxTVnSvo0DTpr2g9bITF
5RMR++zpoPiieM8GcWNcc2rReMkqOoj/zi8qXmKMlXL0+O1+dODabuzc5mmM
zjXVhQdi6XD/d3CNvL8xSlU3UOfupsMX/4mNBcHGGNf1vDE7kQ6t7YnivTHG
+ClfdqTlAB1KPbz1g08ZY8auLJkbmeR7k/72H3pjjAevRrZ9uEOHdYtfehp/
IL+3+frl2106bOmYG9nWaYyqFdWL/lbRISE196T+iDEurXu5yOIpHfSy+uLe
zzVBZc5JnvJ7OvjHiswdHE3QVF8Z/P/R4bGtIOX8cxPM37tw76zlemAnvFAg
3mSCRlLWOvsd9EBvKXf1ujYTVOmMtpV1Jfv/6Gs17X4TvLHo9i8zXz344rYz
vHSOKbLyIz+KR+vBC6/oxz1Oplh2qDbC5aoepIwwh4+9M0WPytoGMWl9OP5U
7KVYuyn+/LCgJneuPlBKM9pDe0xRZsmNP2uV9GGjc9El0bgpJlTo0j9p6UPL
d3cnscUs1HNTiHcW6EOE6T3eNh8W+i/XUPu5Qx86L6/9HPyVhSo3anhzfuqD
kaNn8rIBFn5vZfxdPa4PuvtsF+v8YqH7fh1bF3ED6ArnzuiSZGPbYqsLhVIG
4BX95JaXJhvvRGsKMxYaAL+8/5LtejZOV9+2j2piAIvzeUm/29mo33N6o/I2
0m8u4PXbtZmhfzbcChVnQA2aRFR1muHxpsSDgZIMOFx738Gw3wxl3saWbJjF
ALntLXPnT5rhqhuvRiPmM6CRvS7slao5blu/V+yuDgNWPh9wVfc3x879cYOL
nRkQInZP3qDHHO0+Oj2UymHAI5Pl3x1+WKCP+6VAXV8mPJsoKfUZt8Bk/hhD
bgMTfseq2G+aaolNm7ZUj4cw4Qn91/vkuZb4Y4zPbI1mwvT4OP18Q0vcwBUu
eZrKhL3Dh5+XbbHEBb8ay92qmPD5YmbA82FLLM5LoxprGELcrZXng/o4SL2z
7l7yL0N4njrtt9MqQOeAkZNvso1BbnzqiSfGPMxMiH/nm2UKV68NqHSzeDhz
+YYTSldNQbXs8pZpFjw8TpXyb7phCoslvWMs+DxM02xmON4zhXbfU19P2/Hw
Ic3Ew7fNFLoOVacv2cDDBdwgg/ZFLJi4eknC+CQPTcp+h7hlssAj1lB60w8e
Vi+pCM85wwYl14M620Z5eLXO/XzSZTZYHPxzcccfHjnvel1ff4MNgvGjBbsn
eahc42irg2w4/nnNjJhZfLzV3upZ+4UN1j/6pi1S4+OREwfPr1pqBu+fMBgK
jny0na4dXlJhBsP3mn3rr/Jx21Rl1/5P5rBu+mnPtbl8lKY/KJvSYw7Ji13S
vubxcaVKkUDhhzmEJDVdH73JR5MMwWPraRaQ8dJzz2QFn+S3ttVNHQsI2bNG
u+IlH8uunWq8E2EBVgohe5pG+LiQcmPTvmmWsNmTvU/rNx+T37r0VchYQuli
28KoMT7SPqRzhxZagmf56U3yk3wsKb/s7aVrCdvaFh1lSAlw478BS749Gd9z
s36+kgBffE5m6p2yBJePc0c3WwiwfvBBbyKdAx4pJwvXcQSokp13Wd+EA/N9
P1c6gwB95M6+buFwQFOn67GeUIC9B3RimQ4cmKJ/4cKr5QI8VfnnXVcEB9Zo
nuuv9hDguR1BLb5lHChSDHntFSXAsNLzjDQBF06MrOxQ3C7ArpRsE5sVXJhv
WcxuiBGg52v14AkXLnyt882HXQJ8utnYY0MAFyY6svMk9wrQId1+Pnc/F8Z+
6Bdw0gQYsfOIxs86LqRyQ/6tuS5Am06dAVKewSEkyHgyT4BnZigs62MAlLgo
OZ+/Qb53aOapyyYAMYW3oPWmADkrM6UVAKD7ZN9bszIBTn97bumEE0BNdfjR
tBoBPjG2k8ZoAKNIB+2c9wLsHFj9h1YDcPRQkodUG5lPkyOs9scACqyy9es/
CFB96BacfAHQuCp+muJnAf4bXH9F7C3Ap8oO74AuAY6PvLrw6huA29bZtFOD
AqyRU6f5z+GBQt/TbM+pQmyd0Ul38ODB7/TI7HUSQpTeaJud58WD+PqJ0sBp
QlzZtb5Kah0PEtMuq4VOF6L7xvDx+8E8sBSuGfWaJcRXGeGgG8uD9gtizl3y
QlSQT130PYsH6Xd1j9XNFaKybvQdwSUybru2s3ieEPeHPho8dY0HZYOj93Ys
EKJUyjItq5s8mCb1BoYVhchYVXQivZoHF1Uv2SeoCtFpY0uSeicPglz2pi+n
CNH05SA78hsPOFVz++SpQnz702Trg+88+OkRUX1aTYgFKVLxPqM8QNPuBema
QsSGqsfHp/OhoKLFmE4TYuPrMZNOHT4EHvNyfEs863Z2H02PD390CqPj6ELs
LfdRjGTyQb1ofs8TPSEutW5rEDPngxN/q7MNQ4hlO+QL5q7gw1P5aJUOYyGG
lxXJqoTx4VvwLv0QEyG6KQ372USQ+9/csXaY+LyuIyV8Gx/sFN/P+WNKft+3
5cP9XXxIXf7o6QBbiL96YjhuR/igVLcIA82E2Hm3s2nnMT7E626p/0j8b0Fc
/fmTfLj0t8zmsbkQO3bbDHVl8aHX/HxcgqUQWft2lQYX8qHs6HSnPuIpTddd
DhTz4ei5TK4LR4iX65fY5ZbxQa7rU7AKV4iyT3scu5APfo+dJM+AEN9I7Nrt
Ws8Hvs32glHiFZKOneFNfBhzldtizxOibs7Bsynv+OB4i2c7TryrznF65Wc+
OBwN1bcQCJFz4NqlBcN8aD/9NWcfsVqYS+rSUT7UKZhw6onttE485o7xoStm
ZrGXUIinPfuVAqYIwOtA2Ils4vaOuYbRkgJo8V+X2kHM9Ow+tn+mACSf4Gs/
KyF+kC1fmisvgBuUWUpZxIp3HvrcWSAg9SMn5h3xMc2zLY+UBFCkkb9PZE3m
T64uo50qgPeZPi/n2AhR5KyoPseQ3P/ap48WxPMWrvNXMBUAW8tpRiCxF5Z/
VjUXQFzWpytlxJ+5ZUf0BQJ459ij9IG46En4PWMbAcR03rsqLhLitfOemubL
BaCgdnWWgDj1yshZgbMAcnSut/sQb5lWet16tQDynnq83klcL9fYL1ojgOer
C1rSid08Vwcs8xaA6cns8RvE664sl1u+TgCFD/SMHxKbtVf0L9sggP0H7fa9
I15peOuvbbAArsz/O9RLHNRvYSnaJIDYX8ZbJ4gnT/nnWW0RQPzlZtPZtkLc
tnp3S0aUALa8xEpFYteH0+V6dwjA7GrPVA1i32S0s4gXgJGYs7QeccCByLSD
iQIA+1/NRsRHJ/ta3icLoCK3KYBN/MDzh6buIQHsfNpXYk7c7+u4NeqoANqm
Wzz5z/7z62senBDAnbUPzv53vdlDi3lzMgUQELjHyJg4bbq3n/s5AVSujz30
3/MmyqfcyM4WgJzxrWv/vc8zyR8jPVfIfKzWSlIi3rBmnMW8LoDE/lYNaeKc
iK9bowsE8ODe231/yffqO+y5fveWADh05bz/5qOMd7pZvEwA5VCQ9pY4/OP4
uLBSAFsvpJtXETvOjpi3DwVAOdV85Rpx1OhT1cc1AuiT39l4iHjzwsYlUk8E
EH46uSac+IzRGlmbFwK45yMZ5fjf9d56Q4n1AlDdvV1tNvFE9vCuv+/I/b0T
Fnf9Fz9eu3VYHwQgs1ut5S5xSujJ+5vbBTCyx/N0ALEPNSPnc48ALv2Yfd6U
2OoddXzhAInfB0kbJIkp07carvwhANvDMtyzJH4P291yLh4XQDbVzH49ccYw
j901KQAl2yDqUmIDtTaxhRJCuBGiJF9I4v/3zd2MrbOFMEP6rt4m4jgVg4xs
WSH83psjQyPuNTJurZsnhEDjPIUskl/Ff1N/qS0WQqlCD38V8ZcVR56voAjB
SK/KYAYxJ94wJlJDCDeNj64OIvlrtRY9kC4EuVbTRjm+EAcf82SXcYSgK1O+
uITUA8+66v0b+UJguactdSN+8fbk633WQviWVXD8BKknx11Pv0A7IWh3Xcsa
IfVIaf81kbq3EFq3T7u1jNSzZe//ORTGCcGjTqyjgdS73OjmWVF7hDAh/kZ9
DbHEt5B8i31CUPiS+GYdqZeuj+ZeqDkshARd+79rST1Ns91n8OisECys/0SO
MMn7DrpT0yuEINa+o8ibeLbivpZl94Vg09Qj/pjU77S/NUH/qoVQ+ZP6Ns2A
jLNfz/F7KoQpw7recqTeqyxtc1r0TggGMWelirSFmOw0MewyKgSJd2ui/moJ
cbhx9P7oHyH0LUkbsybu2XPe9eRfITQ+UeQ2agixWbilrVHCCiSzTj58S/an
L4uELN5cKzgY1D2UoEz2k5v/PD/oW4GMmyM9WEaIJkV21uqBVmAnTzVaL03q
mzLIdgdbwc5vbPG1s4X489jHFbmbrOBN86YBq5mkfvU3KupGWcHx8TD1v2R/
tmYFdixIsoIIucsm4n8FuN5AY8Wli1bQ0zJS+3ZcgLtLF6DdVStoTDhNzRsT
4M+R0yd+5VpBqjbX0u63AOuWLPUVFlnBv6C4GdE/BFgy94/nU7SCx4eLV/h9
E+Cbg4/+JrVZwfRnmpXzuwWorXVQeuFnK/hhem6ilvQXFzbzwi53WIHmM5Vh
aocA25UCVO72WsFrecVyJP3JsOqsxc1/rMDFIm3+8QYByq8cL6yYbw0Lb6xq
PlMhwPBJB1PmCmso5jvvly8X4K4fm5ti7K2hu9OZlkT6I7/87bernKzhavuC
ZRtuC3Ddg0zTZe7WkOjzclC2gPRbbc90rQOsIe2q0G5KtgBXRDya+i3OGvbf
K433SRJgYt4Mx8ab1hA8j+Z0IlGAkqXxEV+KreHRxh3qjxNIv+hYfmew1Bqy
D1x/oRUnIOdZ+ZJp96wBB7fAS9I/eqSineJTa7gWnqR0P1CA6doLrLo+WwM7
KtZF05bM9w3BfjlZG3DXXLiFayPALdbLeLfkbSBvS/0XVysBVn5ZaO083wak
lePvxvME2HwhzvCwkg18KHzohWzSP/q3HhhQt4GQIWH1gI4A+1TErnqzbWBD
cmGI/AwBFlXHcYZ8bCBaO79iVFKAIRLKa9esswHlDfYh7yQE+DZA8vaD9TZg
9unIz1NiArK/R8gcCbIBt23+BdNJvx74YNdq2UgbKPx5n5/exceZH7ZUVybZ
QNZE+sk91XzUoy+deyfXBtry+vWnIh8vV3BjFfJt4N7XJSPxd/n4tPhqxdYC
G9JQdktFlfGxWutBkU4xGZ/QDFp5g5xHQvdERd21gafZx29fPMXHB3zpxzkv
beBKzY8z42F8THytJ71+2Ab4YQXm/BA+aiyow9ifNmCtM3vJvo18ZMfsMDo+
agN6tg9KZvnz8bF9tnv5mA30N09wxdz5+KmyIKV3ighE+H7jST4fxzb4Sn6W
F0GfVHLJnnnk/LP2Scw8hgg+VSVE18rxsZE67PSQKQKlVUl10+eQ75V5rRFp
JILCGm920gw+Su2QLn9mKoLA+K2LI/7xsKXyW6ofRwRyVSp3JLt5aPj7xFm9
5SKwbvwqbdjJwxBX58F7K0RgIFkl7tXOw5pCD9OVdiLYdGnzk4JW8vvbd8+v
cxSBZ2dcH7+eh4nd9DdRq0WQ9262qnY5D2W7taMt14kgbe71ck4pDzf1b27P
8xdBkljZpHMxD8NcFc2VAkTgJBQ/GHODh8hVKukPFMEf2dNVpdk8TG6hPNkV
JgK7jmXCHyk8DCxuX2C+ncyHcWzDFg8e+nfIzqAeEkFPnXtO+GoeDga33BId
FsHajHsrQ1x4uPTMw9WhR0QweHBSwoecZ9OovfsLj4pg28EkHpucdwf+/jyi
ki6Czw9fHb+lQ56393p3xjkRfHjyOeesJg8pd8Qks7JEEF+x4FSSGg/7Vrkp
XDwvgnbxNqlVi3loNbRw0eVsEWjv28XvkOXhpx+GaalXRLBw4dya578Ae22c
5k67IYKmOeqNl34CtsW0+/cQP001e7pjCHAn/fXVFwUi2NmyPVizF7A95LfY
4ZsiCPq+5mTYB8CL5uljI8UikBf34DyrAVSd4vfBr0IELbpxM9KqACNTrtG1
KkUgtbuudvU90va3agd/I668/1fpUylgWJZK4YZ7Iqh9o8vtyAXMPTzoubxK
BB0OQ2oVqYDb/NcoF9SS+czRqNI5BFg9WjXV5xF5nzN2+if3k/s/sYiWeSyC
mke7EsISAEV786b7PxEB51Wo6pxIwLr5ooqhZyKosvXwjQwHpJ5bInnkOVn/
F8IdzSFkvPtkq84LEZi/U+GcXQ+4Sf7eUrc6EbTpWykrrgb86Wxnd/KVCHS/
xfK2OgPOvHt8SLVeBF+qXtu8sgeM9jdaco24vK1zPEEEWHi/W6HgtQjO7HVV
ec8GTIukJ2Q1iuDac/mNeibk/Z9B5PwmEv+ei8/GMwEF/UcHkom7OBYPKUsB
NUdCdge+EUH0phTmamVyf7trMjObRSDJON9xQQHQIdzGJoRYrdM2uXceoOUc
Y6nnxGsv7b62Qxrwm/lRauI7EfhdV9eqngF4hft8Rysx88ze09MlgdTbfk9m
C4nfes8Glb9c7LBJKXlD7Kq76MDFES5KRjbpabwXwe8TRSaa/Vw8IpGnt5l4
odmrzRofuRj/7UqNeCvJp7SsollVXJyddd1mWpsIzDzGBfF3uOj2Q32MS+wp
L9kyfJOLaW/SDKOJt3ScVX6dzcWd02TMPxMPa214wTnNxQU9f6XkP4jgZP7q
AznHuJh05OpaIL7yhma6PZGLlX0/M08QPxJz0vmwk4tFj+L3VBJ7bF/C4G0l
75+TPvyJeEFriUN2KBfNfGjdUz6KwH2lWYp4ABdHA1n+VOLr259/9PLiYvGP
mwFc4onjqc7lrlzc9Dl1wJ1Y1yP361x7Lu6pefFvM7HLTM65YBsu5n/yPb6P
+J/DnF9C4OKkX8DOU8T3Jp7eUmZz8VJGjUUO8ac0/TfDDC725UY3lRAXT4x7
P9LlYoZtnHU1sfK+AadMNS625TYdeUa8uP1JYbAyF70ObL/5mjhKdfkO8/lc
ZOptvP6WmF1qWDxDhovdnhdjW4iFscK1byTJ/G3Q0n5PLHadE31hkoNe6iO5
74hr3n2RDP7NwejB2ZJviHdPHZ1pOMRB1YJN7FfEngmmSX++cVD9qYrV4/++
VzY45l47B2sYyjr3iGfWOn/b/Z6DBZ5BnTeJpynfbhQ0clBaNDvmInFKtxNH
4gUHN0dN+5pGPM9nSOvBQw5++ulOiyfOm7fqWPw9DtY7yCwLJo4Z4SdYlHJQ
M1uLnAVFEGkXPzpawEGDpOsy5sS1j14PFVzjYI7q+dtLiKX3vUxcnMnBnquj
B9vJeg52Saq+TuOgyc4Nd5HYIDPUdu8BDo42BdSeIR6S/bry607yPQVGfnbE
Xvf309K3cpBmu2BEjVg1fcd5QRgH357N8/lF4q3EN9w+05s8P0Kt+iTxIQnJ
wwI3Dgq5i8r8iT/pym7sdeBgle9okj6xstL1cRM+ud/0AwX3SLybWNeXtJhx
cHCGz4w9xKKK9Pmxhhys9rW3sCI+N0B/eFedgypNd+gPSL5Y3zmp6LmYgwnZ
Ln27iGs/vlL4M5+Dl7VtE1nEt753qOhP5+D8fYlwmeRfxu05Ow98s0TDv1Z9
/iRfpR6Gui9pt8SMVXlRc/5z48zBmy2WaOEq0Vb6Xz24y3VoeGaJt80/Gk8h
PnzAdc70G5b4fXUpNZbUD+pa4RKjCEtEZ69/sxpIPdEKnZQPssQns+1npJD6
1FL7e/egryWOlt46Mo34dVJK1FVHS/Tz3jxnhNQ7o9u966cxLNE3R+7jbVIP
pS3j1uwZsMAPLz99uUfqK5abxaz8aoHZz0LuzCNuLHjus+CjBRrqUqUDST3m
H2s7fKnOAunpL/Wnk3q9NDmnsCjfAkHy2QatGhHkWpcsygi2wKTVK+sH7oqA
vrb3tf06Czxjq5+9mDhv6EGU5BoLLH9/9aeI7Bczp384Fr7MAnexHZdklJN+
4au5G0vHAo2Ea9IUSkVkDms0M7rMsfKUq3Y22a8+JT9Iy/Exx9TkQ+ItZL+8
bXFs2ms3c/SQMH387KwItJbdfvbHwRzty2YFVZwh+0VyrbsNzxzfetvA8Uyy
/gHixS0UczxVfYpDI/vvrc07FTrazVB31gSOHBRB+AG3gCP+Zvj1DaN3MJrs
r7WS8lc8zXB95NrL56JEYFE/aV/pYobvayyEy7aR+tl+J+Wr0Ay9pwQzTm8R
QcD2a0y2hhm2jAy/ViP9g8GKE9OfdbJR0q8+7pWfCPr3O10sCWCjtxJrWuYy
EaR3jDn3erFRX5I2NttWBP7lC5qXrGbjw/uDP2JtROBYpO6XbMPGZnrIL3eh
CLJ//ru5WpuN5/dVi8YsRZBlOvRl8BsLnS6bBrcakP27eV6eUigLWa9dY3Tm
i+DqzPzgletZGN++6PnauSL47pttFr+WhYPex/VT5Ug/MUCR6VrJQmebNfQB
aVIfMz/fL9JjobjRTtl0SVJv+kqHHAdN8dy6jc37ftnAmHLG1eItprhxYuLC
v7c2kBC+XigMNkXR6M33T5ps4NGBdnajnynuOmryOa3BBlTHtrBGHE3RAvWd
VEh/enXe5VpzA1MscT7YplRrAxKHQy3a+kwwsFSkc/2WDWQ3rDBICDBBhznt
+vRDNuDr5fa4eY0xnlROqGsj/XnoH/00FRdjLGk8Pc/BlPTfpb209SuMMeIs
Nx2NbKBmTk7rTwtj/P041+6Mvg2c/OnroaJijJE5Ly5zNGzgyG/HqNOfjDBN
7cJOfXJ+qDh2e9PyACM8kPFqbW2HNYj8Jxx7Iw1xFvPQu/5ka+hxu2fXGGKI
AeHKEbf3WkN5dNqLe/6GmCd3UTcmwRrcZR97ZLgYYuyA0+TfHdZg9rzg51oj
Q7wUnuA4EGYN08MY+sY/mWiSLx263cUaatUP9qltZWLx1ZkWTBVruL9q0ilh
JwNpTedrQvOsYC7t2SHxrQxkuvA0mq5ZwcOHk48TQhl45kvBT7PL5DxYPi46
4MXARXfGvoifs4K00JScYmCgg3G0auwRK1Ax2XM3aBoDk7un/tSJsAJ7OVF6
RKoBet/WMfQ3sQL+8TdBNR762LBoZfOJciEkbrycvIZPI/WCriBTKwCLixIz
M41paGp95XltlQAu/Xx+8IM2DfWVNm7edZeM6yle3j6HhvdUClJ7igXA+Va1
93frUqxiRItKLgrAyPm2rvL2pejFayhQ3i2AT69Gq+aW6OKmQN+peuYCcLWs
NkgU6GDvHvG6a3l8aL8VWbOIrYMLjt4f33KND319fxzv6OngpeWJCZxLfLjk
/8xfUkkH5Wc4ZNWf5kMqx+tm96A2ZnlYGg6m8MFn9p8lr7K0UeusW8GcjXyQ
dLevN5+ijUERuPqjOh/4d2YFSrdoYtPNoDcTmTwoKghlrKvXRNOs2yGV6TwY
/T65/P5jTSz8/PbijjQelIwO70wp1cSZJTd//97Pg/b9YdNDT2jiplxd94Fo
HrjeOJ3o76SJjNTfzc9ceaDXlfxPt14DV1xxHF0mzwP5FNmXdk800MMt+ryY
DA+CeM/1t1dp4NnJBbNLZvCgNt8t5/NNDcx42bhUVZwHEv3lheLHNJA6c0ru
0ACA23aN63GuGiju8Twp5QVA/4nVL+Pa1XF9S/dQZjJApf7tvE8t6vhifGSs
bw8ZH2lIsm1QR60wg8+cOACH3+/YhjXq6LJx07L2rQB1CbQ3AVfUUT+/q1hr
HYBCTO4dhxB1nHy9RvaGJYCEaQvf8p8a/o5V1ffv5IKDwdQbF36p4T3bs5cl
WrkQnV+1SmZIDet35+lefs2FRJqPn1iHGmbOnxncdZ8LZ4SiizZP1ZCaGyUT
lMmF2rEVq/wz1NBo0016tD0XupbVHmg3U0Mvl9um1Xc4YLZtz1ChsRoecyhM
n3GTAy4BBUVJBmpY9DhmueM1Mu7ovUKkqYZxPdPuf07nQFrabDF1eTWMcb4y
Y3okBw5SlGI4vVTMG14xc70eB/5tqO6cfpGKLjEnzsZetASacotUzTkqWgf5
vGnItISx+cvy9mVSMTh/Wo5umiV0Na2K1kij4iNZN/WWeEvQO5TLq9hNRS0Z
vxvgZQmRdwqiHPyoqJhb/I2uaAm/t8dO1dahYtr521Unj1jAwXG/4i0aVNx5
VKQmmWQBw3t5Xx5TqPg0ZDBj604LUFrpff+IEhWFu7Wer95oAWGXi44cmU3F
/fmVF3UEFtDV0LrDbZiCHaZ52dN+mYNdoNJBiwEKcuUys5O+m0PJjze6un0U
nNK8oFOqwxwi85MXUrsoSGuws5SrN4fKiysfJbZQcIxy7gDjujk4yFbzFzyk
4LHMExq3vM0hXb3z0rFqCibKFV6zdTWHhGNqF5WQghr0zWc+rzCHT7wf26wq
KCgV7fV5vpk5LJvBTZUpoqBFqAwjdZ45DJ8q+tpcQEF1rZT9zFnm4FY3+ikv
nzxvyZGNb8TNYULqeMXmHApq+Z99Rh0wg6RTQ9RNFyj4tf7ghronZrDsal1m
UhYF9T0XrohFM+iq3nrn6lkKdvUM1NFLzaB8IuC7ZCYFyy06yo9dMgOjLHku
+xgFg2voO7bEmUFl09GJs0cpuGI47oL+NjPQFSqsn51KwSXuD3d+DzEDs0AK
W/IQBVXyI9aGeZiBw5zUy0cPUFC6LDaQ4WgGfa/a7mmmUPCBcbXhqI0ZtFtv
3/swmYIevrLVlRwz+Lfw//7fZPv//7/J/wAF1mNi
     "]], LineBox[CompressedData["
1:eJxd22k8lN/bAHCyVBKSfR0z9n2dGTOYi5mxky1JQpIU0YLse6hkK0sRkkpZ
Qpsi7hDKkmwJSZskWcqWpP/5PS+fVz7fz33OPedc93Wd5QUZr0CHQ5tYWFji
2FhY/vs7cMzXixRKgaOam+puagOkDHvFlwVRoDL0TOARdYCbLCqHBU9QILJb
GNSUAQwPFsd/PEKBqOYUzToZgPt/6kUt91Hg4ysfv1E+gATx1YxdhhQo+8S9
v3qcBqx5UuKUDX1wGy3k8XalQe456Ty5NX3QPKb2QMeBBpsmG1e4l/Xhq+DT
Hg5LGpiXDnm9+qEP+CODXjX6NLjTl8VOeKcPG+WxpvKiNJC41O7KWa8PL/eH
PUwZNoKW+8futJ7SB2N301nDvUbwnXz6XGeAPlSe1Qp9aGcE73ztG7qP6IPn
vSpVbXMjmBDWEG/10AdSgYS0DskIDqa9+xFqpQ8HV5uP7RM0gl20fjV2vD7o
fRN6ZdZnCGnn+i+Wd5Kh6v2VPcW2hlA41nxeuo0MkZ/5R+JNDWEu9xlHOkYG
Q0njfl8jQxA5ZJ3k+YAMYmLsOjR1QygfCJ3sLiRD8paOKUEeQ/i9yzet/zgZ
ksLFNI71GEDC0RGRnB1kYPT8+tdnbwBeV2q3f9lGhslTwlV3LA1AgO2wqSYn
GVZ9pYrP0A1gLE3obP0aCe7+WHJm6hmAN8v1iBufSDBoHWE8I2IAXELb93bc
JwErsfzS2wkqODXxmzg5kaDvDsnd6BQVuov4ktRtSWD/KWgmzp8KydwUQw5z
EphIrS91HKLC3HO9bWVUElw4XBB3wIUK003b7VvwJHjJM367wZAKRvitH+zn
iTAW41gjsZUKsZ5c8iMpRPB2/saeXkIBPr+WGZ94IrwsWXngXUCBAO2e8PkI
IuBFshYMcygQtLDt1+8AItgE2fH8OUsBJdG6mEknIuSwcm4uRnnGkTbgq4Aj
QvKsJDXHmAKcNX2XHe/rwUbTTJXhZ31wyujZG1mpB/v3KkQmj+tDUKusQMlN
PcglHWcdHNYH956T0Z/z9OCyZol+RLc+JNKxPcwoPaBsPp+0+FAf1I1eZ4Qy
9eBMytWm/HP6EMx95H11vy5cry+Zeq6rD0XfI8rfd+pCm86tYWENfcB43yhu
a9WF6JUA1wAlfaiPMQCX+7pwaN8dUSUpfRg6OCDdeUkXqNuI9wY3o7xywLIF
d+sCW/q5Gu4xMhiEWyra9OuA0NaWC+vJZPjHHRQi1KkDy9s2P/gUT4aUCIfG
sWYdOP+pqPBVFBl83EMYnrU6IBh4tvHBKTLwvE30o2fqwDWdTXvrPchQMtOn
GWmrA0YbNtqVZDIksMrKdrRpw+IFzr+6syRgL2XvaG/UhtdCN6rZpklQ2+u7
7flDbYiaXa4a+kKCshP5of8VuuXX7vSz70hgPvuVkJCkDScPNm3gu0mQMTkf
dpupDc6vvp2QqySBT9l7afNmLRif1j8deJwEzdeM0/891oIfOWFHXviT4MoG
cfx+jRbgOjSeKxwhAUVzE0H0mhYckcpoWDhAgo0r9LiOGC34mD7U8sSRBFn8
R/e1GmjBKZG8ZRkyCc7WG68aPdCE6LigVkt2lHfzUXv/lWuCKh9v3AILCUpI
+meflmhCqo7Z+at/iZAaNOauk6EJUxOHUjlWiLDO81yNw08TrpSO7xOcJsKg
Y/E9Ok4Tig83b+i+JgKP8E2jj0KaMJjHz6HVQ4RJFc2W6O2aENJTeli7kwhd
+F3JB5c04OKxTUzmcyLkUmlj/25rAEf/idDyx0QYOfstO5pfA7weJ0aEXyeC
y1eBI1H/1OHfa8M7XcVEcEyNTgqdUYepGHsT2UIijOawPDzYpg45xnk1n/KI
YOh0M44nXB3+uj++dj0Nve+OYOGTCTVwmhnyU0R1sfvOp9ux3WrwZffrlNeh
RCBnkVzoT9SginZXLDaECKLcN2sbL6qBwBus6McJIlyaZq5dMFWDlMpMY64j
RFBL/Xr/YrkqVONOnLB0IcIAyx2juDxVWNb/FOjkTARutU0TfmdUQSPd8clB
VGdSOVXRZA9VuLy4Wy/Ljgg1tRh2lx+131Xcp25BhO9uxSziYSpQfdtX/DCV
CJb3GPFjh1RAz5ku3KZPhHmb1uP5DipQLrH9sDKZCIlPsds7VFVA/SiRnU2P
CLTl5zIT48qQLbfFeFEd1bXd37GtDGW4GcYl84aA6vq8a3WppjIkfTROO48n
AjaebmooqQyH2MZ3M2WIcOalyOvDy0rwsKtyqUOKCEID75dKypQg5J5+HJ8Y
EV4k651WzVYCjiiNzjkRIuSzFk3ei1OCPlbiyQFhND4r5xsNrkrQ9L1quFIQ
xWdWgPKQWwmEQzN4r+0gguaplhaN34rQ2exsWc5HBC76pM+tL4owsCf88xNe
IhBs6byZjYrQY/6JNL2dCAvdmbG2xxXhw3c1r7Nc6PveEgx47KYIiddHChu3
EsFCNqMYb6EI53JfG/zeQoT9F3Wm52QUwYceejV6MxGaw4fLQvoVoM7EauUF
OxE6/pnryD9TAF/BkAFd5JXiDwcGqhTQvrn3QCkbileM6VPVcwqgdKzvXOYm
IlRoLPwcOq0AyeRyBV7k3+Ox4zGHFGCU+Cwok5UIGTm837pBAertJXGlLEQI
zZjjO6WuAG9GCqJ1kfOOhrAISyjAUmDXhRf/9KD4m6H5vhV5eC9e0siK3DB2
4Pafz/Igfj50onRDD+wtf3260icPyo887lkjj5grrgxWyoNK+H3/O3/1QMur
ZvhEvjzcdbJw9EQuYj91g/ssan/K8LsY8vTViQM3Q+Shsfia7si6HtS9O8ZP
85aHwTNnNAqRY+6n1Q/Zy4Ns2cqoD3Kkw6MDx2jycPsoB0UX+YK821Y2NXm4
sb3eghNZ8d3Cw1wxecipImx790cP9D1+BKhskQeiuUV0HbLK6xa9xiU5iKnV
vZ6HXJ05zWv3SQ6KS36ERSF3kd+wfuiVg393wjcdRq7J+cd7olEO9KkfDHYj
l9W+NWKpkAPJYjklc2TWl6NZaZfloJLNqp2GvG1XJJ9EshzIHHMUNkCe/KrV
UBYkB+8xmqghctKxU1d0veQgAuPtNkHOnH50t2mXHDRzNWvbINteCWGxNJSD
u+JOlm7I6V/lM/uV5SDAunnnceQbfuDjJiIHnv2b01OQ4Qcl8TOHHIi3SjXc
QD7kkTbn90sWjvKy5LcjW07UVvyckAWHhOsqs8j0OhwW2iML3J3/jomiePW5
2Klv1MvCzkAuLwtk231P/sTflgWxwUebo5GFY9+obs6VBUn44/4I2aIS13Yu
URacetsOLyFzHBenZ3jIQpPO4wsx6HuqnWnS4LeRhfeXG+90Ig8UBeVcpMiC
iNXWMAmUH6N2q58uCcqCPUlaqQuZ/+iTfgE2Wfg718SlgvLLLTVo16V5AijO
2V1NQ9ZWf7ye2UmADtrHgYMoPyk7yCS+xwRwWKsKG0Te0ZzLm3aTACnd7K+s
UH53eX4qT4kjQLHA8DlTlP/RAoJ84SQC3F6/Rw9C9fM5haP3EIEAw1KBniIc
REg/o2xmz0sA7sPZ/54hD8rNnFD4igeHXs9WOVSPdiTzva9z8MAraOGlgeo5
IWnoZH08HiIDG1P/IWfw7jpxIwAPmqwLpMFtRGCNGtEJM8XDqR2XeTPRevAk
Zn8gblkGBLRnGizRenJfCOy4PspA+FmbSVN+IjCSWumL3TJwYmVvmvlOIgQU
pIV13JCBh7ts9rqh9YiUoICd3C0DnuvEvueiRBjiMnrcfx+H8qZxczFaH0su
fTzxrBgH79K4ln/JEuHoWkbe3VQc7OKr2W8jT4Q2uY+mF7xxILY1MZdPiQgN
G2rttgI4GDTA3RlG663TC4fb41+lQKmJ60cAWr/HKtL1upukgDqVShMzRPvl
vRNOT3OlQITnPHunEZrvpobTJWZSkMzY/tnABK3nLIEX425JQoi93fcDaD8Y
NnspePWwBBzWXbpZjfYXg8HXV+xNJMBv9c2FDFc0/9V+iS2SEnB0vUk12I0I
Ek3NBhF94rDp19MMa08iKI5vmQs3FIcpX7bPOr6ofZ+P1tROMZCVCjD/jPa7
2HKPEWxWFEycWoJ40X4oMbixs+CFKHBJ8trTotD6ZcHp7hojCm9X9gtXxqHx
eszbrkyLgGmrZyd2jggFjrfvPmkWBnMXf/uOq2i/u/WkFrsqDDfZ0/WN0P6c
Qo54+yJUGI4KHO+oKyGC7MXah1/UhWF8dPlN/S0i6G74VjPyhaB8Ka/idw3K
j86H124FCYJWWmiBYzsR+AgNjsbKOyF05dlYxBIRtnwPcgnm3Ak18GkjeJUI
vllXwyo/8sO7+b2JQX9QvNxddJTz+aFs1O9hNCsJQq0WTjpz84PSoy8l7dtJ
oDhkfDFujg+EOb6sKCuQQPNbhEX9ye3gwa6tpb0fnb82H7OzUt0Onr8XzR55
kgCX9aLyyxduWEnQuw3eJLDjGKvS38sNma6vzDz9SODrFVnkCdtAaDL1XV8Y
an+FdbSObytQu3huJ+aSYLhXQ2fzE3Z48mgpTGCIBFNL9EXZQHag3Z+PCBsh
QccuLyd7WXYwfvzT99M4CXq3VjOH0thAIE/o3/OvJKhWNidd9N4EORWjq89/
o/7CzoXf+Vmg69BLjmopMsTKBFTsWlmmmZWL7SX4kyGD9OBawqFlWoeBA5Vw
AvnTFbaR/iXaTx6bcYUQMmiu3amerV6kZZd886TFksHTMF+uwf8nzdyURevW
JWQtbz6hoe+0elOXJy6NZMBSJUWteQZoR3isxPQF9YGlKMnB/t9r2i+jF+EB
YvoQm5Aw2PThFU3ZxmbwljR6vvDoFLG8nSYeb3VKXhm5bLy/WbWS5nZWScOR
hpzQLdxOe9H06Mj5hCNHUf8n3M6F7pNN2hnXdse26APOHjvPtf9r08tGLz/t
F6j9xGVl5X1TTcXZ4XZTPege6XahPN55ukldTDTBYwRZTX8p02K2aTD/hVfE
ArovbN0xHsb3q6mxsKbnMI4Cx7fdd019sdbUunuf0dY4CgD/Bf0Nmz9N0nMr
Ox4lU8DTYuiqUd+fptRTU4pH0ihg173irjyy3jRyVEB0JB/5kXXx7a8bTTe2
RXfNPkT2vyp2MZIVa6rqfvnhB7pnp3tUng3nwGL5cDDhToVV/LGGpMcc2Ma7
3kp+HypU71B86rvKgeX95JC2OEaF41PRVqPBnJgd/T5bcwQVyCOOpaGBm7HF
hM/5n/JQ/9HkG4n7t2J8mrNan/upoOkrGecjux3bstmPu8vaAMheROYL9+0Y
58vLfc5OBtCrdHOY9/J2rL1BWe/LPgOYiBJVM9/Og7WqC7Vz+xlA2a6FlwcX
ebDFRLtPSWcNQCK3PKjAnQ/rZ2GRlWs3AN0UAZ8QCX6sf/VaxxrDEAyGLI4N
kvixm0MpfxatDcEcx+El58iPuX/nSfrpZAjkwpGl3LP82Lte3OUVb0PodUpa
bFvix9SrIUzpjCGA60g7s3MnVjaWr6bcZgjVHLPBF48KYg1emy6nWxoB+TZb
kVW8IPbRhLXFw8EIFpVjPixdFsT0v1rnaLsagUD7l3zcC0HMq9ZEa+KIEaRo
vTfrkRfCbsr2sO07awQzB1gvnnkvhC1yxp3s7jCCSy8q3QxNRTBR0WqePAsa
sNelzKi5iWB/7GqrH9vTwPy73iTvSRGswPpS47u9NFh0XGctuyqCzd6REVI7
SoP50lpzxUUR7KGbb9TUORrAN6Vz3oWimIHcysneLhoYaJ51LPsqhpVJ5yar
KAGkBCq7BPwVw8jYVe8GNYAOzYRg/E5xLFi/NMVWG8Cf/OqDk5E4ZjecUBxC
BcD1iA59uCiOnb1O+z5oAzDVHDaVQ5XAIhd4Xrw6CeC098AVRpQkFjQpdvrW
U4Dj/ZPazRmS2NRse7l7MwA7JUNJrVQSi3Q59FeoHSDDZa9450tJzNdU9Oe5
XoCgQmKovLAUxjH8/U/MJ4CKEn5v5woprH+bv/fVrcag2LonMaRDGvvcep+/
wNkYnEIKiCeHpbFGwapimX3GYOCXLLl/Shrr6KGwlnkYQ9VyrwELOw7bvpar
98jXGGplN8cYEXDYvigR6/fhxmBOsJiT9cRh0f2meruLjIHbSjYltR+H8Yf9
FeqdMgbf6x84w0dwmMCJ3S+P/TCG4ky9L+4fcFhWs4Yq909jMPk59JhnDoel
7nq3bPkHvc9j7iInlwzmOaSR0rvdBPwNly7vNpLBrnh2XFnTNoHjmz++PlQs
g7EUWYU2R5lAgalIYd1NGaxt4pnGcLwJTH8h87BWymD4zncps8kmkLW61Hfy
sQwmcwYvJpllAp4xmg1vX6P3/cxLj7tpAg2uvEn3WPDYeM7JCJ9XJjD5yOSp
Byceu7hFteDMAHoeWh3Jyo3HtjROmt54awJdE3UX5ITxWIjECd3JTyYQZJ3b
OaeKxxR1LUwDVtH7nzruPe+Mx/JOb17NlqEDz3GdPen78BiX+FnOp/J0SJG7
0Zriid5XQUv+rEIHU6OYqX1H8ZjRPce3ukQ6xIpEqyZE4bHEnRY5I5Z0CMrU
OzVwDY9dm86U1Q+iw5SBTKv6TTwWaSp43SeMDp/NOQKj7+CxEpWJiEvRdGis
r+/+W4vHvrvZEBdS6OBy4F5qZAse2+51prTqKh1uBkdsDfuIx9iGJIXI7XQU
bytn4Uk8psepaOXQRQfPuXyb8m94zJFdEPN/TQf1ay2k+/N4rIv55WDJKB1a
defGLTbwmI9spB/fPB3sNhmXJQgTsIRefeqyCAPGY4tVIsUIWLFzYMtOKQb4
Wn60PCpJwIp21AVpERjAEvpyrwKBgKX5dVsfU2PAesu/Ell1AnaWtr180pgB
a8GiVBUTAnZFfO79+FEGCGyM4qIYBGzPxorNRiADqi935LSaEjDmZv0eyWAG
1HXkaupaETCsr/yfWwwDzF1XuHIcCZi3vc3G6EUGyJ9473lpNwEzv8A39CeP
AVMjqiYpewjYqmjBffFCBgRUdpXa7SNgjzidYveVMWDyW87oQS8C5ixspDza
wADdjm3RPN4EDPopfH+eMcD9++itqkMELCgzfUGsnQGXQrD0V74ErG0ppdj1
NZqf75K13VECtiPT3i98iAEuNW3pbX4ErEf0icqVUdQ/qaj0YgABY/9Tm/z2
CwN6N8aDpwMJWL/HYdzvaTS+MuVO4gkCltrJdltkngGUvBCW6lMEjO2fQeKe
NQbwTwelyoYSMJGFcsoADxNSbOKPCIURsOTsWb38nUwwlTst+w8Zf9te1EuE
CW37SDoPIgjY9O7Bi3MyTJDfl5cUH0nALomVKj6UZ4IiH/cj0ygCtnZjrjhS
hQmX6IFV96JR/9q9pK16TCDjOYPdYghYR7a84yt91P70hvA6ciRnt022ERPu
R2vlZsUSMBMLWfl9dCb4V4b/lI4jYAHlbKM4cyZs3H2kVIr8M97Eb9KaCd5+
HQbS8QTspnrdYLk9E4bW01QykVOFDERPODOh6/Hc0m9kXMUNXeI+Johovs7f
m0DA8o52yf/xYMK0nIRkNbLam+TZJm/0+5frw/4iH427ey7xCBN8mwtqjBMJ
mC+b+Jp5AIoH793WSGT5TSXU7aeYwKL4ubYKuUlNwvb1aSY0zmhEvvnPxgc0
syOZwBmSglv5rz+HxQeXOCZ8Fpgs2n4G5YtVuYdEEoqnA31NDHlm0ePO+3NM
KFko0JBGdpoxwkrS0Xy+L9D+ey6ggis+dImJFmS6Cjey8qNRc8XLTNBcvrSw
iN6/dt3i8fRVJhwVnMkaQM7iN5mvKGGCbpUdbznyotbVmYBbTFAe7PIJRfak
6VRqVjAh6I3/ZQPky0ljmj+rmVBIod1aQfNX8ToRcu8BE/IanDJuI9dRX0YG
PWFCgyPm5ICsn9pkotfEhA713MUFFF/bMaX2pRYU7/vzgSnIMa0ftjzsYALl
zGSbIHLKjybOkG4039OXfl9G36+Q72qTXh8TEgtEtggi31+x114aQu8flH88
h/JBO/0mnJpA8yGs7tuFPKC0+lbrC8onQfXRGyifwvefUZz/xgS3loBAEsq3
TcqPJvx+MUEgrC/xJMrHfUY85kqr6P3t1qdLUb4SP3F4Tq4zIefcrsUZlM+B
twyuenCawkadSQwbcsiYOia+zRSSfslM8aF6GOtWSH/DawoiPllOfCEELGLu
kqqtqClMCRa7bAomYFHDDatbpEzB6FkW9Tuqp39zDv4teFPg2k8uuobqrZlT
m0lSNYWqLeFfiv0JmJFq/lUxmin4SsgVqKL6nda+SSIzkM84X6k8QsD871e6
77ZAv/eQPTDdh4A9Txy1SXM0BUY4I6nPg4B1Go8mrx02hbx7zWe2uBMwEuGn
p8AxU2g4k9yr40bAPlTvq1c7aQr+qv8sjroQsMxkp1n3SDResa1jznYErIws
J1ufYQquNluZJFuUb7ki73uzTYF7vv8vtzXKx/GnvJNX0PyPMw7kmaH1rciu
i+eGKaimFrNqGBGwDUHWc3sfm4Ky8UMTNyUCNjR+uL/vgykokrV/Z8oTsONl
j6nvJ01hrOYF11O0Hu+DK5u+fzeFrB9nTX6h9fqvOPMmyzIab3+1+MQOApZ0
flVClssMtrzP0W9YwWNtL1WTLLXNIOXGsa3mi3hM03hd2ZpkBvefPjF5gfaL
rNhDwjYGZmCeWrf0334izbnrmbWpGYDXfNjPETyWkXFBi+5qBjMVpdOJ9XhM
4dhXxrZ4M3DtC/xX+QiPzaksplQkmUHf76Cp7nt4rPhinIjNedSfaxv1Zzke
szuTIJh6yQzIrMt/u/Lx2La1BR/WW2aQGtU43hmGxz7eifPp6DSDroWxu17B
eOwwqX94f68ZuBy6f2j+OB6zkt+V+HPADGrP/E2YP4zHZNVI8aLjZiDEH38n
YTceI7//9nv/vBlUa3JdX1bHY2c3ZY40CZiDw3KgxboSHvNe0dhjLmoOZa32
X1dl8djP2IG1V5LoucRZnjdieGzKrqJ2TN4cPo4aqyug8wTXS4Hn38nmoBzC
OyQ8KoNZ0wLC3ruZg6XQ2m5GtAwW0iZnL1hqDtpF3kaWoTJY1lXHXUfLzKHg
d12J2UkZbFqqwbWxwhyubP7wWdEH9T8gmn3wgTms3v1x+oyNDFYTLhxR0mYO
y5AvVyYmg23yDZNbmDIH7pTAgMIqHGYwx9X5UtUChktprTm3cJhEeuWpf5oW
UL32sT2pGId9fjGxRUfPAtRHfd7bZOGwmz6LizmGFnA0RCUmNBiHfZNsfGRv
awGxc76cxhQc1vdcfktWoAUwGsPi90RIY0eM6j4TayxgrLDj0egRaaws/MaR
ogcW4MJd/t7aRRrz9xU8w/kEtT+6KLasK40VdKaE9zZbgOakRaf3DynMhSZr
6DhgASw8nPGPXKWwcLGH23euoP4khSFnBUnskrOu8ymqJXi7irgk7JTEbtY3
WFfQLKHAkjP46j8JbL5upvYT3RLmKxg5V95IYCerE1/YWFvCVOABgcdJElhf
V/AGz35L6IquYEn9II5t+vkuhhFtCdyiMrW1Z8WwuYs1DaeaLIHdS4FFJFgM
G7mw44lOiyXUpV//ccxTDOu/n0752WYJHayM+u9EMeykLPXZ0R5LmLn++a7G
J1HM1eJep8U7S2i4OxX7jiyKZbxI3Nq0ZgmLzM25S8PCWK89+X2MrhXUieya
CW0WxvBfPWJ5yFag6Od07ke5MDaowZqST7UCuP/g4Z1oYUx9Q6+92sQK7BiB
/sEEYcwgHf+j3c4KcIc9de2PCmGcSbJCZf5WgKWf1LP8IYB1iXVMK123Au9d
bHMrfQIYV5hHYudNKzCXe0LKrhPAHN5slvS7YwUsuE3ZhQkC2LcRD7PSGivw
7Rh1+iEigCm7ix/caELPXSTK4mAnJssh2Ws3ZgWyXq4JDQk7sFRNlaOHd1qD
Z5iUrt/hHZjpppff24SsQbVK+jiX1Q7syQjVWlbMGqYKU++I8e/ACnUe3xjG
WUMk3xxPQhEfRuGQKVZQtwZFpdM3lwJ4sSuzE2P7za0BTrtpx9dtw3ptB6dk
I6xhIoZP2jBqG3bPdGVVI9oaxSvcfMx4GxYn+GucHGcNmjPuF9tfcmHqJ8WU
GMnWwKdwb9hxdCuWGfW4EC5aw3x20X37lc3YnBC2u/cOer8T64CLODv2ns/A
jDlsDcW2bUP1Y2xY4LM7kVtHkaMFdTkK2bAxSY2Aznfo97OX6VY4Nuz2+JF4
809ovjVd124SNmFB0wdcFWatASsReXBbjgWLwNNxp9nQBY5tzLBefbWpxCDm
815VG4i1JEfp3l9pkjs+cvG2ug0UX9f7k6i/0nSdI4G4omkDmFSuUgV9uelk
QIJjqh56LlqbLuS82LTzes/YVSPU/8HfwuBT802GH/Jr99vZAMvdAmcP/Icm
y8XWB9YnUf+vA4+yCRNNOaO3W/cGofaJ1Ux2i/GmYNmtD71DkP9aiK5bjjSB
u5FRUDjq/27+/Q7zvqbOuwNDYfHIM19NdlKuNbE++NYglYVcvVLyLn6c9vtu
pmjXXdSfH3tJ95igWT4RYKmvQb/H4ZToE/WBJtpr53LrHprvJY9fF598okXW
Pt8X+gi1vzw9fIY8RfMUSCr602gDnhtckrRr87TxuE/Xk7ptAOfLE56ovUBz
K9niY/0KtR8FxdmWBdpYbVwm72v0+/zs/Wpff9Li/wbi0wZQ+zcxo3s1lmh1
n32l/EeRb+MOQttvWsvObP7yKdQ/r9zr0d41mmLCOQ2zaWRHSTG7H2s0vinl
qonvyGTurZMC67QSk4KebXNovLo+u4oObdBSGurSTZZsoJc0b5eZxArFoZtr
tFhtwXP3n95r+pxQ2NqSslPYFjCt4HbTWE6g/+XczRSxhQwVVdxqGye81XvR
HSRqC8ebXWpjnDaD5tfCli5x9HxMLxB3fAtU7oqq88TZQu+O5B95t7ngAue+
FBElW4hNiur5M88FXcFFa7LKtqBpH7J6hLwNCoeXBTRUbIGvsH7icPs2KHvw
BgzU0Hgu7dw59YUb7i06BFC0bMHOnSd8WpYXbr0p/vacbAu4nuSC3/68YH06
qqlC3xZSRDa+8z/gBXXfbP1MCurvb/KlBs8HRY+yRR0NbGGicNHc6B4fTAj2
xD+h2ULBWoud4eAOcMA/7hQ2tYXhzmWRrN87IHCcv2sYeYvAQd/vkvzQe/PQ
sVwzNB+p2dByH37wsqJkbbewBevZJ96eq/xAsi7weGeF2i/wJGRLCMCdtZ2f
uOxtYeCNxWowCMBCRe1QCfKq4U8DV28B4DfziSU7oPmY+/KrVwhAlm/0kpuj
LbA0YRusBoIQt7va69xuNP5AJguLpyAk+muy8TnbggB5JJU1URBO/HvkchFZ
kWtJlrdLEE4aHsBf3IPiobblgKObEOAIA6qn96L+fKqd/rFC8NGecXIaeepJ
V8TZUiGQCnrtt8/1v3irpHXNCEF85Ztw4j5bKD7WnhQaJQwi9DaO12624Dtu
pFt+TRhqz1l/09pvC2Ozxz5NPBdG52bF2AzkzyfiZXfziIAZIand1N0WGk5Z
gmeRCERGnX2S62ELbt4WXHdaROBA9kHiJDLGvT1z+asI8B2f9db2RN/fw602
V1MU9iX1vG1B5tt/nTrjJAo5qqy4rQdQfjXKedDDROHj0SIRa+SUEGuH389E
oence1wn8me1W3wuk6LgRj6oudkLxZ/njuljLjHACwn9BOSKZJ6VeEcxaGDp
P1+JbN4r4/n9tBiEUlsOTiArloKUc4EY6G66+4PvoC2sEzZCtL+IQWSOlbAf
cgqvJUvpVnHQXJx8eAk5dut6vbC6OJA3HLY0IIPHkWsXHMQhYF/Stg//tR+Z
vMVxWhw200IxNm8Uv5aOtph8cUjxxSnIIod+9Fr60yQOrwmnaSbIw/FbVMI/
i4OURfBWd2RyELfH2hYJYDcUOHMaeZH7WUqkmgSEztvUpiHjVEOLWBwkoGdC
IvM6cjE14UpSiAQ8EY6Uefjfc22dEzz5EmCncvhgG7JB9rBYXpMEcBmNOA8g
50W0pBE+S0Dzxus/75GxNHpr9RZJqCuzcviGfGl7WS1NTRIusTFd55Hn3YP/
zjhJwuXOQx5LyGWe2ygFkZJQsY1aufLf+zlt99uUSkK1VCv9P88/wbmxdEmC
Ip6VsIjMcshH5cEvSTBe/mk5i+zpy4r5iUtBj2F+/Rdk7zv9PLJ0KTBxXw8a
+W98lxq5x49KwaMY0dNd/1n4etXlLCmYSV1+Vo+cUnXgm/MTKTDSydtd9t98
vUZqBD9KQfVHNu0s5M+dM+uDW6VhvJu2Jwx5TCS0KVdLGjZPOzzf/994tu+b
dd0rDexzjEgashvLNe8vZdLQ5zHVuoa+n0ROU3ZFrzRYb6l0HkD25KzkDF6V
hgn+01rl//d97z1ll8XBKMGy2Q55cjzk/jQJB24R/qHSyCxSI7qvrXCg8Kbt
9HeUXxMHyQ1Fp3Dgd9ndIQI5L5+nLjkZB5sO1avR/svXU1SF4/k4EPiX5sCC
3LFoY2HSgoOOlg+h4Si/S1JNWL7zy4CTqAPFFtXH1MqTtUF5GQjKjDy4juqp
F79AfUaRgc/vm4ZuIfunm0fmeclAYOB8/jKqxw62KBeLWhn4+rHp+ilUr8vG
T2f02mRA1uwkjhv5uL9kPn5EBkpE+aauoXqPfP1DY50VDzuennF5jtYDT5bi
q3ft8RCy+8Wz72j9sGSr8Sk4hIcFXZPLAcjLliaSZ8PwsJF/u2HWBa1nK9kG
XtfwsHO+/+skWo/k6wdv8S/ggZ5X3f8QrWfO1vG7DmcQQF5tQHbQzhYaabjv
ayUEEFv+pERGNl+yUkp7QIAG/adDebtswdVVK+LeCAGO8PsqOtqi9fpI+PKq
rCzQ1DdVl6P1dkMgZ7ffY1m4FA/BM0xbYD8l9Ge5UxYG3rpyKSMfzW9dixuX
hVT3eYtDDFuoE81dzmaTg3FrmxcDJig+z3IPPLCRgyVRrZ5ctB+M9zzc0fNB
Dvr2ZUhWof1l45mWgc2iHPD4CZ5sI9nC2lxJaCenPPxZdAkaI9qCl80Bwecq
8lAiw5LAqofy75iqZ0WwPBgSNF5poP2qdB9mabZVAU6pzeyRRPufblYwS7qG
IgTIOs8Zov31Tlqu/0m6Iih2fqv4KWgL/O7Vwk57FOHl+uvHpQK2EH2CRYA/
RhHkd0u3sPDbQrh8N0dojyLEGjsV5nGjfDtyfHDSXwkk0973mKH9OyWzI0qx
TBnmQwI3bqLzwUTGvs6OemUIoz8N4PxqA32s3SU+r5TBoPMV9eAXG0gR7x++
sqwMARyyswIfbYCRYdX6maECw1ojmAs6bzTgnGp/T6iA9pbo817o/KKpUz/O
IqwGajl/GfHofKQspzLOoqQGS8G+IXcrbUBVjFtyg6IGH1UPHhkpt4HFDiWz
eXc1qNZ+l61UZgMFDuRXtTfVYOLUkGBlsQ0ctRRurdBTB1kNC3GLTBvwXSft
3G2vAdoSd0uHj9vASazaddFLA1Inu5YaA2wgOsnMMSNIA65s0Ra57m8DdjL6
po25GqApNdvn7WsDtueN6xbeaQA+jUejx8MG3LpVIt/qakIvC7ZGtrWBM27s
+tCkCW/cKptPKtlAAC2+uLxdEwK+/dPFKSC/11cX7NWERZ2Iok5ZGxAi0u9/
nNAEf7qShwTOBmYC7LUPb9KCH9Yql28I2UDhykldAaYW8CsVnt6Dzr9cxMW9
8x1acDfWYNkAnaefjgiVSbzWgvVdJ1LvoPM2gfJ0zPStFkh0X1cTGrIG3LfG
hUvftMDCMvLi115rWHswdFGYSxu2TwRsnGyzBq6X3OwPLLUhbT16XLXGGtRP
PN9Of6kNec1PzbXOWIPgKEdif582qm/NY7Lx1vBMQFz/wKg2WG674iYYYw07
TMSdg2a0YbWopWg+1BpM/FhFwnh0wO3Ny1ep/tZwWje4ZM1eBwb6ffPdHK1B
KGBKt3tIB0pDNyl4SltDgR5RSf2NLpwtjyaroPsRfo/U/ZBxXWileXkMVlpB
wuXVPQ1fdCHPw64nCt2n6MFun4wWdaEzISf5Bbp/WXuvDuF26MEI9i3aOscK
fpJzS50t9cDhOSeVNcIKpg+V5EU90QNdlrLXKnQr4HK9NXzomR6U1VVfLqZZ
QRDW+duyQw9c19637jSwAouxO8PbhvQg/Kmm+RK6P7oyg98eXtCDx+8UxG/I
W8ENf/fAZAUiDE2L1dVttQKp5I/OezOJoC/xlvchup9+oO4oP5RHBIJacG/Z
S0vYZflPKKCICNc6t/RcRvfZJsqa2qlKIqw+a08MabSEOZteadsXRDjqlccq
XmUJk34f7ZksJKjL7zDeccESxIW8CSp+JOh5cALqLSzhzSvunIcnSDBnqjx3
mmkJTNWqD4ahJOj448iqY2wJfW/t1mlnSHCXMO1USkb3846LXPxFJLiZ3zZ6
SsESCt8sT39/TYI7edPR7eyWcNb3+toRXTLEv+r8atFoAQ6kd7/tKGRYUSw3
nH5sAXkCVzAdIAOx8anq2QcWMLXOWzhjRQbd7P2jzRUWgOU6+qkcJIN1WGuB
XL4FhJ/YPTmaQYZwyu6W26ct4GbU+O6/U2RYfHvQ+oGGBXCt3dZwnSXDX/4u
VRUVCyjOeVNY+4sMdSHyPUXyFlDh5ENy3iDD4ItnLmckLSDox08F3536oEgS
qjHeZgH4/ommBwb6YHTk+PnYSXMomXQc/HFeH5IfS3+ULjCH+3cq1X0z9CGr
YWARyzWHe50zKeOX9MF0oVDwwEVzoPztoDZd1YfJmOozhefModFrPtLurj7M
DycY8oSZw5zS15ia1/rw6lri2rPd5vD4Jd3RZycFErLwyvE85tDcu9DiLkyB
gLawHZu5zCFu/rWAozgFrnwzUDrPYQ4R3k6OGgQK2NZ4zGasm4FfXLfiQ20K
LO5I/5E1bQb4RaL3uh0FCjZ+3TvRZgZcQcLt3ucocGs5ZntJlBlYCPJVyaRR
oKNU4mBFqBmExH+8/DaTAkKsArMPTpmBW9zbCMplCrBefXK77YgZHJjFrLBb
FFhrPvd+fLcZvPG+rTfaQgHlPVsSvquZAXdvha3ZKgUqhr+VxLwzhZVexfde
fyiAHVA5dGrYFGINPXaHbVCgv9vvnE+/KRRIhM7lsFNhuegOm9ULU0jqFGi+
xEcFysbJt9wPTKH1/WXCFQUqyP2y2x2cagqbDGv12+ypoOZ27u4niim0ccRq
7XSiQjOPTLok0RSUcA3F+5ypIFGsxrNHyxSU16mfxl2pwJXrM9ehYApSls1T
VQep4BCe4VEmYAp7PoxFBgVRQWGkj2XPLBM2x226ExpCBcYC+Jz/xgRQ5jYN
DaXCwqhCdNNnJhCv9XYciaTCaAPhpfwoE55+if0umEiFrEeaiwvtTIg/scsg
K4sKTzc150dcY8KRWzelbC5RoSOg+1F5ARPY34f5suVQ4dLHw5dHc5lwVf2j
ptdlKpwu2FFLSWNCNYifnSqiQn1cjetyOBNK15b/CldQgeODULa3ExO87p9X
OFtJBVn2nMuZu5gwG+1Su1RFhcQvHai8mbDuqTWN1VDBJ08AEzZmQsZek7fS
j6iw50Hv3Q41JhhpPPT7h1EBd8KdT24zEyID6E24ZioUey/F+m5iAt9f5auG
LVSwN9IaL//LABPtteUjz1H8RCUPai8y4OAzf/ELL6jAHe//0OgDA4515z05
95IKX668Lo8bY0CfquTHhM7/xjOZ0/qGAT7yJi98u6lQNXfLwbKHARbxTQvr
vVQI91SL3V3PgA7NI91Dr6mgE/XUJO8hAz4HVmpU9FGh8f5W9tEaBsRzUJMt
BqhQEeaW7FnGALysRJTtGyoMnMyu9stmwNEgRgr7MBW0w6tTqjLQ701eEHmI
/DLvou/CeQbMPR9t3zZChWxWMuN0PGp/kn1/3BgVbJkl5xICGTDr+Cp15zsU
z8GbWNtRBuQ6JME15KesMZu5fBjwOFRb5+44FZ7XanRluDHgp97XExrvqbAx
Y2k9sIcBXdTNuuXIHBpNH4QdGZC4U8AkewLlyz+SfZEFAx5se3GB7QMVxsVj
1D4xGEC8HOZ2DFl2bylBARjwMOVIvM5HlB+8PF53iSieJWFv05H7Pl+q+KXF
AI5n8ve+Iq9mRguS1dD8mRyzZz9RQXR8w/QZgQHnFnl3DSDXFb7ZwSnNgGKD
o9pin6lADc/9ZynGANnjbHn7kDWPeezIEGSA9mJnTB5ygp+d+SAfA8zhwbde
ZGvP8zfEuBkA4zWD7F+oEK2mpey5mQFuRx/QdZGvlnu9ubGJAZYX7+t4IJ+9
DVXf/9JBQuzGjTPIGjPf72r9poNDX9TlW8iG6mfenV6kw+Q1Iu9z5HlpNXLj
HB3IcR2c48jNPuzP2L/TARehFvsTWeaqSpjVJB2mKjwjNk1SgezQciDrA3qf
qfvqduTSrTMRb8fokHOWsCKALEdt68AN0+EJTThMGDm90+c6az8dBj6J1Pz3
/OH20w0fu+nw2VCpiBvZhHRYsLWDDtpZlvR/6Pe++N26e6OFDk7XYq/OIK81
3EpNbqSDXFlv5QCyqNJw5ZHHdHSPMg56hPwov0zA+j4duv6OzF9CfjqT0qx+
lw7PdW4RjiELT0zV7biDxqNRww3Ie+TIvxdL6TCRz1GxHdluz2TicBEdygpr
WYdQvIv/eO1vuEKH5pH27ZeRXeMlE4uz6cAZ6NzrjJzJPLOWmEGH0BSVsGb0
fePDRMdsk9D46/I9jiNPqspa6sbRQT17eF0E2fJa3naxSDoQWSXcXFG+ONuE
X5k8QUfnYRepXyjf6jY/9+n2p0Pe787cJOSWZN20+4fpcMpvqPoqytfYdupi
wn46mB6tspNBxhlW6/m7oPhtMi4rQvl9+tOmYSdHOkwrKcWkonoo4/jDULCg
Q1Cke688qieuPZSpXl06ZO101Y4dpcJ6a6lLgwYdEuX22wyg+tvMuU+vTJkO
+s4Gd/3fUkHlmod+HI4Olmrsiu5DVBB/XnuRzE2H6sihPRcGUXwUfNIUNqP8
4nAzeYTq/5t3J4vwJjpcbTlp/getD3QON4eVFRMgfWuSZryiQq2fV+/TTybg
lc2vatFDhQLxk9XV4yYws4JfMkfrzy7TzJ2lb01giFTYSEbrE6fWHd/UVyYw
3U4hvW2jwh/Cr+CD9SbQlPOcQ+opFdrVOvaqXjSBKuX1i1/qqeBuPrAQlWYC
95YuZ5Y9oQJ05fP2njUB3kCTMVwdFcZ65ieCY02AIbWlbqSWCm41D9baj5mA
jo9I/6lbVODzduBKNjcBrtpz0T9vUIFFTTr5A90EpMObC/1LUb53TeYb0ExA
np2V5niNCh/jFzIX9UxgZODY1ukrVJhjPn7lRzAB3RVzaaMLVGAXfpQeumEM
cc+0TYPOo3w9oyzw7rcxlD53m7pxFsVj2z0TkyVjIEwTi/+coUL3icQSnhlj
EIm7NX08mgpJAzdT7741hpckkmNCABWM3Gw5dz4whs9n6n9aWlFhJlv6gK+/
MRTk2OuUm1Mh4iH1x/7DxjAS0jXJYYrqMW4uzMnLGDTZK27fASqk1hnnM1yM
YSKF72GNHqqnxlBFLYYxvHj57eZDKSrM7jrSYiBhDGfPfVMtmaGA5p6lfMVu
AInJW+EO3yjgTtZXN+5AYd3p6vL3CwUs+rMWXFsAuHLK203eU+DLSMyOrMcA
fA9Gs1JfUwAUfr/nuQkwuK2oXeIBBdLS5tgYMQDh5SJZITUU+H77x97j4QAP
TVP/vqykwEJD3erVYIAnUWP1B29SQE87R+ivH4BB/9slp1wKRAtGrL90AZB6
2vs14SIFPLznn7E6AcRpfUyoTKeAtdK3Uf1dAGJLbE3zyRTgvEfeWYWOB+4L
gZ5ciRS4bRyqMw0A2a8rq6ViKSD/lrtKwQDQ952rVoukgN+bI4k+JID///9/
/wPaJ8sp
     "]], LineBox[CompressedData["
1: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
i62SuesaFmReKJ3NIv54R/j9mi0LpaW7Y5uJf9tdLrYnuadtSUQ/c48AVmlv
blzwYmE8ZdbmYGLlNzYt474s6K1KXZBPXDEna5Z1AAsmDuJjjcSvzFc5nd3J
QqAjf/ZfYn3u/puje1iopbs7rggV4If8Qk1+BAuvPpo0c4klU4MKT0Wz0Dzw
LNqP+ESWJL4eYiG/Zo73IeIISftOVhILL3In9uQRl11tjU9PYeFQelxNFXHF
Zjn6YAYL13ZeNHpF/PvfHjGcYaHllcvHPmJrzpGHx8+xwFY9de838eapDSm9
F1joz/JskgwTQEPmmrfJVZILDa8smEOss7DcJKmEBfPHwYmLiLUmXOTe32Bh
U+9t6jLijfuW9dOqWSj7GSm7gnjCNbwq/j4L1zWqF//nPL+vR98+Jv27N8Tl
v/Pv+vx01XvGgk/plWf/3U9q+Qy1g00s8vuNO/973muvq70tLSzMGE0WSBEX
jjme0eokz4vj2v0h7U0rTxDu/8BC5vyYY/3/ecudz00kR672tBJrJp4/tGu/
+hcWvMfzc6qJ7RTUpu4dIf1tmr4rn7ilfm3os98sjFiq740nbu4Lalf+x4LO
bLfSLcSzpRO8HkuzIcr6UK1CPH1oX6ziLDZmGlkemyD993KSY3LAXDYGrEJS
m4i337m/YZ4SG1fsg2kh//V/jNUcnxVsbI92eckmjrtYUnhzJRsypyzPyhLf
zJGLcdNn4/Ed9/ZTZHyNtLcoOxiRXKl2fqcX8fRM3RyRORtD65xPqhOvtSkw
NuOyse/52swLZPzewzobfSs2zhwpCvQm1juea7lqHRucT9XNS4ldLgqr5J3Z
qBzTWneEzA9+ga75LHc2/L8UbaYTm4a/TJHwZsNrktaMb2Q+3Ur2uvM1gI11
uQ5SQuLvna4/Hh5gw+dw3Z1uMj83tTZI3Y5jI/qTaEMUsc1R1f6iRDbeOIbs
VyJeHF06LSuNjfuNitHryPyvqx0q9bvERnljuF1WoAD9hpsTJhrZeCRFo1ds
FWBKV2zbl9dspEi+/KJDvFJp/H1XOxuRKR90zpN6tTdxbNHdHjaKmEN+CaSe
SRooTd3/h422yXvvGvmQ73UxsujLMg6e+u1ZutRTgMRQ0eR2VQ6WdxVIBnkI
cNi4/8/DVRxcUik7cIfU35Fb+c2nqRw88FUw2UDq8z95yhIuj4Otoi+XtriQ
+W6m3REbyEGVhl61ogOptwYruHa7ODi4wBVCewFc+fd4yqEcdOcEbt9D1oce
sa3Tbx3gwD9d7kMDWT8CVocE9J7gIE+uT3a9NZlvcfZXNG5zUBRzovwfV4DW
9CV/hu9w4OH2do0McWj/+vqyWg68zwVmyVkK4O6fOYrnHFxN2milyCbj0z/Z
es17DuA6aflcugAq1bVzbaQtQa+9XJ9qKMDlr4+Xzp5picdMn9IwAwG4gypn
nsqRHD3sYu9GE2Ayz3vIUtESLo1Tq5X0BVCKjSpfTbFE4IxmvRgKab/rll9D
tpao/LOlu5usx7ub010Hz1jic9Rb/0+yAuR+UFo2fs4SmNV5wG8WmT/CU3LT
SI5fmJs40jOD9JfNi72qJZaYSDnf+1pGgASvgxybR5ZQ12lbmknyhfCw5o4D
w6Q9LrMZ2T/5oK1MddUHF55eL/eWtfGxIlOfo8bmov6b7ON3LXwkFH6nKPC5
WLTsd7jMGz5EYZZT/thwwX3VstK2ieS1bSmHrm7m4pt7SPyjBnK/lysb+45w
cUfFe4h6m4/XMZ8fxLdzMe6evFTtJB+jHhV3pd5xcfHAk1yVTJLXLGMqYz5y
wZ4z8X1ZOh/SHg9y9w5x4VVCk5ibwseGTaJFrmI8xHj0DHcc5mPn0ZePhpbz
oLhskqt0GMlTc2/GWPjxoObxTeeuAx8nxvWls7bxkF11KinMjg+9ct3NP4J4
KBP8eaJnw4d7blBhfhjJ5ZGTBjNFfHTMDhSOJfDQPv1f5Vo2H1bBtNYtV3l4
isV6jnp8uCoqffL4zsPqurHwVhk+qgqDNb795MHwyi4slOKjuO1of8Q4D7v7
AtIdJPi4O6X53Qny883JWbPq//FQX298opjkaGtJvlbqCA/vnNMGz5BcHJHq
1F3WwYOZhN16XhQfXLbuL2ohDw6hpbPzD/6Xi2cpaVzi4YP6n2WTyHvLX5z+
c1EB2S8IVzOKj/PxOeDd7V85PPTpp7qK5fHh45pTfSKVhy4d3W/8h3zsch9y
3LSXh/SXHj+PknFw0nuXyIbLw8wDF78FkNzopmf9yoDNg7q22wYrOQHst/oF
LWTwyHZs9abJJEcmLA791mLCQ0ZblpPzSgE+3/2kxKDw0HRq3ecaMi8s9j7v
Kp/Hw+Hh91KiAwIoBk3KMCf9Kiz/mPnroADvQ8qCeju4sNIwCc2JJ+tEwO69
R1q5qC01Wjx0TADHrF3LX7/kIuWMdFtQNsmx2r3N62q5CL0avmXlbTJvB42O
jVzkQv5dcy7rB8lx4uUOvUFcVLzSas37JYDY1v2VvgFc+O4PsJUYF4B9r3Pf
wBYuFvoEz6wWF6J9SYlCrxcXgU8mRS2WFaKp0vZJgz25X+6n6zEaQmyYerCb
b8xFhJKw5q+LEH/OODxeIMZFm1huvYq7EGNDAT6bxy1RkP1ETOglxOrusojS
X5bwjc3+mOwnhJShy0Krr5ZYW6AaLbNbiObCn/J+3WRe8cv9s5OE4Kr8mOx8
3xI/zZMb3auFOF+zqU8l1hJxc9U+Jdwl7ZHebf4tyhK1HtOqSx8IoRHf1F8Z
bokVm3VTxRqEeJJFZVsFW8JnTKk79I0QV1eOUBw3WWJ42gzjSV+FSK+T7lZh
WiJjcXyXaKkVJmJuUBP/cjDEliulLLeC5fJrh1V/cyAsPLNypqoVEp+2u1SN
cLDTMvHLvVVWKFd6Gdb/iYPmfdpv5AyssF1b7Y5WKwfhgjQ/MysrPHbxiw8o
48B8lq56zW5y/Yb+kS5/DiS7zxxXC7WC2XDegUxfDgSH5rxJ2GuFGn7f+3Wb
OOAHFvZb77fC7jP6i2ucOVCaY6tUHW8FdYuQowkCDvoCV9qsPmWFPY8nvIfU
Odi1cseX4BorpPXzrTq62WAeT3BPv2sFh1deijvesjFNsiWz/L4VXm+z6JRs
ZcNswY+NXx5ZQUb8KEv7BVmHn1Zpsl5YId9xyeVt1WzExCZaR72zQvbaO++r
stgQX1xpZyUmglXy8YJzNmyU2WyiicRFuFF9+9UNERsBfkU+wikiLD7t+/UJ
j6zjIR+rISVCR/To728WbIQIn6lLy4qQW1q7W0eTjfG3jzbLK4lwvpTvHTqF
rLvJdu2aJiLEbtu2xJbksGRKf3ezqQjWxy5380hO65Ex0Ag3F8FyMPSe+UUW
Nuso7LlPF8HN72SXSjYL33Ify+hwRbid8qSo/zDJXUHT0qJsRWgJPPaT68nC
oplHOHJbRLgg5+EYOJsFsT1Nm122iqAv+h3tNZ3kbg+x5jx/EV7+KJ60XpKF
lItZadqBIpyka/00/cuE6qeZ+Uq7RIhH/u+JPiYW27w5GxEuInU9Jt2rhomL
neZ+ZyJEeP7B6YjoFhPyRtohlZEi9Iv6Bg3KmFDI9PMdihLBpfRpv9RlJnzC
29J1Y0V4mBorcy6NCbl21QH9JBG27WhTqdnGxMTrIxIrj4rQ6rN9bY4vEwub
P3guPCbCpZCw8f1eTGx4LOobSRbhSVx2M92RiZetw1KHTohwYK/qvVtsJva2
5ARpnRLh5kfr2xlkn6f9Ze6ZH8Q3OjIO71jAxOStp2VunRYhI9twWCjHhF6E
wmmzbNK/pvpRE5JMiJt3XFt2VoR/4jZfnb8zUFF8aMOmAhF4DHFzqToG6Pvu
/hkl9uFpylIfMKC6aGD1wQsivJm1NtO9hoGOtDD/UxdFqLM0bLtRxsDbq2J/
Ci+LMChrobP5LNlXL5Jw0LoiQhxT7P2x0wzEz/nOv0A8v0reoTKDAdqSuT8z
CkXwG5uIlT3KgGEUx8X1GjneHqBVtpcBkXLAtsfEi9VuTuvczYC6b848vSLS
/pmVJZI7GBiaU6UyTmzRnrZlvS8Dp6to/B3XRWi0j0/8acdAsYukdD2xleTW
7iVrGfiwSs1laQl5n26faRwhg/Sf+IN7xBtLvd8eZzBQuUjq2OdSMp6EDhe0
KAxEKun80i0TQSV6tNpGgwFrW7mRHcRLFi8o2aNC2jvy4MIwsarxUaMHixiQ
VN/juapcBPlSxpOB+eT9l1ws8iQeDddgysqR4w5rpj0hzjMXtTpKMfBR7uL8
CWLFTR/+RkxmwDF6TZlmhQhGJl5SeRN0RLvpD6wnlu3/8+fxbzrOD1kVRxFH
n3zVPDRCh75c8syLxONxy07NGaajDj8nnhLP6p22xvATHVFxk07OviHCt2+B
ofvf0dG+7wSXQhy3kjOa105HMU3zEJ+4rHubR91rOi7KV7p4Eo9sla8ZaqQj
Wwm1e4hNFgbKznlKx7WO4ruJxDcsztoaPKZDL2yWzRniZGpnotN9Oq6Xrd1d
SHzEfu3tiGo6ZD7uotwi7vin+uHsTTq4X0PCHhDfOpo4+VEpHVXO652eEOv7
FSsOXqNDzELuWSNxy9BdHdnLdHSx85pJ4UFY1CD0z9MRUiob1EzcdMhZtD6X
DkUf25wmYoEfHPeeosPnaaDXc+Irhx5syk6nw+iL963HxI1WCkH3j9ORUtT+
oJp445z23IgjdJRdNPpZTLzPfedr40N0nIjcv+YscV2gx+zRA3S0FFQ8PUps
H6K6riicjiafDzvDiDlXkLV1Dx2HXskw/vteTgzdIbWddBS81KNxiRM2hwjf
b6MjboHXWg3iY7wT5ad96VBXOX9c+r/nzZ6m6+hFh7a1xN+PpL9EH+xvznOj
o/tWXGI18e7u37YvNpDznUzZJ4jj1XaKJ9rScXB41Qo/4suP2fe5a+iQn+ml
YUJs2jKUNYVP7mf44XITGU85Hg+T91rQURvMW3mK2KN9tMTQmI6SHN0nHsRJ
d/9+G9Gn48i0p4c/kvH7IuLYI38NcvxXXn4usduCJZ4aKnRkanP7nYl3Ze1X
6lWiY+Etk55HZH6oH2iY7D6Pjm0m5dmhxEqO17WXyNIx6rD2wErifZMD97fJ
0CGVa34nnMwva2Pfc/ZidPTuKVeW/G8+xlrJrPkEVFHal+YWi9Cd8OrUjB4g
WPKLpTHx6RHtTQ1dwHML+9keZH5vvrQuld8MdM7LTEm6SupTMjOPdwdYH5TR
MYfYpt90kkwlsN0s3jqV1JPk/f9O1pUBK5a9KEki9WbH4rYM4WXgoqd8mMcl
Um8D7jbapAHLG+8seE7qV9eNdvv5yUDKteOdxsSCjOuqLQnAv2Snr5Kk3n0z
SrrqFgVMDNgqR+aLMGPq3aRAf+BCqOP7PlJPBW29r3OZQM2eugU04r5vlyPu
mQPNnPmvI8+IsN1WJfyDEfCq/8foTFKPmXZTo9V0yLaksbdmRhap9/PdXxUp
AtqfVhakpohw0PiNUdEnCxh63c++dVyExP2X9k+8s8DgMxu1TrIeRLIOnBK+
sYDTbK3OJWS9GBrocvx03wIzqIP/IhNJ/1y+Qll92gL2nUWGz2NECDl/ymnI
2gIln9NWPYsWgbFz4RS+pQU2Rapdqz8gwt9JEufzzSzgvZ8dcHs/ed/U0o8e
GhaIf1vYcGCfCOnGwYd6J1tA3b7G4uROEa6pau5fXm6OuqAi8YmNIvDHxt8E
LzHHtevnBWVupH5cSDVRnWeOGGVny62uIlTZ9L9unmYOw3km6184kXqtf67W
5LcZbrw+2hdhL0L4s0M35zaZwVjXa1qAQASpEeXBKfFm4HqnlqStFqE4za/n
86gpTr7b+2uqHrn+ouDRo8+mSOBJ/9mhI4LhOQ+NvA+mKJmVbGCpJULp7E+7
PRpNUTEkfb5RlayPXa67vlwxhdOM+MJ9CiJozdzUZbvJFBJbMler/bVCnm54
mvMrEwQm1Veojlnh51e19RfqTWD6+uS55b+tUMk7pv3rjgky4Vk874cV9Btj
1E4WmmDMIbKsddAK287LnPgba4KWKZve97VZYVqw1n11ExN8PjtPemGFFXxV
c41WnzUmAyQv7mGpFRxDiwcfZhhjzHxdVNB1K6ya6j/N7agxXDvP9NQUWuHe
oaATKfuMca7gWIxFnhUOGKZqLl5vDCs3i+v3j5F8qJ+Tlz/DGEFikvnffaww
KCyQuhJqhGIHta5wbyvUmp/tpQQZ4a2C5ZiklxWuh4VolPoaoSx1qHmOmxWm
tI+/r11vhCOb3+rL2ZHrvTdslDQwQkLin7kXYYUH0c8EE98NkfD62VP+fJJX
lelGjQGGaO2qdTk+xwoZPZEJeZsNoT8+pbtF1gr3Neqjw9wMcc5i0pON06xw
Rj9sK2WNIYIr71jYi5Hnd0tZl2sbQteOrtPVL0RdwdXlvCED8O5IzN91i+w/
zt+qiAowQB/7t5ZKhRCXUtgnHngb4GCfT3NjiRBbYh7OmO5qgLKex+2qhUKk
6ti9Ois0QPNThfaibCFqp9fK/ltpAJWHxw/bxgjhOPfxQe+PNLjchXSTUIjS
edq509xomPlUgmrIEyItvulZrT0N+SHz5mSyhWBx1w/EiGhQ9wofsDcXQkZv
6vAscxrCG/erlFKEsNq9JNpmMQ2pw8O1U+SEmJnrPJ7ZTsVwnv4p1kyy3/g6
bfmJJiqit9w0iJIRQl2O45raQEWtrHLVKNlfWS5dpJhdScUOxRydB98FGP7B
+t1zkgrVHgrv+xcBlopZS01OpaJA3ZyiNChA5wTbYnkiFRop0T6BHwTw/B2v
HbiP3F91blVqlwCnX+d+Ovnfv5OZ3Pixol2AAX+D1if+VEyJ/9TV8kaAKX8v
jIt7U/H//9/vf5RNlsg=
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
xWrw+dn1fo7T4lDCuUWQvP3vdyouqVN3xSGhP+qiIO5/Ve9avVZZi8PPpJ5D
rf9+B5M1Z3g5icFvSxXzyht4vEAnmk9SDHZfOvb61L/+6t54i/NKFLY0VT1b
XcYCZBm8f8dWUVjyZJ47Uozrb09A7dY9IrD3vMA0A/u63KNpkeYnhUBwlSx8
OIfjE9ha/maTEByTXd53EPu8QTFCVzpFCJzJueXVZ/D+7uwUo14ShKDJYPro
CRx/N8dBoTsCMHBTZTk7EddbH2KND/BBY8240dxh3G9YSZdzSvnA4bS9u8ch
3A/Uvnc57+ED9RuUvUL/YdZxeTI5ywvNidFkq5h/7+tI4pHghRtGmnbDO/H7
cqLD/FZxg1mcP9d7fzy+L3oN8HLDy3MqS507cH+rcRyhN6+AZddQVL4N5xvJ
vMV93Qpw+301QtcNf688Tgye38wFfh8NBVbb4nhI3bNb073I9hphq00DjtfQ
D4Nyr0W2SE1hWoE1vh/GUidraIG9Kv6b1TATfx8aiU+Gfs6zxdoiHYxpuF/6
K2hYi/5hs43XnZyWx/O/oK3bN8ywV2/8U+Uh+8+nZ5Se7JtmO8ZTVtaS8ffg
MKVpbMc0+w73OdWdUvi+nl1Zou/9xbbbeMUmnR/vR+uw7PeCSXZbUPCnuXHs
+zaUHVk/8Z09H/zd34djCTAtwv9o1Tt2wEPjCzsbLCGh26Yhq+AN+7371Jtd
/34nJ40bSv/pZW+OQBG+t/F4wKdv8re62Y72W2RUr2JOLmt95tnOdtKImvt6
Aq/fJy3ZqZrN9lKMiT2CfSQM3TeqE+7j6B4hyom64fUI67uC895wXCcj+zM3
YvZ+qeev9Y7TXt/efnIdXi81K0vNpp/TzSF6erOwfpQNY4+ZDnP++OePWSv/
e1+By4DzCCc6k+atPWwBkqRV0wyFKc6VDwNajz5YQNXDdTPNyVOc2tpyO7c3
FlC06YYV5ccUh+7Kuy+80wISsrw1lhp+cfymOJ/2PMS+9ejC26EtM5yz1rWy
x/IsgIu6O/Jzyhwnt+fvBwcnrLc39nbw1SxxLCqpRzesweur12QXEZc5jC6L
Gy6rLMC3v+v5n5hlzqRn6AF7hgXElZpnRctxIb/2xg1/1LC+7vwt09PHhVKs
/enp80yYeCdi672BG1UevZbkMMMEz2j9mJyD3Cj94pdgngkmSEahucob3Ojq
4Rqh4M9MGGQQHh8Q4EEXvKcruDuZeL+57/97wIMyLay+FzxlQitjperVbzxo
inTouQn2F1zl3xyrKLzo+NXEFLd67HM3y5O8I3lRe2G230ANE8pczfOWCnhR
LhFGA24yYaT2zdNDT3kR1z5DxS/XmNB3KCr//Swv8vv/v2eaW/l/f8/0P5Qf
mw0=
     "]], LineBox[CompressedData["
1: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
i/annqonrwpAgsvUgWakz4kXozVDu/jhWPmXJ1+oDJCyyHz4rYQfwrwZZ4UQ
q+/lOh0cwQ+ko+qCPkj/tXylBpJV+IFz+1ONWTOkF8f2Fc9m8UHYx5FHwah+
LNY7NiY/4IEeScuiU6i+4H5qetiF88CsrDauENWfRYY/DafBA7nWrhb3dVH+
bJmZm760HZqLUz6MazIgZMfO3B/J3NCRyo81K6H5jzUDuOw5YSHK4WmNIgOy
J867JbJzws6xqVMFCmi+GVsxE7YNBt248MEEVM90Q5QJuttgCNf7mUkW2d/s
e8ySOAeYCH8aviuM1hsUmXo6ywb4tMI9J4VQPoSp6/29ygbMxhzn7FF9nbCz
HzNwZYOTEmaq71D9xSytw0ZescKinJfiOy50/5315xpatwDOSSUgiBmdZ0HZ
5HkOM+wcf+v+CfULuFRVinnOX3Mf+6sXrWZRP5Mq8DBu44/5+oCCau0X1H+E
J2uMBfwxZ+PRCfdG/Ya7mFIMM3XVPH0sobAV9SsT/iXRc7+XzZVpSrnfXtpD
YnZMjbPPD3MhE/ueQ432AMTy73VtE+ZC22JngxrQ+JrQ3zSzD+YZd3OjTtyw
ByZPpjN7WcbNe0y6ZnJqEWf/TH5ydsQcMlpwl68glvAv0Ld7ae7qNxlkmoPY
zmjnIYOyjkLVuOqLwWi92R0uFaFTHTbRAvpxqL/Ddq0X7Tv2sWPaJDTPHfV/
2MHqlbbwTx2nC8pG8b7o+9usbFcjpjt2LGWFnHNF622TPvUkYq4D39u2/5+d
PZTZHKDL6f3osKtoWDBVRvf1HLWV3/qnQyKehp9A/SluR/S5peQ/Hcr+ASaJ
qH8FEXxY3safjobbmGKLDFqv/0WN6/LfDvlNi09CwmicVB79bWKtY/vs4TQf
ZrTebbt/v/YxYXpfg/riR+yAabCwjSbCimXt9iPNo/7a3aBvJziwYucNlu7t
Q/03rmmpWT6dFRs/uOOD8gs7cAgbHqldZ8WqD135fbvLDmApra/2IxtmGvNi
LPCGHfKHXnbg9a1Yz5f3S+HJdjAzP9d9WYULC6GpBVYmoO/NNkZb3Lkwl7hL
nK/j7JDuRou053NhEF57Sw29H7SyVAfi2Lixs7usurqPoPcEcdeH0Q/c2Pcz
GecuOdkBx5IT09ZsHkzE/lbJsjw6zweNntkFPuxFUWttjZwdlA0IBOC5+DEv
z4nygzJ2MFI9zmunxI+9OK28874o4r8p9mFu/FhY53jHQU476A2uatr2kh97
9H201/S7LUQJpLscui6AXWozsj1xzxaEWmMtPfYLYfWPf+1evG0L/T2BV+vC
hLAesSKvww22kDsaxfclQwjbWnK13LTGFtYu+jCpPxTChgQGqt4X2UJqYHjA
srIw1qJyAOs6YQtOvM+5E5eFMY7QAg85si0kGtZUkpNFsZaHPjsLzGyhbFSv
YapAFIuIXivfTrKFp66/hcNvimILCcuxP3XR/Lt84wFjothQSKRknYItNKl8
7bimL4YtNfX2DnCg+ZM9Is6fxTC/SFeN5T4bqE670xprJIHxgk6qcY8NCCVd
7zRhSGACOyje8Y9t4LUDLWbBQwLrMuiuYe6wgYIzKnOEDAkMn/Lt+MpNG9D7
NGs+NC6BEUrdZgvP24CTi5O/U7wkVnD+eNeL3TYwxpR4Pfe2FJaT8Kw1dKcN
dI++0jr/VAqr73y5KWBrA2tK26aix6Ww9DJLPweyDUiNV9/g3SqNKWs5zNxF
7/uUf93mdgeksR2VLwd0t9tAXOmXvi1/pTG1nzv7VrqtQbmTbk5Wl8Xmoz2L
vTFraJIpdG02k8VKNh++f/XAGtQXHs6K75LFbt/92VPdaA1Wj/Q0Lh+XxZZa
7d3JZdbwy8uh71Ybmv8p/r5GrDWQU+z2/pHHYcprp1JSIqyhTC44NlMDh13V
dHk3GmoNuEZFNXEiDitoU9RJ9LOGTrkFWV5LHKb6Bl/3YI81KFp1iZzww2ET
fJnr7LusoQRcrNpDcNjWYP1pBztr4DDgW/wVhcNaHH4nT5CtoXvbs3xyGg6r
oC4ZKZpZg9f0m5wD53HYkPHcuQAja5Dp2v7XuxCHfYpxSKzXs4bm+rUe33Ic
JvX//69j////1/0PohSB9Q==
     "]], LineBox[CompressedData["
1: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
ambUGYLIOZlkjUIKpNzrH+FswZWtl9dzm4JPJdX876oMIQQm75+6i/nlysvg
KzOE4oN2tyZLKUj59lBJM98QvBUPTaoAxpuHL7Y20RBWH6r1HuykoKYrIrZu
pyHU/s3fE4fnP/WiHe+zXxhA9dDfce1TDNj07rfllnR9OG11yCy0WRbeJ/2Y
f81MD9qfRvCJ2cjD33iT/eH3N0JRosPhWRtFMDKojExYogPUc/fg6mglmOhR
Ei6w1AK+uKzRQj8ViH3XatVvowH61KlreR2qUHD4g4aKjxpwCssvZeqpgd/k
3n+3zVTBo117q2yLOsiqpnWV5CpBfsdprhX2mhAqrqWi1SYPPaeDDl7o1oLl
jJCnC1gU9vsd22vDdCDoMp0pZigFlMth+YGxjXD75/GY+h1iYFkyHsqO14OU
5OX3+vpXAme8tdSff/oQvdV2OjdFEPzbhi3VVQ1hpVUl54U9SyByS5LuLOYR
B+1d93NoPlAnvQNqimnQbo4x3tUxH9J4bQISSjAPGvLcO6rmgzL7HtO8FM9N
TNeY9afmg6oYv1lHOQ1Xr5r8Y1Dz4WlB8uKux/i9Irh5wMqNG85f96u70URD
hVPk/II/XODIUWFp8oWGj3v4Qo95csCwiONs/0omsJxztntZccCxH5bnQlcz
wX2RnPRhAw5g117KWLoWrWez+KswB2y7ZaSsKcYE/7JOn4/nZ8lEzZulgTJM
sOjsjer1niFJ2ma+WapMoI3PFniZTJG/i8/de7sNv48PMZqbFKbIhdrqMeYO
JnRtVNsawjdFqmxeFuWaMGG4sc46tXmStFdwe/qYMyGadaRD3HaSfG2cYA9Y
M4FDK/iZXsAE+XOocGusExNCH5k8fvdujHRp5YikBDDBq03wUMzzMfLPtn62
JBDn8/CLuVvpGGldFRPNCmJCRYFZRc+pMTLvYsmOBUfQ1TzlRRvHyPxv3hNu
Yfi+uJtprTmjZGffl8Q3sTi/pk25pimjZAnHw96BOBxfTpLSvNhRUvRzuG4w
ngkqHvPqZV1GSZZdiumfE0y40rc01lZ8lPiPlxn/S2SCrMr9VMPCEVLUN1V0
/wITtIOP7Dh/dYRoyXXL5aTM/T8volTy7Ajh2LVZ4+JFJmy77FEzFTRC+Fua
p/wv4/MKfglf2jxCDkDQNpF0JiT0hnzr0BohwUP2zGm09tsPZ20UR4iP0nTD
wFUmNIRd38MnPEIEcnJjc68zod8sj+n8g030HoVkit5kAlxjDZ19zybNWlaL
xtHD7Idx011scum49uzrLPz869UHz9ezSfIDy3NROUxYWPTlUFY23v93Ztvz
fFzv22bnaq+ySYn4kRVXCvA63/FbYhfZZCZ5j49HIY5Hp7P5wnE2uXs/s3Ly
Fq5PUCKn+0E2mdpW+kb4LhOK3X9q1nuwScXnMynDaI604AfB+9jkRotKREMx
5sOXCxerrNnk9s8XHQEl+L7cqglrcza5pbjJ2Og+xuefSrH2dja59ybio1Ap
EwScRJd/M2QT90fG2fce4HgyfGvKdNlkRaB9fXjZXPxL61laOL7raiu2ljMh
v11KSludTQw/pZ9ZUoHxOdHa+UOFTe4f3bWhFT3MevLp13o24ZeS4Lr8ENdL
csDMQIFNxlTqp+wr8br9hMBbWTbhOb5QctUjXK+qRuWnFJv0n79zuBPtxc0u
nJJmE2u7sO8XqnA8ltyxx6TYxMFV+6x5Nb5P9WCFtSSbqLTcclzwGMdzPcEk
UIJNPHdds36Mtpi9ptcvziZsmfbAQILxlH6TmIY2Flxbjd/WwN50p85NtE2o
rnIXeqHYzJZRdC49/fxEDebHvRdFqfi8w18UzmjUYjzijoecxPdlHzkfOoBW
if2UXo/j+Zc4lZhYh+vLkyBqKcMmv8w1n6k9wXptYU/LMthkcRiffDfaSzhD
x1wO4+VgWhr5FPPRr4cFuB6+DXUeEvU4/s+/aqOV2OShEtOgFq3ye3Zpkiqb
mCdc0Hd5hut1WKJ0ENdb0PmU2ww6s8LsXrI2m2i/Zt9NbcD8j9k//7gem+ic
yJVUe46e1LnbQLPJSLXvo0b0yurQO/ZGbEKY6446NzIhueDCDeedbCKtHuV1
/AU+f4NLStcuNlmwtOuycBOuT21E+zUHNknj9fyRjU6IidUV2M8mZVFB3FUv
cXyXbjhW+7KJ+JeMZ1uacTwhoU/Kg9hEeJft3Rdojp3l+1JiMb4O8L31Fc4X
LieFJLLJWh8p2oaF7/srMZlzgU0EAvwr2tD0VYnYH1gfx8+sX9H8GvNR2zp1
XhGbfL1pOWrcgv3uY+77/eVswlX8bJqg87/JzVv5gk1YwyJBha1MEFfd3ebW
zibX7xZ+WNuG8fcobJrqYxOPcI6QM+grT+/KCI+wSf7Fg1ze7fj5uryoS5wj
pGnMcKoVnWC9/a/bkhFifdlipX4H5lfGZHjkqhES7hVpm43u+v/vZ2r///3s
f58bA7I=
     "]], LineBox[CompressedData["
1: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
//t96P8BVILeiQ==
     "]], LineBox[CompressedData["
1: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
Vw==
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  Epilog->{{{
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\)\"", 
         StringForm["``,``", Rational[-1, 6] Pi, Rational[-1, 6] Pi], 
         Editable -> False], TraditionalForm], 
       NCache[{
        Rational[1, 4] (2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (58 5^Rational[-1, 2] - 7 
           10^Rational[1, 2]), 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (2 + 2^Rational[1, 2]) (58 5^Rational[-1, 2] - 7 
           10^Rational[1, 2])}, {-24.64575553961645, 32.06209907184748}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`0\\)\"", 
         StringForm["``,``", Rational[-1, 6] Pi, 0], Editable -> False], 
        TraditionalForm], 
       NCache[{
        Rational[1, 4] (29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (-2 + 
           2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), 
         Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[1, 4] (29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (2 + 
           2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {9.069396043133935, 41.38509813531029}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\\(-\\(\\(\[Pi]\\/6\\)\\)\\)\\),\\!\\(\
TraditionalForm\\`\[Pi]\\/6\\)\"", 
         StringForm["``,``", Rational[-1, 6] Pi, Rational[1, 6] Pi], Editable -> 
         False], TraditionalForm], 
       NCache[{
        Rational[1, 4] (2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (58 5^Rational[-1, 2] - 7 
           10^Rational[1, 2]), 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (2 + 2^Rational[1, 2]) (58 5^Rational[-1, 2] - 7 
           10^Rational[1, 2])}, {41.45531696504159, 35.21842268792107}]]}, {
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`\\(-\\(\\(\
\[Pi]\\/6\\)\\)\\)\\)\"", 
         StringForm["``,``", 0, Rational[-1, 6] Pi], Editable -> False], 
        TraditionalForm], 
       NCache[{
        Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[1, 4] (-29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (2 + 
           2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), 
         Rational[1, 4] (-29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (-2 + 
           2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {-20.49536718986417, 5.188930717959476}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`0\\)\"", 
         StringForm["``,``", 0, 0], Editable -> False], TraditionalForm], 
       NCache[{
        29 + Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2]), 29 + 
         Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2])}, {
        11.500000000000004`, 11.500000000000004`}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`0\\),\\!\\(TraditionalForm\\`\[Pi]\\/6\\)\"\
", 
         StringForm["``,``", 0, Rational[1, 6] Pi], Editable -> False], 
        TraditionalForm], 
       NCache[{
        Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[1, 4] (29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (2 + 
           2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), 
         Rational[1, 4] (29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (-2 + 
           2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {41.38509813531029, 9.069396043133935}]]}, {
     
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`\\(-\\\
(\\(\[Pi]\\/6\\)\\)\\)\\)\"", 
         StringForm["``,``", Rational[1, 6] Pi, Rational[-1, 6] Pi], Editable -> 
         False], TraditionalForm], 
       NCache[{
        Rational[1, 4] (2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) ((-58) 5^Rational[-1, 2] - 7 
           10^Rational[1, 2]), 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[7, 2] Rational[5, 2]^Rational[1, 2] - 58 
           5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[-35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (2 + 2^Rational[1, 2]) ((-58) 5^Rational[-1, 2] - 7 
           10^Rational[1, 2])}, {-17.1866173200166, -23.423511597137125`}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`0\\)\"\
", 
         StringForm["``,``", Rational[1, 6] Pi, 0], Editable -> False], 
        TraditionalForm], 
       NCache[{
        Rational[1, 4] (-29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (-2 + 
           2^Rational[1, 2]) + 
         Rational[-35, 4] 2^Rational[-1, 2] (2 + 2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2]), 
         Rational[-35, 4] 2^Rational[-1, 2] (-2 + 2^Rational[1, 2]) + 
         Rational[1, 4] (-29 + 
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2]) (2 + 
           2^Rational[1, 2]) + 
         Rational[1, 2] (Rational[-35, 2] 2^Rational[-1, 2] + 
           29 3^Rational[1, 2])}, {5.188930717959476, -20.49536718986417}]], 
      InsetBox[
       FormBox[
        InterpretationBox[
        "\"\\!\\(TraditionalForm\\`\[Pi]\\/6\\),\\!\\(TraditionalForm\\`\[Pi]\
\\/6\\)\"", 
         StringForm["``,``", Rational[1, 6] Pi, Rational[1, 6] Pi], Editable -> 
         False], TraditionalForm], 
       NCache[{
        Rational[1, 4] (2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) ((-58) 5^Rational[-1, 2] - 7 
           10^Rational[1, 2]), 
         Rational[1, 4] (-2 + 2^Rational[1, 2]) (
           Rational[-35, 2] Rational[3, 2]^Rational[1, 2] + 
           Rational[-7, 2] Rational[5, 2]^Rational[1, 2] + 
           58 5^Rational[-1, 2]) + 
         Rational[1, 2] (58 Rational[3, 5]^Rational[1, 2] + 
           Rational[35, 2] 2^Rational[-1, 2] + 
           Rational[-7, 2] Rational[15, 2]^Rational[1, 2]) + 
         Rational[1, 4] (2 + 2^Rational[1, 2]) ((-58) 5^Rational[-1, 2] - 7 
           10^Rational[1, 2])}, {
        30.020245452802843`, -17.025454091723468`}]]}}},
  PlotRange->{{-40.572137026130555`, 95.77544650735447}, {-36.55630451732992, 
   95.77544650735447}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.600437115784794*^9, 3.6004371369084787`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rollerRad", "/", 
  RowBox[{"\[Sqrt]", "2"}]}]], "Input"],

Cell[BoxData[
 FractionBox["rollerRad", 
  SqrtBox["2"]]], "Output",
 CellChangeTimes->{3.600449250414774*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 701},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 6, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 120, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[724, 27, 56710, 1233, 3088, "Input"],
Cell[57437, 1262, 817, 14, 27, "Output"],
Cell[58257, 1278, 5421, 95, 290, "Output"],
Cell[63681, 1375, 717, 11, 27, "Output"]
}, Open  ]],
Cell[64413, 1389, 9227, 238, 598, "Input"],
Cell[CellGroupData[{
Cell[73665, 1631, 362, 8, 27, "Input"],
Cell[74030, 1641, 72177, 1216, 230, 60648, 1026, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[146256, 2863, 100, 1, 34, "Subsection"],
Cell[146359, 2866, 573, 14, 27, "Input"],
Cell[146935, 2882, 1378, 37, 58, "Input"],
Cell[CellGroupData[{
Cell[148338, 2923, 3167, 78, 163, "Input"],
Cell[151508, 3003, 149, 2, 27, "Output"],
Cell[151660, 3007, 148, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151845, 3014, 134, 2, 27, "Input"],
Cell[151982, 3018, 74, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152093, 3024, 626, 11, 58, "Input"],
Cell[152722, 3037, 340, 5, 27, "Output"],
Cell[153065, 3044, 334, 5, 27, "Output"],
Cell[153402, 3051, 337, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153776, 3061, 123, 2, 27, "Input"],
Cell[153902, 3065, 90, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154029, 3071, 643, 11, 58, "Input"],
Cell[154675, 3084, 149, 2, 27, "Output"],
Cell[154827, 3088, 493, 10, 23, "Message"],
Cell[155323, 3100, 125, 2, 27, "Output"],
Cell[155451, 3104, 149, 2, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155649, 3112, 148, 2, 34, "Subsection"],
Cell[155800, 3116, 1074, 30, 91, "Input"],
Cell[CellGroupData[{
Cell[156899, 3150, 740, 18, 53, "Input"],
Cell[157642, 3170, 2602, 80, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160281, 3255, 1201, 31, 81, "Input"],
Cell[161485, 3288, 361, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161883, 3303, 169, 4, 38, "Input"],
Cell[162055, 3309, 113, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162205, 3315, 1090, 32, 112, "Input"],
Cell[163298, 3349, 242, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163577, 3360, 826, 22, 96, "Input"],
Cell[164406, 3384, 214, 3, 27, "Output"]
}, Open  ]],
Cell[164635, 3390, 202, 5, 30, "Input"],
Cell[CellGroupData[{
Cell[164862, 3399, 1747, 48, 122, "Input"],
Cell[166612, 3449, 3520, 64, 189, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170169, 3518, 744, 19, 43, "Input"],
Cell[170916, 3539, 1347, 37, 61, "Output"]
}, Open  ]],
Cell[172278, 3579, 118, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[172421, 3585, 6169, 149, 461, "Input"],
Cell[178593, 3736, 3834, 75, 391, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[182476, 3817, 252, 5, 34, "Subsection"],
Cell[CellGroupData[{
Cell[182753, 3826, 1293, 33, 103, "Input"],
Cell[184049, 3861, 651, 17, 27, "Output"],
Cell[184703, 3880, 1602, 48, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186342, 3933, 560, 16, 27, "Input"],
Cell[186905, 3951, 104938, 1720, 198, 56385, 922, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[291892, 5677, 192, 2, 34, "Subsection"],
Cell[292087, 5681, 1353, 42, 57, "Input"],
Cell[CellGroupData[{
Cell[293465, 5727, 1836, 57, 152, "Input"],
Cell[295304, 5786, 822, 26, 66, "Output"],
Cell[296129, 5814, 380, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296546, 5829, 1734, 48, 107, "Input"],
Cell[298283, 5879, 8449, 230, 113, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306769, 6114, 779, 21, 43, "Input"],
Cell[307551, 6137, 2125, 63, 105, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[309725, 6206, 214, 4, 34, "Subsection"],
Cell[CellGroupData[{
Cell[309964, 6214, 997, 25, 65, "Input"],
Cell[310964, 6241, 369, 7, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311370, 6253, 213, 6, 47, "Input"],
Cell[311586, 6261, 71, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311694, 6267, 535, 14, 46, "Input"],
Cell[312232, 6283, 119, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312388, 6291, 3700, 102, 227, "Input"],
Cell[316091, 6395, 2043, 58, 56, "Output"],
Cell[318137, 6455, 1973, 56, 56, "Output"],
Cell[320113, 6513, 631, 19, 50, "Output"],
Cell[320747, 6534, 587, 17, 50, "Output"],
Cell[321337, 6553, 339, 5, 27, "Output"],
Cell[321679, 6560, 341, 5, 27, "Output"],
Cell[322023, 6567, 341, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[322401, 6577, 230, 6, 27, "Input"],
Cell[322634, 6585, 87, 1, 27, "Output"]
}, Open  ]],
Cell[322736, 6589, 235, 6, 27, "Input"],
Cell[CellGroupData[{
Cell[322996, 6599, 167, 5, 53, "Input"],
Cell[323166, 6606, 207, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323410, 6614, 599, 19, 83, "Input"],
Cell[324012, 6635, 318, 10, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324367, 6650, 4012, 110, 107, "Input"],
Cell[328382, 6762, 2735, 78, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331154, 6845, 3950, 99, 120, "Input"],
Cell[335107, 6946, 506, 11, 23, "Message"],
Cell[335616, 6959, 506, 11, 23, "Message"],
Cell[336125, 6972, 505, 11, 23, "Message"],
Cell[336633, 6985, 532, 11, 23, "Message"]
}, Open  ]],
Cell[337180, 6999, 168, 3, 27, "Input"],
Cell[CellGroupData[{
Cell[337373, 7006, 5283, 126, 225, "Input",
 InitializationCell->True],
Cell[342659, 7134, 55864, 920, 359, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398560, 8059, 277, 7, 27, "Input"],
Cell[398840, 8068, 301, 7, 46, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399178, 8080, 4670, 109, 186, "Input"],
Cell[403851, 8191, 43890, 723, 326, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[447790, 8920, 259, 5, 34, "Subsection"],
Cell[CellGroupData[{
Cell[448074, 8929, 1899, 47, 103, "Input"],
Cell[449976, 8978, 402, 5, 27, "Output"],
Cell[450381, 8985, 404, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450822, 8995, 264, 5, 27, "Input"],
Cell[451089, 9002, 194, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451320, 9010, 208, 4, 27, "Input"],
Cell[451531, 9016, 113, 1, 27, "Output"]
}, Open  ]],
Cell[451659, 9020, 3083, 82, 252, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454779, 9107, 104, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[454908, 9112, 898, 21, 58, "Input"],
Cell[455809, 9135, 112, 1, 27, "Output"],
Cell[455924, 9138, 198, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456159, 9148, 118, 2, 27, "Input"],
Cell[456280, 9152, 74, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456391, 9158, 963, 20, 88, "Input"],
Cell[457357, 9180, 210, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457604, 9188, 1021, 21, 88, "Input"],
Cell[458628, 9211, 111, 1, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[458788, 9218, 338, 7, 64, "Subsection"],
Cell[CellGroupData[{
Cell[459151, 9229, 350, 8, 48, "Input"],
Cell[459504, 9239, 141, 2, 27, "Output"],
Cell[459648, 9243, 128, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459813, 9250, 687, 15, 43, "Input"],
Cell[460503, 9267, 217, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[460757, 9275, 884, 19, 43, "Input"],
Cell[461644, 9296, 340, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462021, 9305, 138, 2, 27, "Input"],
Cell[462162, 9309, 89, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[462288, 9315, 960, 21, 73, "Input"],
Cell[463251, 9338, 184, 2, 27, "Output"],
Cell[463438, 9342, 182, 2, 27, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[463669, 9350, 104, 1, 34, "Subsection"],
Cell[CellGroupData[{
Cell[463798, 9355, 17095, 448, 1107, "Input"],
Cell[480896, 9805, 185058, 3093, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665991, 12903, 81, 2, 33, "Input"],
Cell[666075, 12907, 110, 3, 50, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
